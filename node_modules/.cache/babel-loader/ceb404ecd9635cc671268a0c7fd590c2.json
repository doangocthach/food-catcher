{"ast":null,"code":"import { Vector2 } from \"gdxjs\";\n\nconst createTrayPositionSystem = () => {\n  let tmp = new Vector2();\n  return {\n    update(delta, {\n      trayState\n    }, {\n      batch,\n      width,\n      height,\n      camera\n    }) {\n      tmp.setVector(trayState.target).subVector(trayState.position).nor().scale(trayState.speed * delta);\n\n      if (trayState.target.distanceSqr(trayState.position) <= tmp.len2()) {\n        trayState.position.setVector(trayState.target);\n      } else {\n        trayState.position.addVector(tmp);\n      }\n\n      trayState.x = trayState.position.x;\n\n      if (trayState.x <= trayState.width / 2) {\n        trayState.x = trayState.width / 2;\n      }\n\n      if (trayState.x >= width - trayState.width / 2) {\n        trayState.x = width - trayState.width / 2;\n      }\n    }\n\n  };\n};\n\nexport default createTrayPositionSystem;","map":{"version":3,"sources":["E:/fcatcher-client/src/components/game/systems/TrayPositionSystem.js"],"names":["Vector2","createTrayPositionSystem","tmp","update","delta","trayState","batch","width","height","camera","setVector","target","subVector","position","nor","scale","speed","distanceSqr","len2","addVector","x"],"mappings":"AAAA,SAASA,OAAT,QAAwB,OAAxB;;AAEA,MAAMC,wBAAwB,GAAG,MAAM;AACrC,MAAIC,GAAG,GAAG,IAAIF,OAAJ,EAAV;AAEA,SAAO;AACLG,IAAAA,MAAM,CAACC,KAAD,EAAQ;AAAEC,MAAAA;AAAF,KAAR,EAAuB;AAAEC,MAAAA,KAAF;AAASC,MAAAA,KAAT;AAAgBC,MAAAA,MAAhB;AAAwBC,MAAAA;AAAxB,KAAvB,EAAyD;AAC7DP,MAAAA,GAAG,CACAQ,SADH,CACaL,SAAS,CAACM,MADvB,EAEGC,SAFH,CAEaP,SAAS,CAACQ,QAFvB,EAGGC,GAHH,GAIGC,KAJH,CAISV,SAAS,CAACW,KAAV,GAAkBZ,KAJ3B;;AAKA,UAAIC,SAAS,CAACM,MAAV,CAAiBM,WAAjB,CAA6BZ,SAAS,CAACQ,QAAvC,KAAoDX,GAAG,CAACgB,IAAJ,EAAxD,EAAoE;AAClEb,QAAAA,SAAS,CAACQ,QAAV,CAAmBH,SAAnB,CAA6BL,SAAS,CAACM,MAAvC;AACD,OAFD,MAEO;AACLN,QAAAA,SAAS,CAACQ,QAAV,CAAmBM,SAAnB,CAA6BjB,GAA7B;AACD;;AAEDG,MAAAA,SAAS,CAACe,CAAV,GAAcf,SAAS,CAACQ,QAAV,CAAmBO,CAAjC;;AACA,UAAIf,SAAS,CAACe,CAAV,IAAef,SAAS,CAACE,KAAV,GAAkB,CAArC,EAAwC;AACtCF,QAAAA,SAAS,CAACe,CAAV,GAAcf,SAAS,CAACE,KAAV,GAAkB,CAAhC;AACD;;AACD,UAAIF,SAAS,CAACe,CAAV,IAAeb,KAAK,GAAGF,SAAS,CAACE,KAAV,GAAkB,CAA7C,EAAgD;AAC9CF,QAAAA,SAAS,CAACe,CAAV,GAAcb,KAAK,GAAGF,SAAS,CAACE,KAAV,GAAkB,CAAxC;AACD;AACF;;AApBI,GAAP;AAsBD,CAzBD;;AA2BA,eAAeN,wBAAf","sourcesContent":["import { Vector2 } from \"gdxjs\";\r\n\r\nconst createTrayPositionSystem = () => {\r\n  let tmp = new Vector2();\r\n\r\n  return {\r\n    update(delta, { trayState }, { batch, width, height, camera }) {\r\n      tmp\r\n        .setVector(trayState.target)\r\n        .subVector(trayState.position)\r\n        .nor()\r\n        .scale(trayState.speed * delta);\r\n      if (trayState.target.distanceSqr(trayState.position) <= tmp.len2()) {\r\n        trayState.position.setVector(trayState.target);\r\n      } else {\r\n        trayState.position.addVector(tmp);\r\n      }\r\n\r\n      trayState.x = trayState.position.x;\r\n      if (trayState.x <= trayState.width / 2) {\r\n        trayState.x = trayState.width / 2;\r\n      }\r\n      if (trayState.x >= width - trayState.width / 2) {\r\n        trayState.x = width - trayState.width / 2;\r\n      }\r\n    },\r\n  };\r\n};\r\n\r\nexport default createTrayPositionSystem;\r\n"]},"metadata":{},"sourceType":"module"}