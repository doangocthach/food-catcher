{"ast":null,"code":"function _defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n\n  return obj;\n}\n\nfunction _objectSpread(target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = arguments[i] != null ? arguments[i] : {};\n    var ownKeys = Object.keys(source);\n\n    if (typeof Object.getOwnPropertySymbols === 'function') {\n      ownKeys = ownKeys.concat(Object.getOwnPropertySymbols(source).filter(function (sym) {\n        return Object.getOwnPropertyDescriptor(source, sym).enumerable;\n      }));\n    }\n\n    ownKeys.forEach(function (key) {\n      _defineProperty(target, key, source[key]);\n    });\n  }\n\n  return target;\n}\n/* global ga */\n\n\nvar defaultConfig = {\n  /* See description below */\n  trackingId: null,\n\n  /* See description below */\n  debug: false,\n\n  /* See description below */\n  anonymizeIp: false,\n\n  /* See description below */\n  customDimensions: {},\n\n  /* See description below */\n  resetCustomDimensionsOnPage: [],\n\n  /* See description below */\n  setCustomDimensionsToPage: true\n  /* Custom metrics https://bit.ly/3c5de88 */\n  // TODO customMetrics: { key: 'metric1' }\n\n  /* Content groupings https://bit.ly/39Zt3Me */\n  // TODO contentGroupings: { key: 'contentGroup1' }\n\n};\nvar loadedInstances = {};\n/**\n * Google analytics plugin\n * @link https://getanalytics.io/plugins/google-analytics/\n * @link https://analytics.google.com/analytics/web/\n * @link https://developers.google.com/analytics/devguides/collection/analyticsjs\n * @param {object}  pluginConfig - Plugin settings\n * @param {string}  pluginConfig.trackingId - Google Analytics site tracking Id\n * @param {boolean} [pluginConfig.debug] - Enable Google Analytics debug mode\n * @param {boolean} [pluginConfig.anonymizeIp] - Enable [Anonymizing IP addresses](https://bit.ly/3c660Rd) sent to Google Analytics. [See details below](#anonymize-visitor-ips)\n * @param {object}  [pluginConfig.customDimensions] - Map [Custom dimensions](https://bit.ly/3c5de88) to send extra information to Google Analytics. [See details below](#using-ga-custom-dimensions)\n * @param {object}  [pluginConfig.resetCustomDimensionsOnPage] - Reset custom dimensions by key on analytics.page() calls. Useful for single page apps.\n * @param {boolean} [pluginConfig.setCustomDimensionsToPage] - Mapped dimensions will be set to the page & sent as properties of all subsequent events on that page. If false, analytics will only pass custom dimensions as part of individual events\n * @param {string}  [pluginConfig.instanceName] - Custom tracker name for google analytics. Use this if you need multiple googleAnalytics scripts loaded\n * @param {string}  [pluginConfig.customScriptSrc] - Custom URL for google analytics script, if proxying calls\n * @return {*}\n * @example\n *\n * googleAnalytics({\n *   trackingId: 'UA-1234567'\n * })\n */\n\nfunction googleAnalytics$1() {\n  var pluginConfig = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n  var pageCalledOnce = false; // Allow for multiple google analytics instances\n\n  var _getInstanceDetails = getInstanceDetails(pluginConfig),\n      instanceName = _getInstanceDetails.instanceName,\n      instancePrefix = _getInstanceDetails.instancePrefix;\n\n  return {\n    name: 'google-analytics',\n    config: _objectSpread({}, defaultConfig, pluginConfig),\n    // Load google analytics\n    initialize: function initialize(pluginApi) {\n      var config = pluginApi.config,\n          instance = pluginApi.instance;\n      if (!config.trackingId) throw new Error('No GA trackingId defined'); // var to hoist\n\n      var scriptSrc = config.customScriptSrc || 'https://www.google-analytics.com/analytics.js'; // Load google analytics script to page\n\n      if (gaNotLoaded(scriptSrc)) {\n        /* eslint-disable */\n        (function (i, s, o, g, r, a, m) {\n          i['GoogleAnalyticsObject'] = r;\n          i[r] = i[r] || function () {\n            (i[r].q = i[r].q || []).push(arguments);\n          }, i[r].l = 1 * new Date();\n          a = s.createElement(o), m = s.getElementsByTagName(o)[0];\n          a.async = 1;\n          a.src = g;\n          m.parentNode.insertBefore(a, m);\n        })(window, document, 'script', scriptSrc, 'ga');\n        /* eslint-enable */\n\n      } // Initialize tracker instance on page\n\n\n      if (!loadedInstances[instanceName]) {\n        var gaConfig = {\n          cookieDomain: config.domain || 'auto',\n          siteSpeedSampleRate: config.siteSpeedSampleRate || 1,\n          sampleRate: config.sampleRate || 100,\n          allowLinker: true // useAmpClientId: config.useAmpClientId\n\n        };\n\n        if (instanceName) {\n          gaConfig.name = instanceName;\n        }\n\n        ga('create', config.trackingId, gaConfig);\n\n        if (config.debug) {\n          // Disable sends to GA http://bit.ly/2Ro0vTR\n          ga(\"\".concat(instancePrefix, \"set\"), 'sendHitTask', null);\n          window.ga_debug = {\n            trace: true\n          };\n        }\n\n        if (config.anonymizeIp) {\n          ga(\"\".concat(instancePrefix, \"set\"), 'anonymizeIp', true);\n        }\n        /* set custom dimenions from user traits */\n\n\n        var user = instance.user() || {};\n        var traits = user.traits || {};\n\n        if (Object.keys(traits).length) {\n          var customDimensions = formatObjectIntoDimensions(traits, config);\n          ga(\"\".concat(instancePrefix, \"set\"), customDimensions);\n        }\n\n        loadedInstances[instanceName] = true;\n      }\n    },\n    // Google Analytics page view\n    page: function page(_ref) {\n      var payload = _ref.payload,\n          config = _ref.config,\n          instance = _ref.instance;\n      var properties = payload.properties;\n      var resetCustomDimensionsOnPage = config.resetCustomDimensionsOnPage,\n          customDimensions = config.customDimensions;\n      var campaign = instance.getState('context.campaign');\n      if (gaNotLoaded()) return;\n      /* If dimensions are specifiied to reset, clear them before page view */\n\n      if (resetCustomDimensionsOnPage && resetCustomDimensionsOnPage.length) {\n        var resetDimensions = resetCustomDimensionsOnPage.reduce(function (acc, key) {\n          if (customDimensions[key]) {\n            acc[customDimensions[key]] = null; // { dimension1: null } etc\n          }\n\n          return acc;\n        }, {});\n\n        if (Object.keys(resetDimensions).length) {\n          // Reset custom dimenions\n          ga(\"\".concat(instancePrefix, \"set\"), resetDimensions);\n        }\n      }\n\n      var path = properties.path || document.location.pathname;\n      var pageView = {\n        page: path,\n        title: properties.title,\n        location: properties.url\n      };\n      var pageData = {\n        page: path,\n        title: properties.title // allow referrer override if referrer was manually set\n\n      };\n\n      if (properties.referrer !== document.referrer) {\n        pageData.referrer = properties.referrer;\n      }\n\n      var campaignData = addCampaignData(campaign);\n      var dimensions = setCustomDimenions(properties, config, instancePrefix);\n      /* Dimensions will only be included in the event if config.setCustomDimensionsToPage is false */\n\n      var finalPayload = _objectSpread({}, pageView, campaignData, dimensions);\n\n      ga(\"\".concat(instancePrefix, \"set\"), pageData); // Remove location for SPA tracking after initial page view\n\n      if (pageCalledOnce) {\n        delete finalPayload.location;\n      }\n      /* send page view to GA */\n\n\n      ga(\"\".concat(instancePrefix, \"send\"), 'pageview', finalPayload); // Set after initial page view\n\n      pageCalledOnce = true;\n    },\n\n    /**\n     * Google Analytics track event\n     * @example\n     *\n     * analytics.track('playedVideo', {\n     *   category: 'Videos',\n     *   label: 'Fall Campaign',\n     *   value: 42\n     * })\n     */\n    track: function track(_ref2) {\n      var payload = _ref2.payload,\n          config = _ref2.config,\n          instance = _ref2.instance;\n      var properties = payload.properties,\n          event = payload.event;\n      var label = properties.label,\n          value = properties.value,\n          category = properties.category,\n          nonInteraction = properties.nonInteraction;\n      var campaign = instance.getState('context.campaign'); // TODO inline this trackEvent\n\n      trackEvent$1({\n        hitType: 'event',\n        event: event,\n        label: label,\n        category: category || 'All',\n        value: value,\n        nonInteraction: nonInteraction,\n        campaign: campaign\n      }, config, payload);\n    },\n    identify: function identify(_ref3) {\n      var payload = _ref3.payload,\n          config = _ref3.config;\n      identifyVisitor$1(payload.userId, payload.traits, config);\n    },\n    loaded: function loaded() {\n      return !!window.gaplugins;\n    }\n  };\n}\n\nfunction gaNotLoaded(scriptSrc) {\n  if (scriptSrc) {\n    return !scriptLoaded(scriptSrc);\n  }\n\n  return typeof ga === 'undefined';\n}\n\nfunction getInstanceDetails(pluginConfig) {\n  var instanceName = pluginConfig.instanceName;\n  return {\n    instancePrefix: instanceName ? \"\".concat(instanceName, \".\") : '',\n    instanceName: instanceName\n  };\n}\n/**\n * Send event tracking to Google Analytics\n * @param  {object} eventData - GA event payload\n * @param  {string} [eventData.hitType = 'event'] - hitType https://bit.ly/2Jab9L1 one of 'pageview', 'screenview', 'event', 'transaction', 'item', 'social', 'exception', 'timing'\n * @param  {string} [eventData.event] - event Action https://bit.ly/2CUzeoz\n * @param  {string} [eventData.label] - event Label http://bit.ly/2oo8eb3\n * @param  {string} [eventData.category] - event Category http://bit.ly/2EAy9UP\n * @param  {string} [eventData.nonInteraction = false] - nonInteraction https://bit.ly/2CUzeoz\n * @return {object} sent data\n */\n\n\nfunction trackEvent$1(eventData) {\n  var opts = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n  var payload = arguments.length > 2 ? arguments[2] : undefined;\n  if (gaNotLoaded()) return;\n\n  var _getInstanceDetails2 = getInstanceDetails(opts),\n      instancePrefix = _getInstanceDetails2.instancePrefix;\n\n  var data = {\n    // hitType https://bit.ly/2Jab9L1 one of 'pageview', 'screenview', 'event', 'transaction', 'item', 'social', 'exception', 'timing'\n    hitType: eventData.hitType || 'event',\n    // eventAction https://bit.ly/2CUzeoz\n    eventAction: eventData.event,\n    // eventLabel http://bit.ly/2oo8eb3\n    eventLabel: eventData.label,\n    // eventCategory http://bit.ly/2EAy9UP\n    eventCategory: eventData.category || 'All',\n    // nonInteraction https://bit.ly/2CUzeoz\n    nonInteraction: eventData.nonInteraction !== undefined ? !!eventData.nonInteraction : false\n  };\n\n  if (eventData.value) {\n    // how much is this action worth?\n    data.eventValue = format(eventData.value);\n  }\n  /* Attach campaign data */\n\n\n  var campaignData = addCampaignData(eventData);\n  /* Set Dimensions or return them for payload is config.setCustomDimensionsToPage is false */\n\n  var dimensions = setCustomDimenions(payload.properties, opts, instancePrefix);\n\n  var finalPayload = _objectSpread({}, data, campaignData, dimensions);\n  /* Send data to Google Analytics */\n\n\n  ga(\"\".concat(instancePrefix, \"send\"), 'event', finalPayload);\n  return finalPayload;\n}\n/**\n * Add campaign data to GA payload https://bit.ly/34qFCPn\n * @param {Object} [campaignData={}] [description]\n * @param {String} [campaignData.campaignName] - Name of campaign\n * @param {String} [campaignData.campaignSource] - Source of campaign\n * @param {String} [campaignData.campaignMedium] - Medium of campaign\n * @param {String} [campaignData.campaignContent] - Content of campaign\n * @param {String} [campaignData.campaignKeyword] - Keyword of campaign\n */\n\n\nfunction addCampaignData() {\n  var campaignData = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n  var campaign = {};\n  var name = campaignData.name,\n      source = campaignData.source,\n      medium = campaignData.medium,\n      content = campaignData.content,\n      keyword = campaignData.keyword;\n  if (name) campaign.campaignName = name;\n  if (source) campaign.campaignSource = source;\n  if (medium) campaign.campaignMedium = medium;\n  if (content) campaign.campaignContent = content;\n  if (keyword) campaign.campaignKeyword = keyword;\n  return campaign;\n}\n/* Todo add includeSearch options ¯\\_(ツ)_/¯\nfunction getPagePath(props, opts = {}) {\n  if (!props) return\n  if (opts.includeSearch && props.search) {\n    return `${props.path}${props.search}`\n  }\n  return props.path\n}\n*/\n// properties, data=opts\n\n\nfunction formatObjectIntoDimensions(properties) {\n  var opts = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n  var customDimensions = opts.customDimensions; // TODO map opts.customMetrics; Object.keys(customMetrics) { key: 'metric1' }\n  // TODO map opts.contentGroupings; Object.keys(contentGroupings) { key: 'contentGroup1' }\n\n  /* Map values from payload to any defined custom dimensions */\n\n  return Object.keys(customDimensions).reduce(function (acc, key) {\n    var dimensionKey = customDimensions[key];\n    var value = get(properties, key) || properties[key];\n\n    if (typeof value === 'boolean') {\n      value = value.toString();\n    }\n\n    if (value || value === 0) {\n      acc[dimensionKey] = value;\n      return acc;\n    }\n\n    return acc;\n  }, {});\n}\n\nfunction get(obj, key, def, p, undef) {\n  key = key.split ? key.split('.') : key;\n\n  for (p = 0; p < key.length; p++) {\n    obj = obj ? obj[key[p]] : undef;\n  }\n\n  return obj === undef ? def : obj;\n}\n\nfunction setCustomDimenions() {\n  var props = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n  var opts = arguments.length > 1 ? arguments[1] : undefined;\n  var instancePrefix = arguments.length > 2 ? arguments[2] : undefined;\n  var customDimensions = formatObjectIntoDimensions(props, opts);\n\n  if (!Object.keys(customDimensions).length) {\n    return {};\n  } // If setCustomDimensionsToPage false, don't save custom dimenions from event to page\n\n\n  if (!opts.setCustomDimensionsToPage) {\n    return customDimensions;\n  } // Set custom dimensions\n\n\n  ga(\"\".concat(instancePrefix, \"set\"), customDimensions);\n  return {};\n}\n/**\n * Identify a visitor by Id\n * @param  {string} id - unique visitor ID\n */\n\n\nfunction identifyVisitor$1(id) {\n  var traits = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n  var conf = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\n  if (gaNotLoaded()) return;\n\n  var _getInstanceDetails3 = getInstanceDetails(conf),\n      instancePrefix = _getInstanceDetails3.instancePrefix;\n\n  if (id) ga(\"\".concat(instancePrefix, \"set\"), 'userId', id);\n\n  if (Object.keys(traits).length) {\n    var custom = formatObjectIntoDimensions(traits, conf);\n    ga(\"\".concat(instancePrefix, \"set\"), custom);\n  }\n}\n\nfunction scriptLoaded(scriptSrc) {\n  var scripts = document.querySelectorAll('script[src]');\n  return !!Object.keys(scripts).filter(function (key) {\n    return (scripts[key].src || '') === scriptSrc;\n  }).length;\n}\n\nfunction format(value) {\n  if (!value || value < 0) return 0;\n  return Math.round(value);\n}\n\nvar browser = /*#__PURE__*/Object.freeze({\n  default: googleAnalytics$1,\n  trackEvent: trackEvent$1,\n  identifyVisitor: identifyVisitor$1\n});\n/* This module will shake out unused code + work in browser and node 🎉 */\n\nvar index = googleAnalytics$1;\n/* init for CDN usage. globalName.init() */\n\nvar init = googleAnalytics$1;\n/* Standalone API */\n\nvar initialize$1 = undefined;\nvar page = undefined;\nvar track = trackEvent$1;\nvar identify = identifyVisitor$1;\nexport default index;\nexport { init, identify, track, page, initialize$1 as initialize };","map":{"version":3,"sources":["E:/fcatcher-client/node_modules/@analytics/google-analytics/lib/analytics-plugin-ga.browser.es.js"],"names":["_defineProperty","obj","key","value","Object","defineProperty","enumerable","configurable","writable","_objectSpread","target","i","arguments","length","source","ownKeys","keys","getOwnPropertySymbols","concat","filter","sym","getOwnPropertyDescriptor","forEach","defaultConfig","trackingId","debug","anonymizeIp","customDimensions","resetCustomDimensionsOnPage","setCustomDimensionsToPage","loadedInstances","googleAnalytics$1","pluginConfig","undefined","pageCalledOnce","_getInstanceDetails","getInstanceDetails","instanceName","instancePrefix","name","config","initialize","pluginApi","instance","Error","scriptSrc","customScriptSrc","gaNotLoaded","s","o","g","r","a","m","q","push","l","Date","createElement","getElementsByTagName","async","src","parentNode","insertBefore","window","document","gaConfig","cookieDomain","domain","siteSpeedSampleRate","sampleRate","allowLinker","ga","ga_debug","trace","user","traits","formatObjectIntoDimensions","page","_ref","payload","properties","campaign","getState","resetDimensions","reduce","acc","path","location","pathname","pageView","title","url","pageData","referrer","campaignData","addCampaignData","dimensions","setCustomDimenions","finalPayload","track","_ref2","event","label","category","nonInteraction","trackEvent$1","hitType","identify","_ref3","identifyVisitor$1","userId","loaded","gaplugins","scriptLoaded","eventData","opts","_getInstanceDetails2","data","eventAction","eventLabel","eventCategory","eventValue","format","medium","content","keyword","campaignName","campaignSource","campaignMedium","campaignContent","campaignKeyword","dimensionKey","get","toString","def","p","undef","split","props","id","conf","_getInstanceDetails3","custom","scripts","querySelectorAll","Math","round","browser","freeze","default","trackEvent","identifyVisitor","index","init","initialize$1"],"mappings":"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","sourcesContent":["function _defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n\n  return obj;\n}\n\nfunction _objectSpread(target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = arguments[i] != null ? arguments[i] : {};\n    var ownKeys = Object.keys(source);\n\n    if (typeof Object.getOwnPropertySymbols === 'function') {\n      ownKeys = ownKeys.concat(Object.getOwnPropertySymbols(source).filter(function (sym) {\n        return Object.getOwnPropertyDescriptor(source, sym).enumerable;\n      }));\n    }\n\n    ownKeys.forEach(function (key) {\n      _defineProperty(target, key, source[key]);\n    });\n  }\n\n  return target;\n}\n\n/* global ga */\nvar defaultConfig = {\n  /* See description below */\n  trackingId: null,\n\n  /* See description below */\n  debug: false,\n\n  /* See description below */\n  anonymizeIp: false,\n\n  /* See description below */\n  customDimensions: {},\n\n  /* See description below */\n  resetCustomDimensionsOnPage: [],\n\n  /* See description below */\n  setCustomDimensionsToPage: true\n  /* Custom metrics https://bit.ly/3c5de88 */\n  // TODO customMetrics: { key: 'metric1' }\n\n  /* Content groupings https://bit.ly/39Zt3Me */\n  // TODO contentGroupings: { key: 'contentGroup1' }\n\n};\nvar loadedInstances = {};\n/**\n * Google analytics plugin\n * @link https://getanalytics.io/plugins/google-analytics/\n * @link https://analytics.google.com/analytics/web/\n * @link https://developers.google.com/analytics/devguides/collection/analyticsjs\n * @param {object}  pluginConfig - Plugin settings\n * @param {string}  pluginConfig.trackingId - Google Analytics site tracking Id\n * @param {boolean} [pluginConfig.debug] - Enable Google Analytics debug mode\n * @param {boolean} [pluginConfig.anonymizeIp] - Enable [Anonymizing IP addresses](https://bit.ly/3c660Rd) sent to Google Analytics. [See details below](#anonymize-visitor-ips)\n * @param {object}  [pluginConfig.customDimensions] - Map [Custom dimensions](https://bit.ly/3c5de88) to send extra information to Google Analytics. [See details below](#using-ga-custom-dimensions)\n * @param {object}  [pluginConfig.resetCustomDimensionsOnPage] - Reset custom dimensions by key on analytics.page() calls. Useful for single page apps.\n * @param {boolean} [pluginConfig.setCustomDimensionsToPage] - Mapped dimensions will be set to the page & sent as properties of all subsequent events on that page. If false, analytics will only pass custom dimensions as part of individual events\n * @param {string}  [pluginConfig.instanceName] - Custom tracker name for google analytics. Use this if you need multiple googleAnalytics scripts loaded\n * @param {string}  [pluginConfig.customScriptSrc] - Custom URL for google analytics script, if proxying calls\n * @return {*}\n * @example\n *\n * googleAnalytics({\n *   trackingId: 'UA-1234567'\n * })\n */\n\nfunction googleAnalytics$1() {\n  var pluginConfig = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n  var pageCalledOnce = false; // Allow for multiple google analytics instances\n\n  var _getInstanceDetails = getInstanceDetails(pluginConfig),\n      instanceName = _getInstanceDetails.instanceName,\n      instancePrefix = _getInstanceDetails.instancePrefix;\n\n  return {\n    name: 'google-analytics',\n    config: _objectSpread({}, defaultConfig, pluginConfig),\n    // Load google analytics\n    initialize: function initialize(pluginApi) {\n      var config = pluginApi.config,\n          instance = pluginApi.instance;\n      if (!config.trackingId) throw new Error('No GA trackingId defined'); // var to hoist\n\n      var scriptSrc = config.customScriptSrc || 'https://www.google-analytics.com/analytics.js'; // Load google analytics script to page\n\n      if (gaNotLoaded(scriptSrc)) {\n        /* eslint-disable */\n        (function (i, s, o, g, r, a, m) {\n          i['GoogleAnalyticsObject'] = r;\n          i[r] = i[r] || function () {\n            (i[r].q = i[r].q || []).push(arguments);\n          }, i[r].l = 1 * new Date();\n          a = s.createElement(o), m = s.getElementsByTagName(o)[0];\n          a.async = 1;\n          a.src = g;\n          m.parentNode.insertBefore(a, m);\n        })(window, document, 'script', scriptSrc, 'ga');\n        /* eslint-enable */\n\n      } // Initialize tracker instance on page\n\n\n      if (!loadedInstances[instanceName]) {\n        var gaConfig = {\n          cookieDomain: config.domain || 'auto',\n          siteSpeedSampleRate: config.siteSpeedSampleRate || 1,\n          sampleRate: config.sampleRate || 100,\n          allowLinker: true // useAmpClientId: config.useAmpClientId\n\n        };\n\n        if (instanceName) {\n          gaConfig.name = instanceName;\n        }\n\n        ga('create', config.trackingId, gaConfig);\n\n        if (config.debug) {\n          // Disable sends to GA http://bit.ly/2Ro0vTR\n          ga(\"\".concat(instancePrefix, \"set\"), 'sendHitTask', null);\n          window.ga_debug = {\n            trace: true\n          };\n        }\n\n        if (config.anonymizeIp) {\n          ga(\"\".concat(instancePrefix, \"set\"), 'anonymizeIp', true);\n        }\n        /* set custom dimenions from user traits */\n\n\n        var user = instance.user() || {};\n        var traits = user.traits || {};\n\n        if (Object.keys(traits).length) {\n          var customDimensions = formatObjectIntoDimensions(traits, config);\n          ga(\"\".concat(instancePrefix, \"set\"), customDimensions);\n        }\n\n        loadedInstances[instanceName] = true;\n      }\n    },\n    // Google Analytics page view\n    page: function page(_ref) {\n      var payload = _ref.payload,\n          config = _ref.config,\n          instance = _ref.instance;\n      var properties = payload.properties;\n      var resetCustomDimensionsOnPage = config.resetCustomDimensionsOnPage,\n          customDimensions = config.customDimensions;\n      var campaign = instance.getState('context.campaign');\n      if (gaNotLoaded()) return;\n      /* If dimensions are specifiied to reset, clear them before page view */\n\n      if (resetCustomDimensionsOnPage && resetCustomDimensionsOnPage.length) {\n        var resetDimensions = resetCustomDimensionsOnPage.reduce(function (acc, key) {\n          if (customDimensions[key]) {\n            acc[customDimensions[key]] = null; // { dimension1: null } etc\n          }\n\n          return acc;\n        }, {});\n\n        if (Object.keys(resetDimensions).length) {\n          // Reset custom dimenions\n          ga(\"\".concat(instancePrefix, \"set\"), resetDimensions);\n        }\n      }\n\n      var path = properties.path || document.location.pathname;\n      var pageView = {\n        page: path,\n        title: properties.title,\n        location: properties.url\n      };\n      var pageData = {\n        page: path,\n        title: properties.title // allow referrer override if referrer was manually set\n\n      };\n\n      if (properties.referrer !== document.referrer) {\n        pageData.referrer = properties.referrer;\n      }\n\n      var campaignData = addCampaignData(campaign);\n      var dimensions = setCustomDimenions(properties, config, instancePrefix);\n      /* Dimensions will only be included in the event if config.setCustomDimensionsToPage is false */\n\n      var finalPayload = _objectSpread({}, pageView, campaignData, dimensions);\n\n      ga(\"\".concat(instancePrefix, \"set\"), pageData); // Remove location for SPA tracking after initial page view\n\n      if (pageCalledOnce) {\n        delete finalPayload.location;\n      }\n      /* send page view to GA */\n\n\n      ga(\"\".concat(instancePrefix, \"send\"), 'pageview', finalPayload); // Set after initial page view\n\n      pageCalledOnce = true;\n    },\n\n    /**\n     * Google Analytics track event\n     * @example\n     *\n     * analytics.track('playedVideo', {\n     *   category: 'Videos',\n     *   label: 'Fall Campaign',\n     *   value: 42\n     * })\n     */\n    track: function track(_ref2) {\n      var payload = _ref2.payload,\n          config = _ref2.config,\n          instance = _ref2.instance;\n      var properties = payload.properties,\n          event = payload.event;\n      var label = properties.label,\n          value = properties.value,\n          category = properties.category,\n          nonInteraction = properties.nonInteraction;\n      var campaign = instance.getState('context.campaign'); // TODO inline this trackEvent\n\n      trackEvent$1({\n        hitType: 'event',\n        event: event,\n        label: label,\n        category: category || 'All',\n        value: value,\n        nonInteraction: nonInteraction,\n        campaign: campaign\n      }, config, payload);\n    },\n    identify: function identify(_ref3) {\n      var payload = _ref3.payload,\n          config = _ref3.config;\n      identifyVisitor$1(payload.userId, payload.traits, config);\n    },\n    loaded: function loaded() {\n      return !!window.gaplugins;\n    }\n  };\n}\n\nfunction gaNotLoaded(scriptSrc) {\n  if (scriptSrc) {\n    return !scriptLoaded(scriptSrc);\n  }\n\n  return typeof ga === 'undefined';\n}\n\nfunction getInstanceDetails(pluginConfig) {\n  var instanceName = pluginConfig.instanceName;\n  return {\n    instancePrefix: instanceName ? \"\".concat(instanceName, \".\") : '',\n    instanceName: instanceName\n  };\n}\n/**\n * Send event tracking to Google Analytics\n * @param  {object} eventData - GA event payload\n * @param  {string} [eventData.hitType = 'event'] - hitType https://bit.ly/2Jab9L1 one of 'pageview', 'screenview', 'event', 'transaction', 'item', 'social', 'exception', 'timing'\n * @param  {string} [eventData.event] - event Action https://bit.ly/2CUzeoz\n * @param  {string} [eventData.label] - event Label http://bit.ly/2oo8eb3\n * @param  {string} [eventData.category] - event Category http://bit.ly/2EAy9UP\n * @param  {string} [eventData.nonInteraction = false] - nonInteraction https://bit.ly/2CUzeoz\n * @return {object} sent data\n */\n\n\nfunction trackEvent$1(eventData) {\n  var opts = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n  var payload = arguments.length > 2 ? arguments[2] : undefined;\n  if (gaNotLoaded()) return;\n\n  var _getInstanceDetails2 = getInstanceDetails(opts),\n      instancePrefix = _getInstanceDetails2.instancePrefix;\n\n  var data = {\n    // hitType https://bit.ly/2Jab9L1 one of 'pageview', 'screenview', 'event', 'transaction', 'item', 'social', 'exception', 'timing'\n    hitType: eventData.hitType || 'event',\n    // eventAction https://bit.ly/2CUzeoz\n    eventAction: eventData.event,\n    // eventLabel http://bit.ly/2oo8eb3\n    eventLabel: eventData.label,\n    // eventCategory http://bit.ly/2EAy9UP\n    eventCategory: eventData.category || 'All',\n    // nonInteraction https://bit.ly/2CUzeoz\n    nonInteraction: eventData.nonInteraction !== undefined ? !!eventData.nonInteraction : false\n  };\n\n  if (eventData.value) {\n    // how much is this action worth?\n    data.eventValue = format(eventData.value);\n  }\n  /* Attach campaign data */\n\n\n  var campaignData = addCampaignData(eventData);\n  /* Set Dimensions or return them for payload is config.setCustomDimensionsToPage is false */\n\n  var dimensions = setCustomDimenions(payload.properties, opts, instancePrefix);\n\n  var finalPayload = _objectSpread({}, data, campaignData, dimensions);\n  /* Send data to Google Analytics */\n\n\n  ga(\"\".concat(instancePrefix, \"send\"), 'event', finalPayload);\n  return finalPayload;\n}\n/**\n * Add campaign data to GA payload https://bit.ly/34qFCPn\n * @param {Object} [campaignData={}] [description]\n * @param {String} [campaignData.campaignName] - Name of campaign\n * @param {String} [campaignData.campaignSource] - Source of campaign\n * @param {String} [campaignData.campaignMedium] - Medium of campaign\n * @param {String} [campaignData.campaignContent] - Content of campaign\n * @param {String} [campaignData.campaignKeyword] - Keyword of campaign\n */\n\nfunction addCampaignData() {\n  var campaignData = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n  var campaign = {};\n  var name = campaignData.name,\n      source = campaignData.source,\n      medium = campaignData.medium,\n      content = campaignData.content,\n      keyword = campaignData.keyword;\n  if (name) campaign.campaignName = name;\n  if (source) campaign.campaignSource = source;\n  if (medium) campaign.campaignMedium = medium;\n  if (content) campaign.campaignContent = content;\n  if (keyword) campaign.campaignKeyword = keyword;\n  return campaign;\n}\n/* Todo add includeSearch options ¯\\_(ツ)_/¯\nfunction getPagePath(props, opts = {}) {\n  if (!props) return\n  if (opts.includeSearch && props.search) {\n    return `${props.path}${props.search}`\n  }\n  return props.path\n}\n*/\n// properties, data=opts\n\n\nfunction formatObjectIntoDimensions(properties) {\n  var opts = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n  var customDimensions = opts.customDimensions; // TODO map opts.customMetrics; Object.keys(customMetrics) { key: 'metric1' }\n  // TODO map opts.contentGroupings; Object.keys(contentGroupings) { key: 'contentGroup1' }\n\n  /* Map values from payload to any defined custom dimensions */\n\n  return Object.keys(customDimensions).reduce(function (acc, key) {\n    var dimensionKey = customDimensions[key];\n    var value = get(properties, key) || properties[key];\n\n    if (typeof value === 'boolean') {\n      value = value.toString();\n    }\n\n    if (value || value === 0) {\n      acc[dimensionKey] = value;\n      return acc;\n    }\n\n    return acc;\n  }, {});\n}\n\nfunction get(obj, key, def, p, undef) {\n  key = key.split ? key.split('.') : key;\n\n  for (p = 0; p < key.length; p++) {\n    obj = obj ? obj[key[p]] : undef;\n  }\n\n  return obj === undef ? def : obj;\n}\n\nfunction setCustomDimenions() {\n  var props = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n  var opts = arguments.length > 1 ? arguments[1] : undefined;\n  var instancePrefix = arguments.length > 2 ? arguments[2] : undefined;\n  var customDimensions = formatObjectIntoDimensions(props, opts);\n\n  if (!Object.keys(customDimensions).length) {\n    return {};\n  } // If setCustomDimensionsToPage false, don't save custom dimenions from event to page\n\n\n  if (!opts.setCustomDimensionsToPage) {\n    return customDimensions;\n  } // Set custom dimensions\n\n\n  ga(\"\".concat(instancePrefix, \"set\"), customDimensions);\n  return {};\n}\n/**\n * Identify a visitor by Id\n * @param  {string} id - unique visitor ID\n */\n\n\nfunction identifyVisitor$1(id) {\n  var traits = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n  var conf = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\n  if (gaNotLoaded()) return;\n\n  var _getInstanceDetails3 = getInstanceDetails(conf),\n      instancePrefix = _getInstanceDetails3.instancePrefix;\n\n  if (id) ga(\"\".concat(instancePrefix, \"set\"), 'userId', id);\n\n  if (Object.keys(traits).length) {\n    var custom = formatObjectIntoDimensions(traits, conf);\n    ga(\"\".concat(instancePrefix, \"set\"), custom);\n  }\n}\n\nfunction scriptLoaded(scriptSrc) {\n  var scripts = document.querySelectorAll('script[src]');\n  return !!Object.keys(scripts).filter(function (key) {\n    return (scripts[key].src || '') === scriptSrc;\n  }).length;\n}\n\nfunction format(value) {\n  if (!value || value < 0) return 0;\n  return Math.round(value);\n}\n\nvar browser = /*#__PURE__*/Object.freeze({\n  default: googleAnalytics$1,\n  trackEvent: trackEvent$1,\n  identifyVisitor: identifyVisitor$1\n});\n\n/* This module will shake out unused code + work in browser and node 🎉 */\n\nvar index = googleAnalytics$1;\n/* init for CDN usage. globalName.init() */\n\nvar init = googleAnalytics$1;\n/* Standalone API */\n\nvar initialize$1 = undefined;\nvar page = undefined;\nvar track = trackEvent$1;\nvar identify = identifyVisitor$1;\n\nexport default index;\nexport { init, identify, track, page, initialize$1 as initialize };\n"]},"metadata":{},"sourceType":"module"}