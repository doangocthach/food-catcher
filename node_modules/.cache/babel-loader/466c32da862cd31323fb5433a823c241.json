{"ast":null,"code":"const createTrayRenderSystem = () => {\n  let tray, trayShadow;\n  let TRAY_WIDTH, TRAY_HEIGHT, TS_WIDTH, TS_HEIGHT;\n  return {\n    init({\n      trayState\n    }, {\n      width,\n      assets\n    }) {\n      let atlas = assets.gameAssets;\n      let trayAtlas = assets.foodInPot; // tray = atlas.findRegion(\"tray\", -1);\n\n      tray = trayAtlas.findRegion(\"hot_pot\", -1);\n      trayShadow = atlas.findRegion(\"tray-shadow\", -1);\n      TRAY_WIDTH = width / 3.8;\n      TRAY_HEIGHT = TRAY_WIDTH * tray.height / tray.width;\n      TS_WIDTH = TRAY_WIDTH * 0.8;\n      TS_HEIGHT = TS_WIDTH * trayShadow.height / trayShadow.width;\n    },\n\n    update(delta, {\n      trayState\n    }, {\n      batch,\n      width,\n      height,\n      camera\n    }) {\n      batch.setProjection(camera.combined);\n      batch.begin();\n      batch.setColor(1, 1, 1, 1);\n      tray.draw(batch, trayState.x - TRAY_WIDTH / 2, trayState.y, TRAY_WIDTH, TRAY_HEIGHT);\n      trayShadow.draw(batch, trayState.x - TS_WIDTH / 2, trayState.y + height / 13, TS_WIDTH, TS_HEIGHT);\n      batch.end();\n    }\n\n  };\n};\n\nexport default createTrayRenderSystem;","map":{"version":3,"sources":["E:/fcatcher-client/src/components/game/systems/TrayRenderSystem.js"],"names":["createTrayRenderSystem","tray","trayShadow","TRAY_WIDTH","TRAY_HEIGHT","TS_WIDTH","TS_HEIGHT","init","trayState","width","assets","atlas","gameAssets","trayAtlas","foodInPot","findRegion","height","update","delta","batch","camera","setProjection","combined","begin","setColor","draw","x","y","end"],"mappings":"AAAA,MAAMA,sBAAsB,GAAG,MAAM;AACnC,MAAIC,IAAJ,EAAUC,UAAV;AACA,MAAIC,UAAJ,EAAgBC,WAAhB,EAA6BC,QAA7B,EAAuCC,SAAvC;AACA,SAAO;AACLC,IAAAA,IAAI,CAAC;AAAEC,MAAAA;AAAF,KAAD,EAAgB;AAAEC,MAAAA,KAAF;AAASC,MAAAA;AAAT,KAAhB,EAAmC;AACrC,UAAIC,KAAK,GAAGD,MAAM,CAACE,UAAnB;AACA,UAAIC,SAAS,GAAGH,MAAM,CAACI,SAAvB,CAFqC,CAIrC;;AACAb,MAAAA,IAAI,GAAGY,SAAS,CAACE,UAAV,CAAqB,SAArB,EAAgC,CAAC,CAAjC,CAAP;AACAb,MAAAA,UAAU,GAAGS,KAAK,CAACI,UAAN,CAAiB,aAAjB,EAAgC,CAAC,CAAjC,CAAb;AAEAZ,MAAAA,UAAU,GAAGM,KAAK,GAAG,GAArB;AACAL,MAAAA,WAAW,GAAID,UAAU,GAAGF,IAAI,CAACe,MAAnB,GAA6Bf,IAAI,CAACQ,KAAhD;AAEAJ,MAAAA,QAAQ,GAAGF,UAAU,GAAG,GAAxB;AACAG,MAAAA,SAAS,GAAID,QAAQ,GAAGH,UAAU,CAACc,MAAvB,GAAiCd,UAAU,CAACO,KAAxD;AACD,KAdI;;AAeLQ,IAAAA,MAAM,CAACC,KAAD,EAAQ;AAAEV,MAAAA;AAAF,KAAR,EAAuB;AAAEW,MAAAA,KAAF;AAASV,MAAAA,KAAT;AAAgBO,MAAAA,MAAhB;AAAwBI,MAAAA;AAAxB,KAAvB,EAAyD;AAC7DD,MAAAA,KAAK,CAACE,aAAN,CAAoBD,MAAM,CAACE,QAA3B;AACAH,MAAAA,KAAK,CAACI,KAAN;AACAJ,MAAAA,KAAK,CAACK,QAAN,CAAe,CAAf,EAAkB,CAAlB,EAAqB,CAArB,EAAwB,CAAxB;AAEAvB,MAAAA,IAAI,CAACwB,IAAL,CACEN,KADF,EAEEX,SAAS,CAACkB,CAAV,GAAcvB,UAAU,GAAG,CAF7B,EAGEK,SAAS,CAACmB,CAHZ,EAIExB,UAJF,EAKEC,WALF;AAQAF,MAAAA,UAAU,CAACuB,IAAX,CACEN,KADF,EAEEX,SAAS,CAACkB,CAAV,GAAcrB,QAAQ,GAAG,CAF3B,EAGEG,SAAS,CAACmB,CAAV,GAAcX,MAAM,GAAG,EAHzB,EAIEX,QAJF,EAKEC,SALF;AAQAa,MAAAA,KAAK,CAACS,GAAN;AACD;;AArCI,GAAP;AAuCD,CA1CD;;AA4CA,eAAe5B,sBAAf","sourcesContent":["const createTrayRenderSystem = () => {\r\n  let tray, trayShadow;\r\n  let TRAY_WIDTH, TRAY_HEIGHT, TS_WIDTH, TS_HEIGHT;\r\n  return {\r\n    init({ trayState }, { width, assets }) {\r\n      let atlas = assets.gameAssets;\r\n      let trayAtlas = assets.foodInPot;\r\n\r\n      // tray = atlas.findRegion(\"tray\", -1);\r\n      tray = trayAtlas.findRegion(\"hot_pot\", -1);\r\n      trayShadow = atlas.findRegion(\"tray-shadow\", -1);\r\n\r\n      TRAY_WIDTH = width / 3.8;\r\n      TRAY_HEIGHT = (TRAY_WIDTH * tray.height) / tray.width;\r\n\r\n      TS_WIDTH = TRAY_WIDTH * 0.8;\r\n      TS_HEIGHT = (TS_WIDTH * trayShadow.height) / trayShadow.width;\r\n    },\r\n    update(delta, { trayState }, { batch, width, height, camera }) {\r\n      batch.setProjection(camera.combined);\r\n      batch.begin();\r\n      batch.setColor(1, 1, 1, 1);\r\n\r\n      tray.draw(\r\n        batch,\r\n        trayState.x - TRAY_WIDTH / 2,\r\n        trayState.y,\r\n        TRAY_WIDTH,\r\n        TRAY_HEIGHT\r\n      );\r\n\r\n      trayShadow.draw(\r\n        batch,\r\n        trayState.x - TS_WIDTH / 2,\r\n        trayState.y + height / 13,\r\n        TS_WIDTH,\r\n        TS_HEIGHT\r\n      );\r\n\r\n      batch.end();\r\n    },\r\n  };\r\n};\r\n\r\nexport default createTrayRenderSystem;\r\n"]},"metadata":{},"sourceType":"module"}