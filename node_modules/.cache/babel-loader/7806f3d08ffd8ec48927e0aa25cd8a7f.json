{"ast":null,"code":"import _regeneratorRuntime from\"E:\\\\fcatcher-client\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/regenerator\";import _asyncToGenerator from\"E:\\\\fcatcher-client\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/asyncToGenerator\";import{loadTexture,TextureRegion}from\"gdxjs\";import GlyphLayour from\"./glyphLayout\";export var AlignMode={center:0,right:1,left:2};export var TextType={static:0,dynamic:1};function concatAndResolveUrl(url,concat){var url1=url.split(\"/\");var url2=concat.split(\"/\");var url3=[];for(var i=0,l=url1.length;i<l;i++){if(url1[i]===\"..\"){url3.pop();}else if(url1[i]===\".\"){continue;}else{url3.push(url1[i]);}}for(var _i=0,_l=url2.length;_i<_l;_i++){if(url2[_i]===\"..\"){url3.pop();}else if(url2[_i]===\".\"){continue;}else{url3.push(url2[_i]);}}return url3.join(\"/\");}export default/*#__PURE__*/(function(){var _ref=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee(gl,packFileUrl,textureOptions){var packFileContent,pages,regionsData,kerningsData,pageImage,lines,i,tuple,tmp_array,push_to_kerning,numOfPages,startPageLine,line,pageCounter,saveIndex,_line,tmp,_i2,first,second,amount,_i3,face,size,bold,italic,charset,unicode,stretchH,smooth,aa,padding,spacing,outline,_i4,lineHeight,base,scaleW,scaleH,num_of_pages,packed,alphaChnl,redChnl,greenChnl,blueChnl,_i5,page_id,url,file,_i6,id,left,top,width,height,xoffset,yoffset,xadvance,page,region,_i7,_pages,_page,regions,_i8,_regionsData,regionData,_left,_top,_width,_height,_regionData$page,texture,invTexWidth,invTexHeight;return _regeneratorRuntime.wrap(function _callee$(_context){while(1){switch(_context.prev=_context.next){case 0:_context.next=2;return fetch(packFileUrl).then(function(res){return res.text();});case 2:packFileContent=_context.sent;pages=[];regionsData=[];kerningsData=[];pageImage=null;lines=packFileContent.split(\"\\n\");i=0;tmp_array=[];push_to_kerning=false;numOfPages=0;startPageLine=2;case 13:if(!true){_context.next=25;break;}line=lines[startPageLine];tmp_array.length=0;tuple=line.split(\" \").map(function(s){return s.trim();});if(!(tuple[0]===\"page\")){_context.next=21;break;}numOfPages+=1;_context.next=22;break;case 21:return _context.abrupt(\"break\",25);case 22:startPageLine+=1;_context.next=13;break;case 25:pageCounter=-1;saveIndex=2+numOfPages+1;// index to start finding region data\ncase 27:if(!true){_context.next=39;break;}_line=lines[i];if(!(_line===undefined)){_context.next=32;break;}push_to_kerning=false;return _context.abrupt(\"break\",39);case 32:if(_line.split(\" \").length===2){tmp=_line.split(\" \");if(tmp[0]===\"kernings\"){push_to_kerning=true;}i++;_line=lines[i];}if(push_to_kerning&&pageImage!==null){tuple=_line.split(\" \").map(function(s){return s.trim();});tuple=tuple.filter(function(item){return item!==\"\";});tmp_array.length=0;for(_i2=1;_i2<tuple.length;_i2++){tmp_array.push(tuple[_i2].split(\"=\")[1]);}first=parseInt(tmp_array[0],10);second=parseInt(tmp_array[1],10);amount=parseInt(tmp_array[2],10);kerningsData.push({first:first,second:second,amount:amount});}if(pageImage===null){pageCounter+=1;tmp_array.length=0;tuple=_line.split(\" \").map(function(s){return s.trim();});for(_i3=1;_i3<tuple.length;_i3++){tmp_array.push(tuple[_i3].split(\"=\")[1]);}face=tmp_array[0];size=parseInt(tmp_array[1],10);bold=parseInt(tmp_array[2],10)===0?false:true;italic=parseInt(tmp_array[3],10)===0?false:true;charset=tmp_array[4];unicode=parseInt(tmp_array[5],10);stretchH=parseInt(tmp_array[6],10);// percentage\nsmooth=parseInt(tmp_array[7],10);aa=parseInt(tmp_array[8],10);padding=tmp_array[9].split(\",\").map(function(i){return parseInt(i,10);});spacing=tmp_array[10].split(\",\").map(function(i){return parseInt(i,10);});outline=parseInt(tmp_array[11],10);i++;_line=lines[i];tmp_array.length=0;tuple=_line.split(\" \").map(function(s){return s.trim();});for(_i4=1;_i4<tuple.length;_i4++){tmp_array.push(tuple[_i4].split(\"=\")[1]);}lineHeight=parseInt(tmp_array[0],10);base=parseInt(tmp_array[1],10);scaleW=parseInt(tmp_array[2],10);scaleH=parseInt(tmp_array[3],10);num_of_pages=parseInt(tmp_array[4],10);packed=parseInt(tmp_array[5],10);alphaChnl=parseInt(tmp_array[6],10);redChnl=parseInt(tmp_array[7],10);greenChnl=parseInt(tmp_array[8],10);blueChnl=parseInt(tmp_array[9],10);i=i+pageCounter+1;_line=lines[i];tmp_array.length=0;tuple=_line.split(\" \").map(function(s){return s.trim();});for(_i5=1;_i5<tuple.length;_i5++){tmp_array.push(tuple[_i5].split(\"=\")[1]);}page_id=parseInt(tmp_array[0],10);url=tmp_array[1].split('\"');file=concatAndResolveUrl(packFileUrl,\"../\".concat(url[1]));pageImage={file:file,page_id:page_id,face:face,size:size,bold:bold,italic:italic,charset:charset,unicode:unicode,stretchH:stretchH,smooth:smooth,aa:aa,padding:padding,spacing:spacing,outline:outline,lineHeight:lineHeight,base:base,scaleW:scaleW,scaleH:scaleH,num_of_pages:num_of_pages,packed:packed,alphaChnl:alphaChnl,redChnl:redChnl,greenChnl:greenChnl,blueChnl:blueChnl};pages.push(pageImage);i=saveIndex;_line=lines[i];}if(!push_to_kerning&&pageImage!==null){tuple=_line.split(\" \").map(function(s){return s.trim();});tuple=tuple.filter(function(item){return item!==\"\";});tmp_array.length=0;for(_i6=1;_i6<tuple.length;_i6++){tmp_array.push(tuple[_i6].split(\"=\")[1]);}id=parseInt(tmp_array[0],10);left=parseInt(tmp_array[1],10);top=parseInt(tmp_array[2],10);width=parseInt(tmp_array[3],10);height=parseInt(tmp_array[4],10);xoffset=parseInt(tmp_array[5],10);yoffset=parseInt(tmp_array[6],10);xadvance=parseInt(tmp_array[7],10);page=parseInt(tmp_array[8],10);region={id:id,left:left,top:top,width:width,height:height,xoffset:xoffset,yoffset:yoffset,xadvance:xadvance,page:pageImage,id_page:page};if(region.id_page===pageCounter){regionsData.push(region);}else{if(pageCounter===numOfPages-1){push_to_kerning=true;}else{saveIndex=i;i=-1;pageImage=null;}}}i++;_context.next=27;break;case 39:_i7=0,_pages=pages;case 40:if(!(_i7<_pages.length)){_context.next=50;break;}_page=_pages[_i7];_context.next=44;return loadTexture(gl,_page.file,textureOptions);case 44:_page.texture=_context.sent;_page.invTextWidth=1/_page.texture.width;_page.invTextHeight=1/_page.texture.height;case 47:_i7++;_context.next=40;break;case 50:regions=[];for(_i8=0,_regionsData=regionsData;_i8<_regionsData.length;_i8++){regionData=_regionsData[_i8];_left=regionData.left;_top=regionData.top;_width=regionData.width;_height=regionData.height;_regionData$page=regionData.page,texture=_regionData$page.texture,invTexWidth=_regionData$page.invTexWidth,invTexHeight=_regionData$page.invTexHeight;regions.push(new TextureRegion(texture,_left,_top,_width,_height,regionData,invTexWidth,invTexHeight));}return _context.abrupt(\"return\",{getLineHeight:function getLineHeight(){return pageImage.lineHeight;},getPages:function getPages(){return pages;},getRegions:function getRegions(){return regions;},findRegions:function findRegions(id){for(var _i9=0;_i9<regions.length;_i9++){if(regions[_i9].id===id){return regions[_i9];}}},setNewText:function setNewText(canvasWidth){return new GlyphLayour(pageImage,regions,kerningsData,canvasWidth);}});case 53:case\"end\":return _context.stop();}}},_callee);}));return function(_x,_x2,_x3){return _ref.apply(this,arguments);};})();","map":{"version":3,"sources":["E:/fcatcher-client/src/components/game/utils/loadFontFile.js"],"names":["loadTexture","TextureRegion","GlyphLayour","AlignMode","center","right","left","TextType","static","dynamic","concatAndResolveUrl","url","concat","url1","split","url2","url3","i","l","length","pop","push","join","gl","packFileUrl","textureOptions","fetch","then","res","text","packFileContent","pages","regionsData","kerningsData","pageImage","lines","tmp_array","push_to_kerning","numOfPages","startPageLine","line","tuple","map","s","trim","pageCounter","saveIndex","undefined","tmp","filter","item","first","parseInt","second","amount","face","size","bold","italic","charset","unicode","stretchH","smooth","aa","padding","spacing","outline","lineHeight","base","scaleW","scaleH","num_of_pages","packed","alphaChnl","redChnl","greenChnl","blueChnl","page_id","file","id","top","width","height","xoffset","yoffset","xadvance","page","region","id_page","texture","invTextWidth","invTextHeight","regions","regionData","invTexWidth","invTexHeight","getLineHeight","getPages","getRegions","findRegions","setNewText","canvasWidth"],"mappings":"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","sourcesContent":["import { loadTexture, TextureRegion } from \"gdxjs\";\r\nimport GlyphLayour from \"./glyphLayout\";\r\n\r\nexport const AlignMode = {\r\n  center: 0,\r\n  right: 1,\r\n  left: 2,\r\n};\r\n\r\nexport const TextType = {\r\n  static: 0,\r\n  dynamic: 1,\r\n};\r\n\r\nfunction concatAndResolveUrl(url, concat) {\r\n  let url1 = url.split(\"/\");\r\n  let url2 = concat.split(\"/\");\r\n  let url3 = [];\r\n\r\n  for (let i = 0, l = url1.length; i < l; i++) {\r\n    if (url1[i] === \"..\") {\r\n      url3.pop();\r\n    } else if (url1[i] === \".\") {\r\n      continue;\r\n    } else {\r\n      url3.push(url1[i]);\r\n    }\r\n  }\r\n\r\n  for (let i = 0, l = url2.length; i < l; i++) {\r\n    if (url2[i] === \"..\") {\r\n      url3.pop();\r\n    } else if (url2[i] === \".\") {\r\n      continue;\r\n    } else {\r\n      url3.push(url2[i]);\r\n    }\r\n  }\r\n\r\n  return url3.join(\"/\");\r\n}\r\n\r\nexport default async (gl, packFileUrl, textureOptions) => {\r\n  const packFileContent = await fetch(packFileUrl).then((res) => res.text());\r\n  const pages = [];\r\n  const regionsData = [];\r\n  const kerningsData = [];\r\n  let pageImage = null;\r\n  const lines = packFileContent.split(\"\\n\");\r\n  let i = 0;\r\n  let tuple;\r\n  let tmp_array = [];\r\n  let push_to_kerning = false;\r\n\r\n  let numOfPages = 0;\r\n  let startPageLine = 2;\r\n  while (true) {\r\n    let line = lines[startPageLine];\r\n    tmp_array.length = 0;\r\n    tuple = line.split(\" \").map((s) => s.trim());\r\n    if (tuple[0] === \"page\") {\r\n      numOfPages += 1;\r\n    } else {\r\n      break;\r\n    }\r\n    startPageLine += 1;\r\n  }\r\n\r\n  let pageCounter = -1;\r\n  let saveIndex = 2 + numOfPages + 1; // index to start finding region data\r\n\r\n  while (true) {\r\n    let line = lines[i];\r\n\r\n    if (line === undefined) {\r\n      push_to_kerning = false;\r\n      break;\r\n    }\r\n\r\n    if (line.split(\" \").length === 2) {\r\n      const tmp = line.split(\" \");\r\n      if (tmp[0] === \"kernings\") {\r\n        push_to_kerning = true;\r\n      }\r\n      i++;\r\n      line = lines[i];\r\n    }\r\n\r\n    if (push_to_kerning && pageImage !== null) {\r\n      tuple = line.split(\" \").map((s) => s.trim());\r\n      tuple = tuple.filter((item) => item !== \"\");\r\n      tmp_array.length = 0;\r\n\r\n      for (let i = 1; i < tuple.length; i++) {\r\n        tmp_array.push(tuple[i].split(\"=\")[1]);\r\n      }\r\n      const first = parseInt(tmp_array[0], 10);\r\n      const second = parseInt(tmp_array[1], 10);\r\n      const amount = parseInt(tmp_array[2], 10);\r\n      kerningsData.push({ first, second, amount });\r\n    }\r\n\r\n    if (pageImage === null) {\r\n      pageCounter += 1;\r\n\r\n      tmp_array.length = 0;\r\n      tuple = line.split(\" \").map((s) => s.trim());\r\n      for (let i = 1; i < tuple.length; i++) {\r\n        tmp_array.push(tuple[i].split(\"=\")[1]);\r\n      }\r\n      const face = tmp_array[0];\r\n      const size = parseInt(tmp_array[1], 10);\r\n      const bold = parseInt(tmp_array[2], 10) === 0 ? false : true;\r\n      const italic = parseInt(tmp_array[3], 10) === 0 ? false : true;\r\n      const charset = tmp_array[4];\r\n      const unicode = parseInt(tmp_array[5], 10);\r\n      const stretchH = parseInt(tmp_array[6], 10); // percentage\r\n      const smooth = parseInt(tmp_array[7], 10);\r\n      const aa = parseInt(tmp_array[8], 10);\r\n      const padding = tmp_array[9].split(\",\").map((i) => parseInt(i, 10));\r\n      const spacing = tmp_array[10].split(\",\").map((i) => parseInt(i, 10));\r\n      const outline = parseInt(tmp_array[11], 10);\r\n\r\n      i++;\r\n      line = lines[i];\r\n      tmp_array.length = 0;\r\n      tuple = line.split(\" \").map((s) => s.trim());\r\n      for (let i = 1; i < tuple.length; i++) {\r\n        tmp_array.push(tuple[i].split(\"=\")[1]);\r\n      }\r\n      const lineHeight = parseInt(tmp_array[0], 10);\r\n      const base = parseInt(tmp_array[1], 10);\r\n      const scaleW = parseInt(tmp_array[2], 10);\r\n      const scaleH = parseInt(tmp_array[3], 10);\r\n      const num_of_pages = parseInt(tmp_array[4], 10);\r\n      const packed = parseInt(tmp_array[5], 10);\r\n      const alphaChnl = parseInt(tmp_array[6], 10);\r\n      const redChnl = parseInt(tmp_array[7], 10);\r\n      const greenChnl = parseInt(tmp_array[8], 10);\r\n      const blueChnl = parseInt(tmp_array[9], 10);\r\n\r\n      i = i + pageCounter + 1;\r\n      line = lines[i];\r\n      tmp_array.length = 0;\r\n      tuple = line.split(\" \").map((s) => s.trim());\r\n      for (let i = 1; i < tuple.length; i++) {\r\n        tmp_array.push(tuple[i].split(\"=\")[1]);\r\n      }\r\n      const page_id = parseInt(tmp_array[0], 10);\r\n      const url = tmp_array[1].split('\"');\r\n      const file = concatAndResolveUrl(packFileUrl, `../${url[1]}`);\r\n\r\n      pageImage = {\r\n        file,\r\n        page_id,\r\n        face,\r\n        size,\r\n        bold,\r\n        italic,\r\n        charset,\r\n        unicode,\r\n        stretchH,\r\n        smooth,\r\n        aa,\r\n        padding,\r\n        spacing,\r\n        outline,\r\n        lineHeight,\r\n        base,\r\n        scaleW,\r\n        scaleH,\r\n        num_of_pages,\r\n        packed,\r\n        alphaChnl,\r\n        redChnl,\r\n        greenChnl,\r\n        blueChnl,\r\n      };\r\n      pages.push(pageImage);\r\n\r\n      i = saveIndex;\r\n      line = lines[i];\r\n    }\r\n\r\n    if (!push_to_kerning && pageImage !== null) {\r\n      tuple = line.split(\" \").map((s) => s.trim());\r\n      tuple = tuple.filter((item) => item !== \"\");\r\n      tmp_array.length = 0;\r\n\r\n      for (let i = 1; i < tuple.length; i++) {\r\n        tmp_array.push(tuple[i].split(\"=\")[1]);\r\n      }\r\n      const id = parseInt(tmp_array[0], 10);\r\n      const left = parseInt(tmp_array[1], 10);\r\n      const top = parseInt(tmp_array[2], 10);\r\n      const width = parseInt(tmp_array[3], 10);\r\n      const height = parseInt(tmp_array[4], 10);\r\n      const xoffset = parseInt(tmp_array[5], 10);\r\n      const yoffset = parseInt(tmp_array[6], 10);\r\n      const xadvance = parseInt(tmp_array[7], 10);\r\n      const page = parseInt(tmp_array[8], 10);\r\n      const region = {\r\n        id,\r\n        left,\r\n        top,\r\n        width,\r\n        height,\r\n        xoffset,\r\n        yoffset,\r\n        xadvance,\r\n        page: pageImage,\r\n        id_page: page,\r\n      };\r\n\r\n      if (region.id_page === pageCounter) {\r\n        regionsData.push(region);\r\n      } else {\r\n        if (pageCounter === numOfPages - 1) {\r\n          push_to_kerning = true;\r\n        } else {\r\n          saveIndex = i;\r\n          i = -1;\r\n          pageImage = null;\r\n        }\r\n      }\r\n    }\r\n\r\n    i++;\r\n  }\r\n\r\n  //   console.log(kerningsData);\r\n  //   console.log(pages);\r\n  //   console.log(regionsData);\r\n  for (let page of pages) {\r\n    page.texture = await loadTexture(gl, page.file, textureOptions);\r\n    page.invTextWidth = 1 / page.texture.width;\r\n    page.invTextHeight = 1 / page.texture.height;\r\n  }\r\n\r\n  const regions = [];\r\n\r\n  for (let regionData of regionsData) {\r\n    const left = regionData.left;\r\n    const top = regionData.top;\r\n    const width = regionData.width;\r\n    const height = regionData.height;\r\n    const { texture, invTexWidth, invTexHeight } = regionData.page;\r\n    regions.push(\r\n      new TextureRegion(\r\n        texture,\r\n        left,\r\n        top,\r\n        width,\r\n        height,\r\n        regionData,\r\n        invTexWidth,\r\n        invTexHeight\r\n      )\r\n    );\r\n  }\r\n\r\n  return {\r\n    getLineHeight() {\r\n      return pageImage.lineHeight;\r\n    },\r\n\r\n    getPages() {\r\n      return pages;\r\n    },\r\n\r\n    getRegions() {\r\n      return regions;\r\n    },\r\n\r\n    findRegions(id) {\r\n      for (let i = 0; i < regions.length; i++) {\r\n        if (regions[i].id === id) {\r\n          return regions[i];\r\n        }\r\n      }\r\n    },\r\n\r\n    setNewText(canvasWidth) {\r\n      return new GlyphLayour(pageImage, regions, kerningsData, canvasWidth);\r\n    },\r\n  };\r\n};\r\n"]},"metadata":{},"sourceType":"module"}