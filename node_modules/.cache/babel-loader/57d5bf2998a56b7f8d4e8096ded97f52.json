{"ast":null,"code":"import _regeneratorRuntime from\"E:\\\\fcatcher-client\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/regenerator\";import _slicedToArray from\"E:\\\\fcatcher-client\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/slicedToArray\";import _asyncToGenerator from\"E:\\\\fcatcher-client\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/asyncToGenerator\";import\"./index.css\";import{createGameLoop,createBatch,loadTexture,loadAtlas,createViewport,fillRect}from\"gdxjs\";import createWhiteText from\"gl-white-texture\";import loadFontFile from\"./utils/loadFontFile\";import createStartScreenSystem from\"./StartScreen\";var init=/*#__PURE__*/function(){var _ref=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee(canvas,infos){var width,height,viewport,camera,gl,batch,whiteTex,Game,foxLogo,LOGO_WIDTH,LOGO_HEIGHT,counter,numOfAssets,draw,doAndCount,_yield$Promise$all,_yield$Promise$all2,gameAssets,animAssets,backGround,newAssets,foodInPot,startScreen,backGround2,leaderBoard,numberFont,textFont,assets,update;return _regeneratorRuntime.wrap(function _callee$(_context){while(1){switch(_context.prev=_context.next){case 0:width=47;height=100;viewport=createViewport(canvas,width,height);camera=viewport.getCamera();gl=viewport.getContext();batch=createBatch(gl);whiteTex=createWhiteText(gl);Game={score:0,width:width,height:height,canvas:canvas,gl:gl,batch:batch,camera:camera,whiteTex:whiteTex,viewport:viewport,setCurrentScreen:function setCurrentScreen(screen){if(Game.currentScreen){Game.currentScreen.destroy();}Game.currentScreen=screen;}};_context.next=10;return loadTexture(gl,\"./assets/logo.png\");case 10:foxLogo=_context.sent;LOGO_WIDTH=width/1.8;LOGO_HEIGHT=LOGO_WIDTH*foxLogo.height/foxLogo.width;counter=0;numOfAssets=10;draw=function draw(){batch.setProjection(camera.combined);batch.begin();batch.setColor(255/255,114/255,22/255,1);fillRect(batch,whiteTex,0,0,width,height);batch.setColor(1,1,1,1);fillRect(batch,foxLogo,width/2-LOGO_WIDTH/2,height*0.8/3,LOGO_WIDTH,LOGO_HEIGHT);batch.setColor(1,1,1,1);fillRect(batch,whiteTex,width/2-width/(1.45*2),height*2.5/4-height/50,width/1.45,height/25);batch.setColor(255/255,114/255,22/255,1);fillRect(batch,whiteTex,width/2-width/3,height*2.5/4-height/60,width/1.5,height/30);batch.setColor(1,1,1,1);var ratio=counter/numOfAssets;fillRect(batch,whiteTex,width/2-width/(1.55*2),height*2.5/4-height/80,width/1.55*ratio,height/40);batch.end();};doAndCount=function doAndCount(promise){return promise.then(function(result){draw();counter+=1;return result;});};_context.next=19;return Promise.all([doAndCount(loadAtlas(gl,\"./assets/food_catch.atlas\")),doAndCount(loadAtlas(gl,\"./assets/hotpot.atlas\")),doAndCount(loadTexture(gl,\"./assets/bg.jpg\")),doAndCount(loadAtlas(gl,\"./assets/hotpot-additional.atlas\")),doAndCount(loadAtlas(gl,\"./assets/foodinhotpot.atlas\")),doAndCount(loadAtlas(gl,\"./assets/start_menu.atlas\")),doAndCount(loadTexture(gl,\"./assets/bbg-start.jpg\")),doAndCount(loadAtlas(gl,\"./assets/leaderBoard.atlas\")),doAndCount(loadFontFile(gl,\"./fonts/iciel-64.fnt\")),doAndCount(loadFontFile(gl,\"./fonts/mijas.fnt\"))]);case 19:_yield$Promise$all=_context.sent;_yield$Promise$all2=_slicedToArray(_yield$Promise$all,10);gameAssets=_yield$Promise$all2[0];animAssets=_yield$Promise$all2[1];backGround=_yield$Promise$all2[2];newAssets=_yield$Promise$all2[3];foodInPot=_yield$Promise$all2[4];startScreen=_yield$Promise$all2[5];backGround2=_yield$Promise$all2[6];leaderBoard=_yield$Promise$all2[7];numberFont=_yield$Promise$all2[8];textFont=_yield$Promise$all2[9];assets={gameAssets:gameAssets,animAssets:animAssets,backGround:backGround,newAssets:newAssets,foodInPot:foodInPot,startScreen:startScreen,backGround2:backGround2,leaderBoard:leaderBoard};Game.assets=assets;Game.font={numberFont:numberFont,textFont:textFont};_context.t0=Game;_context.next=37;return createStartScreenSystem(Game);case 37:_context.t1=_context.sent;_context.t0.setCurrentScreen.call(_context.t0,_context.t1);gl.clearColor(255/255,114/255,22/255,1);update=function update(delta){gl.clear(gl.COLOR_BUFFER_BIT);if(Game.currentScreen){Game.currentScreen.update(delta);}};createGameLoop(update);case 42:case\"end\":return _context.stop();}}},_callee);}));return function init(_x,_x2){return _ref.apply(this,arguments);};}();export default init;","map":{"version":3,"sources":["E:/fcatcher-client/src/components/game/index.js"],"names":["createGameLoop","createBatch","loadTexture","loadAtlas","createViewport","fillRect","createWhiteText","loadFontFile","createStartScreenSystem","init","canvas","infos","width","height","viewport","camera","getCamera","gl","getContext","batch","whiteTex","Game","score","setCurrentScreen","screen","currentScreen","destroy","foxLogo","LOGO_WIDTH","LOGO_HEIGHT","counter","numOfAssets","draw","setProjection","combined","begin","setColor","ratio","end","doAndCount","promise","then","result","Promise","all","gameAssets","animAssets","backGround","newAssets","foodInPot","startScreen","backGround2","leaderBoard","numberFont","textFont","assets","font","clearColor","update","delta","clear","COLOR_BUFFER_BIT"],"mappings":"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","sourcesContent":["import \"./index.css\";\r\nimport {\r\n  createGameLoop,\r\n  createBatch,\r\n  loadTexture,\r\n  loadAtlas,\r\n  createViewport,\r\n  fillRect,\r\n} from \"gdxjs\";\r\nimport createWhiteText from \"gl-white-texture\";\r\nimport loadFontFile from \"./utils/loadFontFile\";\r\n\r\nimport createStartScreenSystem from \"./StartScreen\";\r\n\r\nconst init = async (canvas, infos) => {\r\n  const width = 47;\r\n  const height = 100;\r\n  const viewport = createViewport(canvas, width, height);\r\n  const camera = viewport.getCamera();\r\n  const gl = viewport.getContext();\r\n  const batch = createBatch(gl);\r\n  const whiteTex = createWhiteText(gl);\r\n\r\n  const Game = {\r\n    score: 0,\r\n    width,\r\n    height,\r\n    canvas,\r\n    gl,\r\n    batch,\r\n    camera,\r\n    whiteTex,\r\n    viewport,\r\n    setCurrentScreen(screen) {\r\n      if (Game.currentScreen) {\r\n        Game.currentScreen.destroy();\r\n      }\r\n      Game.currentScreen = screen;\r\n    },\r\n  };\r\n\r\n  const foxLogo = await loadTexture(gl, \"./assets/logo.png\");\r\n  const LOGO_WIDTH = width / 1.8;\r\n  const LOGO_HEIGHT = (LOGO_WIDTH * foxLogo.height) / foxLogo.width;\r\n\r\n  let counter = 0;\r\n  const numOfAssets = 10;\r\n\r\n  const draw = () => {\r\n    batch.setProjection(camera.combined);\r\n    batch.begin();\r\n    batch.setColor(255 / 255, 114 / 255, 22 / 255, 1);\r\n    fillRect(batch, whiteTex, 0, 0, width, height);\r\n    batch.setColor(1, 1, 1, 1);\r\n    fillRect(\r\n      batch,\r\n      foxLogo,\r\n      width / 2 - LOGO_WIDTH / 2,\r\n      (height * 0.8) / 3,\r\n      LOGO_WIDTH,\r\n      LOGO_HEIGHT\r\n    );\r\n    batch.setColor(1, 1, 1, 1);\r\n    fillRect(\r\n      batch,\r\n      whiteTex,\r\n      width / 2 - width / (1.45 * 2),\r\n      (height * 2.5) / 4 - height / 50,\r\n      width / 1.45,\r\n      height / 25\r\n    );\r\n    batch.setColor(255 / 255, 114 / 255, 22 / 255, 1);\r\n    fillRect(\r\n      batch,\r\n      whiteTex,\r\n      width / 2 - width / 3,\r\n      (height * 2.5) / 4 - height / 60,\r\n      width / 1.5,\r\n      height / 30\r\n    );\r\n    batch.setColor(1, 1, 1, 1);\r\n    let ratio = counter / numOfAssets;\r\n    fillRect(\r\n      batch,\r\n      whiteTex,\r\n      width / 2 - width / (1.55 * 2),\r\n      (height * 2.5) / 4 - height / 80,\r\n      (width / 1.55) * ratio,\r\n      height / 40\r\n    );\r\n    batch.end();\r\n  };\r\n\r\n  const doAndCount = (promise) =>\r\n    promise.then((result) => {\r\n      draw();\r\n      counter += 1;\r\n      return result;\r\n    });\r\n\r\n  const [\r\n    gameAssets,\r\n    animAssets,\r\n    backGround,\r\n    newAssets,\r\n    foodInPot,\r\n    startScreen,\r\n    backGround2,\r\n    leaderBoard,\r\n    numberFont,\r\n    textFont,\r\n  ] = await Promise.all([\r\n    doAndCount(loadAtlas(gl, \"./assets/food_catch.atlas\")),\r\n    doAndCount(loadAtlas(gl, \"./assets/hotpot.atlas\")),\r\n    doAndCount(loadTexture(gl, \"./assets/bg.jpg\")),\r\n    doAndCount(loadAtlas(gl, \"./assets/hotpot-additional.atlas\")),\r\n    doAndCount(loadAtlas(gl, \"./assets/foodinhotpot.atlas\")),\r\n    doAndCount(loadAtlas(gl, \"./assets/start_menu.atlas\")),\r\n    doAndCount(loadTexture(gl, \"./assets/bbg-start.jpg\")),\r\n    doAndCount(loadAtlas(gl, \"./assets/leaderBoard.atlas\")),\r\n    doAndCount(loadFontFile(gl, \"./fonts/iciel-64.fnt\")),\r\n    doAndCount(loadFontFile(gl, \"./fonts/mijas.fnt\")),\r\n  ]);\r\n\r\n  let assets = {\r\n    gameAssets,\r\n    animAssets,\r\n    backGround,\r\n    newAssets,\r\n    foodInPot,\r\n    startScreen,\r\n    backGround2,\r\n    leaderBoard,\r\n  };\r\n  Game.assets = assets;\r\n\r\n  Game.font = { numberFont, textFont };\r\n  Game.setCurrentScreen(await createStartScreenSystem(Game));\r\n\r\n  gl.clearColor(255 / 255, 114 / 255, 22 / 255, 1);\r\n  const update = (delta) => {\r\n    gl.clear(gl.COLOR_BUFFER_BIT);\r\n    if (Game.currentScreen) {\r\n      Game.currentScreen.update(delta);\r\n    }\r\n  };\r\n\r\n  createGameLoop(update);\r\n};\r\n\r\nexport default init;\r\n"]},"metadata":{},"sourceType":"module"}