{"ast":null,"code":"import analytics from\"../../../utils/analytics\";var checkAdditionScore=function checkAdditionScore(comboCounter){if(comboCounter===10){analytics.track(\"combo\",{comboCounter:comboCounter});return 100;}else if(comboCounter===30){analytics.track(\"combo\",{comboCounter:comboCounter});return 300;}else if(comboCounter>=50&&comboCounter%10===0){analytics.track(\"combo\",{comboCounter:50});return 500;}else{return 10;}};var createScoreCalcSystem=function createScoreCalcSystem(){return{update:function update(delta,worldState,extra){if(worldState.correctCatch){worldState.correctCatch=false;worldState.comboCounter+=1;var addScore=checkAdditionScore(worldState.comboCounter);worldState.score+=addScore;}}};};export default createScoreCalcSystem;","map":{"version":3,"sources":["E:/fcatcher-client/src/components/game/systems/ScoreCalcSystem.js"],"names":["analytics","checkAdditionScore","comboCounter","track","createScoreCalcSystem","update","delta","worldState","extra","correctCatch","addScore","score"],"mappings":"AAAA,MAAOA,CAAAA,SAAP,KAAsB,0BAAtB,CAEA,GAAMC,CAAAA,kBAAkB,CAAG,QAArBA,CAAAA,kBAAqB,CAACC,YAAD,CAAkB,CAC3C,GAAIA,YAAY,GAAK,EAArB,CAAyB,CACvBF,SAAS,CAACG,KAAV,CAAgB,OAAhB,CAAyB,CAAED,YAAY,CAAZA,YAAF,CAAzB,EACA,MAAO,IAAP,CACD,CAHD,IAGO,IAAIA,YAAY,GAAK,EAArB,CAAyB,CAC9BF,SAAS,CAACG,KAAV,CAAgB,OAAhB,CAAyB,CAAED,YAAY,CAAZA,YAAF,CAAzB,EACA,MAAO,IAAP,CACD,CAHM,IAGA,IAAIA,YAAY,EAAI,EAAhB,EAAsBA,YAAY,CAAG,EAAf,GAAsB,CAAhD,CAAmD,CACxDF,SAAS,CAACG,KAAV,CAAgB,OAAhB,CAAyB,CAAED,YAAY,CAAE,EAAhB,CAAzB,EACA,MAAO,IAAP,CACD,CAHM,IAGA,CACL,MAAO,GAAP,CACD,CACF,CAbD,CAeA,GAAME,CAAAA,qBAAqB,CAAG,QAAxBA,CAAAA,qBAAwB,EAAM,CAClC,MAAO,CACLC,MADK,iBACEC,KADF,CACSC,UADT,CACqBC,KADrB,CAC4B,CAC/B,GAAID,UAAU,CAACE,YAAf,CAA6B,CAC3BF,UAAU,CAACE,YAAX,CAA0B,KAA1B,CACAF,UAAU,CAACL,YAAX,EAA2B,CAA3B,CACA,GAAMQ,CAAAA,QAAQ,CAAGT,kBAAkB,CAACM,UAAU,CAACL,YAAZ,CAAnC,CACAK,UAAU,CAACI,KAAX,EAAoBD,QAApB,CACD,CACF,CARI,CAAP,CAUD,CAXD,CAaA,cAAeN,CAAAA,qBAAf","sourcesContent":["import analytics from \"../../../utils/analytics\";\r\n\r\nconst checkAdditionScore = (comboCounter) => {\r\n  if (comboCounter === 10) {\r\n    analytics.track(\"combo\", { comboCounter });\r\n    return 100;\r\n  } else if (comboCounter === 30) {\r\n    analytics.track(\"combo\", { comboCounter });\r\n    return 300;\r\n  } else if (comboCounter >= 50 && comboCounter % 10 === 0) {\r\n    analytics.track(\"combo\", { comboCounter: 50 });\r\n    return 500;\r\n  } else {\r\n    return 10;\r\n  }\r\n};\r\n\r\nconst createScoreCalcSystem = () => {\r\n  return {\r\n    update(delta, worldState, extra) {\r\n      if (worldState.correctCatch) {\r\n        worldState.correctCatch = false;\r\n        worldState.comboCounter += 1;\r\n        const addScore = checkAdditionScore(worldState.comboCounter);\r\n        worldState.score += addScore;\r\n      }\r\n    },\r\n  };\r\n};\r\n\r\nexport default createScoreCalcSystem;\r\n"]},"metadata":{},"sourceType":"module"}