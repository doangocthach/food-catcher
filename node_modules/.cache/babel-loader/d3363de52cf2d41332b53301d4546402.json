{"ast":null,"code":"const pushToComboList = (comboList, texture, indexCombo, comboSize, width, height) => {\n  comboList.push({\n    tex: texture,\n    x: Math.random() > 0.5 ? width * 1.5 / 4 : width * 2.5 / 4,\n    y: Math.random() * (height * 2 / 4 - height * 2.5 / 4) + height * 2.5 / 4,\n    width: comboSize[indexCombo].width,\n    height: comboSize[indexCombo].height,\n    infos: {\n      stateTime: 0,\n      scale: 0,\n      opacity: 0\n    }\n  });\n};\n\nconst createBannerComboRenderSystem = () => {\n  let comboList = [];\n  let combo1, combo2, combo3;\n  let comboSize = [];\n  return {\n    init(worldState, {\n      assets,\n      width,\n      height\n    }) {\n      const atlas = assets.newAssets;\n      combo1 = atlas.findRegion(\"combo1\", -1);\n      combo2 = atlas.findRegion(\"combo2\", -1);\n      combo3 = atlas.findRegion(\"combo3\", -1);\n      const C1_WIDTH = width / 3;\n      const C1_HEIGHT = C1_WIDTH * combo1.height / combo1.width;\n      const C2_WIDTH = width / 2.5;\n      const C2_HEIGHT = C2_WIDTH * combo2.height / combo2.width;\n      const C3_WIDTH = width / 2;\n      const C3_HEIGHT = C3_WIDTH * combo3.height / combo3.width;\n      comboSize = [{\n        width: C1_WIDTH,\n        height: C1_HEIGHT\n      }, {\n        width: C2_WIDTH,\n        height: C2_HEIGHT\n      }, {\n        width: C3_WIDTH,\n        height: C3_HEIGHT\n      }];\n    },\n\n    update(delta, worldState, {\n      batch,\n      camera,\n      width,\n      height\n    }) {\n      const {\n        comboCounter,\n        comboState\n      } = worldState;\n\n      if (comboCounter === 10 && worldState.comboCheckIndex[comboCounter] === undefined) {\n        worldState.comboCheckIndex[comboCounter] = true;\n        pushToComboList(comboList, combo1, 0, comboSize, width, height);\n      } else if (comboCounter === 30 && worldState.comboCheckIndex[comboCounter] === undefined) {\n        worldState.comboCheckIndex[comboCounter] = true;\n        pushToComboList(comboList, combo2, 1, comboSize, width, height);\n      } else if (comboCounter >= 50 && comboCounter % 10 === 0 && worldState.comboCheckIndex[comboCounter] === undefined) {\n        worldState.comboCheckIndex[comboCounter] = true;\n        pushToComboList(comboList, combo3, 2, comboSize, width, height);\n      }\n\n      batch.setProjection(camera.combined);\n      batch.begin();\n\n      for (let i = comboList.length - 1; i >= 0; i--) {\n        batch.setColor(1, 1, 1, comboList[i].infos.opacity);\n        comboList[i].tex.draw(batch, comboList[i].x - comboList[i].width / 2, comboList[i].y, comboList[i].width, comboList[i].height, comboList[i].width / 2, comboList[i].height / 2, 0, comboList[i].infos.scale, comboList[i].infos.scale);\n\n        if (comboList[i].infos.scale < 1 && comboList[i].infos.stateTime === 0) {\n          comboList[i].infos.scale = Math.min(comboList[i].infos.scale += delta * comboState.scaleSpeed, 1);\n          comboList[i].infos.opacity = Math.min(comboList[i].infos.opacity += delta * comboState.opacitySpeed, 1);\n        } else {\n          comboList[i].infos.stateTime += delta;\n\n          if (comboList[i].infos.stateTime > comboState.delayTime) {\n            comboList[i].infos.scale = Math.max(comboList[i].infos.scale -= delta * comboState.scaleSpeed, 0);\n            comboList[i].infos.opacity = Math.max(comboList[i].infos.opacity -= delta * comboState.opacitySpeed, 0);\n\n            if (comboList[i].infos.scale === 0) {\n              comboList.splice(i, 1);\n            }\n          }\n        }\n      }\n\n      batch.end();\n    }\n\n  };\n};\n\nexport default createBannerComboRenderSystem;","map":{"version":3,"sources":["E:/fcatcher-client/src/components/game/systems/BannerComboRenderSystem.js"],"names":["pushToComboList","comboList","texture","indexCombo","comboSize","width","height","push","tex","x","Math","random","y","infos","stateTime","scale","opacity","createBannerComboRenderSystem","combo1","combo2","combo3","init","worldState","assets","atlas","newAssets","findRegion","C1_WIDTH","C1_HEIGHT","C2_WIDTH","C2_HEIGHT","C3_WIDTH","C3_HEIGHT","update","delta","batch","camera","comboCounter","comboState","comboCheckIndex","undefined","setProjection","combined","begin","i","length","setColor","draw","min","scaleSpeed","opacitySpeed","delayTime","max","splice","end"],"mappings":"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","sourcesContent":["const pushToComboList = (\r\n  comboList,\r\n  texture,\r\n  indexCombo,\r\n  comboSize,\r\n  width,\r\n  height\r\n) => {\r\n  comboList.push({\r\n    tex: texture,\r\n    x: Math.random() > 0.5 ? (width * 1.5) / 4 : (width * 2.5) / 4,\r\n    y:\r\n      Math.random() * ((height * 2) / 4 - (height * 2.5) / 4) +\r\n      (height * 2.5) / 4,\r\n    width: comboSize[indexCombo].width,\r\n    height: comboSize[indexCombo].height,\r\n    infos: { stateTime: 0, scale: 0, opacity: 0 },\r\n  });\r\n};\r\n\r\nconst createBannerComboRenderSystem = () => {\r\n  let comboList = [];\r\n  let combo1, combo2, combo3;\r\n  let comboSize = [];\r\n\r\n  return {\r\n    init(worldState, { assets, width, height }) {\r\n      const atlas = assets.newAssets;\r\n\r\n      combo1 = atlas.findRegion(\"combo1\", -1);\r\n      combo2 = atlas.findRegion(\"combo2\", -1);\r\n      combo3 = atlas.findRegion(\"combo3\", -1);\r\n\r\n      const C1_WIDTH = width / 3;\r\n      const C1_HEIGHT = (C1_WIDTH * combo1.height) / combo1.width;\r\n\r\n      const C2_WIDTH = width / 2.5;\r\n      const C2_HEIGHT = (C2_WIDTH * combo2.height) / combo2.width;\r\n\r\n      const C3_WIDTH = width / 2;\r\n      const C3_HEIGHT = (C3_WIDTH * combo3.height) / combo3.width;\r\n      comboSize = [\r\n        { width: C1_WIDTH, height: C1_HEIGHT },\r\n        { width: C2_WIDTH, height: C2_HEIGHT },\r\n        { width: C3_WIDTH, height: C3_HEIGHT },\r\n      ];\r\n    },\r\n    update(delta, worldState, { batch, camera, width, height }) {\r\n      const { comboCounter, comboState } = worldState;\r\n      if (\r\n        comboCounter === 10 &&\r\n        worldState.comboCheckIndex[comboCounter] === undefined\r\n      ) {\r\n        worldState.comboCheckIndex[comboCounter] = true;\r\n        pushToComboList(comboList, combo1, 0, comboSize, width, height);\r\n      } else if (\r\n        comboCounter === 30 &&\r\n        worldState.comboCheckIndex[comboCounter] === undefined\r\n      ) {\r\n        worldState.comboCheckIndex[comboCounter] = true;\r\n        pushToComboList(comboList, combo2, 1, comboSize, width, height);\r\n      } else if (\r\n        comboCounter >= 50 &&\r\n        comboCounter % 10 === 0 &&\r\n        worldState.comboCheckIndex[comboCounter] === undefined\r\n      ) {\r\n        worldState.comboCheckIndex[comboCounter] = true;\r\n        pushToComboList(comboList, combo3, 2, comboSize, width, height);\r\n      }\r\n\r\n      batch.setProjection(camera.combined);\r\n      batch.begin();\r\n      for (let i = comboList.length - 1; i >= 0; i--) {\r\n        batch.setColor(1, 1, 1, comboList[i].infos.opacity);\r\n        comboList[i].tex.draw(\r\n          batch,\r\n          comboList[i].x - comboList[i].width / 2,\r\n          comboList[i].y,\r\n          comboList[i].width,\r\n          comboList[i].height,\r\n          comboList[i].width / 2,\r\n          comboList[i].height / 2,\r\n          0,\r\n          comboList[i].infos.scale,\r\n          comboList[i].infos.scale\r\n        );\r\n\r\n        if (\r\n          comboList[i].infos.scale < 1 &&\r\n          comboList[i].infos.stateTime === 0\r\n        ) {\r\n          comboList[i].infos.scale = Math.min(\r\n            (comboList[i].infos.scale += delta * comboState.scaleSpeed),\r\n            1\r\n          );\r\n          comboList[i].infos.opacity = Math.min(\r\n            (comboList[i].infos.opacity += delta * comboState.opacitySpeed),\r\n            1\r\n          );\r\n        } else {\r\n          comboList[i].infos.stateTime += delta;\r\n          if (comboList[i].infos.stateTime > comboState.delayTime) {\r\n            comboList[i].infos.scale = Math.max(\r\n              (comboList[i].infos.scale -= delta * comboState.scaleSpeed),\r\n              0\r\n            );\r\n            comboList[i].infos.opacity = Math.max(\r\n              (comboList[i].infos.opacity -= delta * comboState.opacitySpeed),\r\n              0\r\n            );\r\n\r\n            if (comboList[i].infos.scale === 0) {\r\n              comboList.splice(i, 1);\r\n            }\r\n          }\r\n        }\r\n      }\r\n      batch.end();\r\n    },\r\n  };\r\n};\r\n\r\nexport default createBannerComboRenderSystem;\r\n"]},"metadata":{},"sourceType":"module"}