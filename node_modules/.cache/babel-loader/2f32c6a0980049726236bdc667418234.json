{"ast":null,"code":"export default (update => {\n  let lastUpdate = Date.now();\n  let fps = 0;\n  let running = true;\n  let requestId;\n  let frameInLastSecond = 0;\n  let elapsed = 0;\n\n  (function loop() {\n    if (running) {\n      const delta = Date.now() - lastUpdate;\n      lastUpdate = Date.now();\n      frameInLastSecond++;\n      elapsed += delta;\n\n      if (elapsed >= 1000) {\n        fps = frameInLastSecond;\n        frameInLastSecond = 0;\n        elapsed -= 1000;\n      }\n\n      update(delta / 1000);\n      requestId = requestAnimationFrame(loop);\n    }\n  })();\n\n  return {\n    isRunning: () => running,\n    start: () => {\n      if (!running) {\n        running = true;\n        loop();\n      }\n    },\n    stop: () => {\n      if (requestId) {\n        cancelAnimationFrame(requestId);\n      }\n\n      running = false;\n    },\n    getFps: () => fps\n  };\n});","map":{"version":3,"sources":["E:/fcatcher-client/node_modules/gdxjs/lib/createGameLoop.js"],"names":["update","lastUpdate","Date","now","fps","running","requestId","frameInLastSecond","elapsed","loop","delta","requestAnimationFrame","isRunning","start","stop","cancelAnimationFrame","getFps"],"mappings":"AAAA,gBAAgBA,MAAM,IAAI;AACxB,MAAIC,UAAU,GAAGC,IAAI,CAACC,GAAL,EAAjB;AACA,MAAIC,GAAG,GAAG,CAAV;AACA,MAAIC,OAAO,GAAG,IAAd;AACA,MAAIC,SAAJ;AACA,MAAIC,iBAAiB,GAAG,CAAxB;AACA,MAAIC,OAAO,GAAG,CAAd;;AAEA,GAAC,SAASC,IAAT,GAAgB;AACf,QAAIJ,OAAJ,EAAa;AACX,YAAMK,KAAK,GAAGR,IAAI,CAACC,GAAL,KAAaF,UAA3B;AACAA,MAAAA,UAAU,GAAGC,IAAI,CAACC,GAAL,EAAb;AACAI,MAAAA,iBAAiB;AACjBC,MAAAA,OAAO,IAAIE,KAAX;;AAEA,UAAIF,OAAO,IAAI,IAAf,EAAqB;AACnBJ,QAAAA,GAAG,GAAGG,iBAAN;AACAA,QAAAA,iBAAiB,GAAG,CAApB;AACAC,QAAAA,OAAO,IAAI,IAAX;AACD;;AAEDR,MAAAA,MAAM,CAACU,KAAK,GAAG,IAAT,CAAN;AACAJ,MAAAA,SAAS,GAAGK,qBAAqB,CAACF,IAAD,CAAjC;AACD;AACF,GAhBD;;AAkBA,SAAO;AACLG,IAAAA,SAAS,EAAE,MAAMP,OADZ;AAELQ,IAAAA,KAAK,EAAE,MAAM;AACX,UAAI,CAACR,OAAL,EAAc;AACZA,QAAAA,OAAO,GAAG,IAAV;AACAI,QAAAA,IAAI;AACL;AACF,KAPI;AAQLK,IAAAA,IAAI,EAAE,MAAM;AACV,UAAIR,SAAJ,EAAe;AACbS,QAAAA,oBAAoB,CAACT,SAAD,CAApB;AACD;;AAEDD,MAAAA,OAAO,GAAG,KAAV;AACD,KAdI;AAeLW,IAAAA,MAAM,EAAE,MAAMZ;AAfT,GAAP;AAiBD,CA3CD","sourcesContent":["export default (update => {\n  let lastUpdate = Date.now();\n  let fps = 0;\n  let running = true;\n  let requestId;\n  let frameInLastSecond = 0;\n  let elapsed = 0;\n\n  (function loop() {\n    if (running) {\n      const delta = Date.now() - lastUpdate;\n      lastUpdate = Date.now();\n      frameInLastSecond++;\n      elapsed += delta;\n\n      if (elapsed >= 1000) {\n        fps = frameInLastSecond;\n        frameInLastSecond = 0;\n        elapsed -= 1000;\n      }\n\n      update(delta / 1000);\n      requestId = requestAnimationFrame(loop);\n    }\n  })();\n\n  return {\n    isRunning: () => running,\n    start: () => {\n      if (!running) {\n        running = true;\n        loop();\n      }\n    },\n    stop: () => {\n      if (requestId) {\n        cancelAnimationFrame(requestId);\n      }\n\n      running = false;\n    },\n    getFps: () => fps\n  };\n});"]},"metadata":{},"sourceType":"module"}