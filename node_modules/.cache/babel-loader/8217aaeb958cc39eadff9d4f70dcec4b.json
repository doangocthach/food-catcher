{"ast":null,"code":"import{Vector2}from\"gdxjs\";var createTrayPositionSystem=function createTrayPositionSystem(){var tmp=new Vector2();return{update:function update(delta,_ref,_ref2){var trayState=_ref.trayState;var batch=_ref2.batch,width=_ref2.width,height=_ref2.height,camera=_ref2.camera;tmp.setVector(trayState.target).subVector(trayState.position).nor().scale(trayState.speed*delta);if(trayState.target.distanceSqr(trayState.position)<=tmp.len2()){trayState.position.setVector(trayState.target);}else{trayState.position.addVector(tmp);}trayState.x=trayState.position.x;if(trayState.x<=trayState.width/2){trayState.x=trayState.width/2;}if(trayState.x>=width-trayState.width/2){trayState.x=width-trayState.width/2;}}};};export default createTrayPositionSystem;","map":{"version":3,"sources":["E:/fcatcher-client/src/components/game/systems/TrayPositionSystem.js"],"names":["Vector2","createTrayPositionSystem","tmp","update","delta","trayState","batch","width","height","camera","setVector","target","subVector","position","nor","scale","speed","distanceSqr","len2","addVector","x"],"mappings":"AAAA,OAASA,OAAT,KAAwB,OAAxB,CAEA,GAAMC,CAAAA,wBAAwB,CAAG,QAA3BA,CAAAA,wBAA2B,EAAM,CACrC,GAAIC,CAAAA,GAAG,CAAG,GAAIF,CAAAA,OAAJ,EAAV,CAEA,MAAO,CACLG,MADK,iBACEC,KADF,YAC0D,IAA/CC,CAAAA,SAA+C,MAA/CA,SAA+C,IAAhCC,CAAAA,KAAgC,OAAhCA,KAAgC,CAAzBC,KAAyB,OAAzBA,KAAyB,CAAlBC,MAAkB,OAAlBA,MAAkB,CAAVC,MAAU,OAAVA,MAAU,CAC7DP,GAAG,CACAQ,SADH,CACaL,SAAS,CAACM,MADvB,EAEGC,SAFH,CAEaP,SAAS,CAACQ,QAFvB,EAGGC,GAHH,GAIGC,KAJH,CAISV,SAAS,CAACW,KAAV,CAAkBZ,KAJ3B,EAKA,GAAIC,SAAS,CAACM,MAAV,CAAiBM,WAAjB,CAA6BZ,SAAS,CAACQ,QAAvC,GAAoDX,GAAG,CAACgB,IAAJ,EAAxD,CAAoE,CAClEb,SAAS,CAACQ,QAAV,CAAmBH,SAAnB,CAA6BL,SAAS,CAACM,MAAvC,EACD,CAFD,IAEO,CACLN,SAAS,CAACQ,QAAV,CAAmBM,SAAnB,CAA6BjB,GAA7B,EACD,CAEDG,SAAS,CAACe,CAAV,CAAcf,SAAS,CAACQ,QAAV,CAAmBO,CAAjC,CACA,GAAIf,SAAS,CAACe,CAAV,EAAef,SAAS,CAACE,KAAV,CAAkB,CAArC,CAAwC,CACtCF,SAAS,CAACe,CAAV,CAAcf,SAAS,CAACE,KAAV,CAAkB,CAAhC,CACD,CACD,GAAIF,SAAS,CAACe,CAAV,EAAeb,KAAK,CAAGF,SAAS,CAACE,KAAV,CAAkB,CAA7C,CAAgD,CAC9CF,SAAS,CAACe,CAAV,CAAcb,KAAK,CAAGF,SAAS,CAACE,KAAV,CAAkB,CAAxC,CACD,CACF,CApBI,CAAP,CAsBD,CAzBD,CA2BA,cAAeN,CAAAA,wBAAf","sourcesContent":["import { Vector2 } from \"gdxjs\";\r\n\r\nconst createTrayPositionSystem = () => {\r\n  let tmp = new Vector2();\r\n\r\n  return {\r\n    update(delta, { trayState }, { batch, width, height, camera }) {\r\n      tmp\r\n        .setVector(trayState.target)\r\n        .subVector(trayState.position)\r\n        .nor()\r\n        .scale(trayState.speed * delta);\r\n      if (trayState.target.distanceSqr(trayState.position) <= tmp.len2()) {\r\n        trayState.position.setVector(trayState.target);\r\n      } else {\r\n        trayState.position.addVector(tmp);\r\n      }\r\n\r\n      trayState.x = trayState.position.x;\r\n      if (trayState.x <= trayState.width / 2) {\r\n        trayState.x = trayState.width / 2;\r\n      }\r\n      if (trayState.x >= width - trayState.width / 2) {\r\n        trayState.x = width - trayState.width / 2;\r\n      }\r\n    },\r\n  };\r\n};\r\n\r\nexport default createTrayPositionSystem;\r\n"]},"metadata":{},"sourceType":"module"}