{"ast":null,"code":"import { mat4 } from 'gl-matrix';\nimport { unproject } from 'gdxjs/lib/mathUtils';\nexport default ((width, height, viewportWidth, viewportHeight) => {\n  const combined = mat4.create();\n  const transform = mat4.create();\n  const invOrtho = mat4.create();\n  const lookAtMatrix = mat4.create();\n  const position = [0, 0];\n  const NEAR = 0;\n  const FAR = 1;\n  const tmp3 = [0, 0, 0];\n  const eye = [0, 0, FAR];\n  const center = [0, 0, NEAR];\n  const up = [0, 1, 0];\n\n  const update = () => {\n    mat4.ortho(combined, 0, width, height, 0, NEAR, FAR);\n    const x = position[0];\n    const y = position[1];\n    eye[0] = center[0] = x;\n    eye[1] = center[1] = y;\n    mat4.identity(transform);\n    mat4.lookAt(lookAtMatrix, eye, center, up);\n    mat4.mul(transform, transform, lookAtMatrix);\n    mat4.mul(combined, combined, transform);\n    mat4.invert(invOrtho, combined);\n  };\n\n  update();\n  return {\n    combined,\n\n    setMatrix(mat) {\n      mat4.copy(combined, mat);\n      mat4.invert(invOrtho, combined);\n    },\n\n    setYUp(yUp) {\n      if (yUp) {\n        up[1] = -1;\n      } else {\n        up[1] = 1;\n      }\n\n      update();\n    },\n\n    setPosition(x, y) {\n      position[0] = x;\n      position[1] = y;\n      update();\n    },\n\n    unprojectVector2(out, input) {\n      tmp3[0] = input.x;\n      tmp3[1] = input.y;\n      tmp3[2] = 0;\n      unproject(tmp3, tmp3, invOrtho, 0, 0, viewportWidth, viewportHeight);\n      out.set(tmp3[0], tmp3[1]);\n    },\n\n    resize(newWidth, newHeight, newVWidth, newVHeight) {\n      width = newWidth;\n      height = newHeight;\n      newVWidth && (viewportWidth = newVWidth);\n      newVHeight && (viewportHeight = newVHeight);\n      update();\n    }\n\n  };\n});","map":{"version":3,"sources":["E:/fcatcher-client/node_modules/gdxjs/lib/orthoCamera.js"],"names":["mat4","unproject","width","height","viewportWidth","viewportHeight","combined","create","transform","invOrtho","lookAtMatrix","position","NEAR","FAR","tmp3","eye","center","up","update","ortho","x","y","identity","lookAt","mul","invert","setMatrix","mat","copy","setYUp","yUp","setPosition","unprojectVector2","out","input","set","resize","newWidth","newHeight","newVWidth","newVHeight"],"mappings":"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","sourcesContent":["import { mat4 } from 'gl-matrix';\nimport { unproject } from 'gdxjs/lib/mathUtils';\nexport default ((width, height, viewportWidth, viewportHeight) => {\n  const combined = mat4.create();\n  const transform = mat4.create();\n  const invOrtho = mat4.create();\n  const lookAtMatrix = mat4.create();\n  const position = [0, 0];\n  const NEAR = 0;\n  const FAR = 1;\n  const tmp3 = [0, 0, 0];\n  const eye = [0, 0, FAR];\n  const center = [0, 0, NEAR];\n  const up = [0, 1, 0];\n\n  const update = () => {\n    mat4.ortho(combined, 0, width, height, 0, NEAR, FAR);\n    const x = position[0];\n    const y = position[1];\n    eye[0] = center[0] = x;\n    eye[1] = center[1] = y;\n    mat4.identity(transform);\n    mat4.lookAt(lookAtMatrix, eye, center, up);\n    mat4.mul(transform, transform, lookAtMatrix);\n    mat4.mul(combined, combined, transform);\n    mat4.invert(invOrtho, combined);\n  };\n\n  update();\n  return {\n    combined,\n\n    setMatrix(mat) {\n      mat4.copy(combined, mat);\n      mat4.invert(invOrtho, combined);\n    },\n\n    setYUp(yUp) {\n      if (yUp) {\n        up[1] = -1;\n      } else {\n        up[1] = 1;\n      }\n\n      update();\n    },\n\n    setPosition(x, y) {\n      position[0] = x;\n      position[1] = y;\n      update();\n    },\n\n    unprojectVector2(out, input) {\n      tmp3[0] = input.x;\n      tmp3[1] = input.y;\n      tmp3[2] = 0;\n      unproject(tmp3, tmp3, invOrtho, 0, 0, viewportWidth, viewportHeight);\n      out.set(tmp3[0], tmp3[1]);\n    },\n\n    resize(newWidth, newHeight, newVWidth, newVHeight) {\n      width = newWidth;\n      height = newHeight;\n      newVWidth && (viewportWidth = newVWidth);\n      newVHeight && (viewportHeight = newVHeight);\n      update();\n    }\n\n  };\n});"]},"metadata":{},"sourceType":"module"}