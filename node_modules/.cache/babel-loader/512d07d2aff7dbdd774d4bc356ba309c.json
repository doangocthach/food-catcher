{"ast":null,"code":"import { AlignMode, TextType } from \"../utils/loadFontFile\";\n\nconst createRecipeRenderSystem = () => {\n  let FOOD_WIDTH, FOOD_HEIGHT;\n  let recipePositionInfos = [];\n  let TEXT_AMOUNT1, TEXT_AMOUNT2, TEXT_AMOUNT3, TEXT_AMOUNT4;\n  let TEXT_COUNTER, TEXT_LIST;\n  let numberFont;\n  return {\n    init({\n      foodTex\n    }, {\n      width,\n      height,\n      font\n    }) {\n      let tmpFood;\n\n      for (let tex of foodTex) {\n        if (tex.index === 0) {\n          tmpFood = tex.image;\n          break;\n        }\n      }\n\n      FOOD_WIDTH = width / 7;\n      FOOD_HEIGHT = FOOD_WIDTH * tmpFood.height / tmpFood.width;\n      const RECIPE_MARGIN = width / 75;\n\n      for (let i = 0; i < 4; i++) {\n        recipePositionInfos.push({\n          x: width / 3.06 + i * (FOOD_WIDTH + RECIPE_MARGIN),\n          y: height * 0.028\n        });\n      }\n\n      numberFont = font.numberFont;\n      TEXT_COUNTER = numberFont.setNewText(width);\n      TEXT_COUNTER.setAlignMode(AlignMode.right);\n      TEXT_COUNTER.setType(TextType.dynamic);\n    },\n\n    update(delta, {\n      recipes,\n      foodTex,\n      whiteSmokeList,\n      smokeAnimation,\n      stateTime,\n      genderNewRecipeAmount\n    }, {\n      batch,\n      camera,\n      width,\n      height,\n      font\n    }) {\n      if (genderNewRecipeAmount) {\n        genderNewRecipeAmount = false;\n        TEXT_AMOUNT1 = numberFont.setNewText(width);\n        TEXT_AMOUNT1.setAlignMode(AlignMode.left);\n        TEXT_AMOUNT2 = numberFont.setNewText(width);\n        TEXT_AMOUNT2.setAlignMode(AlignMode.left);\n        TEXT_AMOUNT3 = numberFont.setNewText(width);\n        TEXT_AMOUNT3.setAlignMode(AlignMode.left);\n        TEXT_AMOUNT4 = numberFont.setNewText(width);\n        TEXT_AMOUNT4.setAlignMode(AlignMode.left);\n        TEXT_LIST = [TEXT_AMOUNT1, TEXT_AMOUNT2, TEXT_AMOUNT3, TEXT_AMOUNT4];\n      }\n\n      batch.setProjection(camera.combined);\n      batch.begin();\n\n      for (let i = 0; i < recipes.length; i++) {\n        let image;\n\n        for (let j = 0; j < foodTex.length; j++) {\n          if (foodTex[j].index === recipes[i].type) {\n            image = foodTex[j].image;\n          }\n        }\n\n        batch.setColor(1, 1, 1, 1);\n        image.draw(batch, recipePositionInfos[i].x, recipePositionInfos[i].y, FOOD_WIDTH, FOOD_HEIGHT);\n      }\n\n      for (let i = 0; i < 4; i++) {\n        batch.setColor(0, 0, 0, 1);\n        TEXT_LIST[i].draw(batch, `/ ${recipes[i].amount}`, recipePositionInfos[i].x * 0.97 + FOOD_WIDTH / 2 + 0 * width * 0.005, height * 0.06, width / 20);\n        TEXT_COUNTER.draw(batch, `${recipes[i].counter}`, recipePositionInfos[i].x * 0.98 + FOOD_WIDTH / 2 - // i * width * 0.0003 -\n        width * 0.01, height * 0.06, width / 20);\n        batch.setColor(1, 1, 1, 1);\n      }\n\n      batch.end();\n    }\n\n  };\n};\n\nexport default createRecipeRenderSystem;","map":{"version":3,"sources":["E:/fcatcher-client/src/components/game/systems/RecipeRenderSystem.js"],"names":["AlignMode","TextType","createRecipeRenderSystem","FOOD_WIDTH","FOOD_HEIGHT","recipePositionInfos","TEXT_AMOUNT1","TEXT_AMOUNT2","TEXT_AMOUNT3","TEXT_AMOUNT4","TEXT_COUNTER","TEXT_LIST","numberFont","init","foodTex","width","height","font","tmpFood","tex","index","image","RECIPE_MARGIN","i","push","x","y","setNewText","setAlignMode","right","setType","dynamic","update","delta","recipes","whiteSmokeList","smokeAnimation","stateTime","genderNewRecipeAmount","batch","camera","left","setProjection","combined","begin","length","j","type","setColor","draw","amount","counter","end"],"mappings":"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","sourcesContent":["import { AlignMode, TextType } from \"../utils/loadFontFile\";\r\n\r\nconst createRecipeRenderSystem = () => {\r\n  let FOOD_WIDTH, FOOD_HEIGHT;\r\n  let recipePositionInfos = [];\r\n  let TEXT_AMOUNT1, TEXT_AMOUNT2, TEXT_AMOUNT3, TEXT_AMOUNT4;\r\n  let TEXT_COUNTER, TEXT_LIST;\r\n  let numberFont;\r\n  return {\r\n    init({ foodTex }, { width, height, font }) {\r\n      let tmpFood;\r\n      for (let tex of foodTex) {\r\n        if (tex.index === 0) {\r\n          tmpFood = tex.image;\r\n          break;\r\n        }\r\n      }\r\n      FOOD_WIDTH = width / 7;\r\n      FOOD_HEIGHT = (FOOD_WIDTH * tmpFood.height) / tmpFood.width;\r\n\r\n      const RECIPE_MARGIN = width / 75;\r\n      for (let i = 0; i < 4; i++) {\r\n        recipePositionInfos.push({\r\n          x: width / 3.06 + i * (FOOD_WIDTH + RECIPE_MARGIN),\r\n          y: height * 0.028,\r\n        });\r\n      }\r\n\r\n      numberFont = font.numberFont;\r\n      TEXT_COUNTER = numberFont.setNewText(width);\r\n      TEXT_COUNTER.setAlignMode(AlignMode.right);\r\n      TEXT_COUNTER.setType(TextType.dynamic);\r\n    },\r\n\r\n    update(\r\n      delta,\r\n      {\r\n        recipes,\r\n        foodTex,\r\n        whiteSmokeList,\r\n        smokeAnimation,\r\n        stateTime,\r\n        genderNewRecipeAmount,\r\n      },\r\n      { batch, camera, width, height, font }\r\n    ) {\r\n      if (genderNewRecipeAmount) {\r\n        genderNewRecipeAmount = false;\r\n        TEXT_AMOUNT1 = numberFont.setNewText(width);\r\n        TEXT_AMOUNT1.setAlignMode(AlignMode.left);\r\n        TEXT_AMOUNT2 = numberFont.setNewText(width);\r\n        TEXT_AMOUNT2.setAlignMode(AlignMode.left);\r\n        TEXT_AMOUNT3 = numberFont.setNewText(width);\r\n        TEXT_AMOUNT3.setAlignMode(AlignMode.left);\r\n        TEXT_AMOUNT4 = numberFont.setNewText(width);\r\n        TEXT_AMOUNT4.setAlignMode(AlignMode.left);\r\n        TEXT_LIST = [TEXT_AMOUNT1, TEXT_AMOUNT2, TEXT_AMOUNT3, TEXT_AMOUNT4];\r\n      }\r\n\r\n      batch.setProjection(camera.combined);\r\n      batch.begin();\r\n      for (let i = 0; i < recipes.length; i++) {\r\n        let image;\r\n        for (let j = 0; j < foodTex.length; j++) {\r\n          if (foodTex[j].index === recipes[i].type) {\r\n            image = foodTex[j].image;\r\n          }\r\n        }\r\n        batch.setColor(1, 1, 1, 1);\r\n        image.draw(\r\n          batch,\r\n          recipePositionInfos[i].x,\r\n          recipePositionInfos[i].y,\r\n          FOOD_WIDTH,\r\n          FOOD_HEIGHT\r\n        );\r\n      }\r\n      for (let i = 0; i < 4; i++) {\r\n        batch.setColor(0, 0, 0, 1);\r\n        TEXT_LIST[i].draw(\r\n          batch,\r\n          `/ ${recipes[i].amount}`,\r\n          recipePositionInfos[i].x * 0.97 + FOOD_WIDTH / 2 + 0 * width * 0.005,\r\n          height * 0.06,\r\n          width / 20\r\n        );\r\n        TEXT_COUNTER.draw(\r\n          batch,\r\n          `${recipes[i].counter}`,\r\n          recipePositionInfos[i].x * 0.98 +\r\n            FOOD_WIDTH / 2 -\r\n            // i * width * 0.0003 -\r\n            width * 0.01,\r\n          height * 0.06,\r\n          width / 20\r\n        );\r\n        batch.setColor(1, 1, 1, 1);\r\n      }\r\n      batch.end();\r\n    },\r\n  };\r\n};\r\n\r\nexport default createRecipeRenderSystem;\r\n"]},"metadata":{},"sourceType":"module"}