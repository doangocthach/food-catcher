{"ast":null,"code":"import _createForOfIteratorHelper from\"E:\\\\fcatcher-client\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createForOfIteratorHelper\";import _regeneratorRuntime from\"E:\\\\fcatcher-client\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/regenerator\";import _asyncToGenerator from\"E:\\\\fcatcher-client\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/asyncToGenerator\";// import ReactDOM from \"react-dom\";\n// import React from \"react\";\n// import LeaderBoard from \"../LeaderBoard\";\n// import axios from \"../../utils/axios\";\nimport{createViewportAwareInputHandler,Vector2}from\"gdxjs\";import createWorld from\"./createWorld\";import{getFoodTexture,getFoodAnimation,getFoodInPotTexture}from\"./utils/getFood\";import createBackGroundRenderSystem from\"./systems/BgRenderSystem\";import createTrayRenderSystem from\"./systems/TrayRenderSystem\";import createTrayPositionSystem from\"./systems/TrayPositionSystem\";import createInputHandlerGameScreenSystem from\"./systems/InputHandlerGameScreenSystem\";import createFoodSpawnSystem from\"./systems/FoodSpawnSystem\";import createFoodPositionSystem from\"./systems/FoodPositionSystem\";import createFoodRenderSystem from\"./systems/FoodRenderSystem\";import createRecipeRenderSystem from\"./systems/RecipeRenderSystem\";import createTrayCollideFoodSystem from\"./systems/TrayCollideFoodSystem\";import createRedSmokeRenderSystem from\"./systems/RedSmokeRenderSystem\";import createCollectionRenderSystem from\"./systems/CollectionRenderSystem\";import createLifeRenderSystem from\"./systems/LifeRenderSystem\";import createStunScreenRenderSystem from\"./systems/StunScreenRenderSystem\";import createScoreRenderSystem from\"./systems/ScoreRenderSystem\";import createScoreCalcSystem from\"./systems/ScoreCalcSystem\";import createWhiteSmokeRenderSystem from\"./systems/WhiteSmokeRenderSystem\";import createBannerComboRenderSystem from\"./systems/BannerComboRenderSystem\";import createLeaderBoardSystem from\"./LeaderBoardScreen\";// let shouldShowLeaderBoard = true;\n// const showLeaderBoard = async (score, onRestart) => {\n//   if (!shouldShowLeaderBoard) {\n//     return;\n//   }\n//   shouldShowLeaderBoard = false;\n//   let players = [];\n//   try {\n//     const res = await axios.post(\n//       \"/leader-board\",\n//       { score },\n//       {\n//         headers: { \"x-access-token\": localStorage.getItem(\"@Token\") },\n//       }\n//     );\n//     players = res.data;\n//   } catch (e) {}\n//   const wrapper = document.createElement(\"div\");\n//   wrapper.setAttribute(\"id\", \"leader-board-wrapper\");\n//   document.body.appendChild(wrapper);\n//   ReactDOM.render(\n//     <LeaderBoard\n//       players={players}\n//       score={score}\n//       onClickRestart={() => {\n//         onRestart();\n//         shouldShowLeaderBoard = true;\n//         document.body.removeChild(wrapper);\n//       }}\n//     />,\n//     wrapper\n//   );\n// };\nvar createGameScreenSystem=function createGameScreenSystem(Game){var width=Game.width,height=Game.height,canvas=Game.canvas,gl=Game.gl,batch=Game.batch,camera=Game.camera,whiteTex=Game.whiteTex,assets=Game.assets,viewport=Game.viewport,font=Game.font;var inputHandler=createViewportAwareInputHandler(canvas,viewport);var TRAY_INITIAL_Y=height*3.1/4;var foodTex=getFoodTexture(assets.animAssets);var recipes=[];var shuffle=function shuffle(array){array.sort(function(){return Math.random()-0.5;});};var genderNewRecipe=function genderNewRecipe(){shuffle(foodTex);recipes.length=0;for(var i=0;i<4;i++){recipes.push({type:foodTex[i].index,// amount: Math.floor(Math.random() * (7 - 1) + 1),\namount:Math.floor(Math.random()*(6-4)+4),finished:false,aniStateTime:0,counter:0});}};genderNewRecipe();var worldState={score:0,comboCounter:0,correctCatch:false,genderNewRecipeAmount:true,stateTime:0,gameOver:false,emptyLife:false,life:[{red:true},{red:true},{red:true}],lifeIndex:2,// life checking index\nstunScreen:{check:false,opacity:1},trayState:{x:width/2,y:TRAY_INITIAL_Y,position:new Vector2(width/2,TRAY_INITIAL_Y),target:new Vector2(width/2,TRAY_INITIAL_Y),moveLeft:false,moveRight:false,speed:width*2.5// offsetCheckY: 0, //\n},difficulty:1,//\ncollection:[],//\ncollectionFinished:[],recipes:recipes,//\nfoods:[],//\nfoodTex:foodTex,// foodAnimation: getFoodAnimation(assets.animAssets).foodAnimation,\nsmokeAnimation:getFoodAnimation(assets.animAssets).smokeAnimation,foodInPot:getFoodInPotTexture(assets.foodInPot),whiteSmokeList:[],// contain position of ws when collection have that kind of food\nredSmokeList:[],// contain position of rs whenever red smoke event triggered\ncomboState:{delayTime:0.5,scaleSpeed:(1-0)/0.2,opacitySpeed:(1-0)/0.2},comboCheckIndex:[]};var tray=assets.foodInPot.findRegion(\"hot_pot\",-1);var TRAY_WIDTH=width/3.8;var TRAY_HEIGHT=TRAY_WIDTH*tray.height/tray.width;worldState.trayState.width=TRAY_WIDTH;worldState.trayState.height=TRAY_HEIGHT;var extra={canvas:canvas,width:width,height:height,gl:gl,batch:batch,camera:camera,whiteTex:whiteTex,inputHandler:inputHandler,assets:assets,font:font};var world=createWorld(worldState,extra);world.addSystem(createInputHandlerGameScreenSystem());world.addSystem(createBackGroundRenderSystem());world.addSystem(createTrayPositionSystem());world.addSystem(createFoodSpawnSystem());world.addSystem(createFoodPositionSystem());world.addSystem(createFoodRenderSystem());world.addSystem(createRecipeRenderSystem());world.addSystem(createRedSmokeRenderSystem());world.addSystem(createCollectionRenderSystem());world.addSystem(createLifeRenderSystem());world.addSystem(createStunScreenRenderSystem());world.addSystem(createTrayCollideFoodSystem());world.addSystem(createScoreRenderSystem());world.addSystem(createScoreCalcSystem());world.addSystem(createTrayRenderSystem());world.addSystem(createWhiteSmokeRenderSystem());world.addSystem(createBannerComboRenderSystem());var count=0;var countRemainLife=worldState.life.length;var oneTimeCheck=true;// const restartGame = async () => {\n//   Game.setCurrentScreen(await createStartScreenSystem(Game));\n// };\nvar goToLeaderBoardScreen=/*#__PURE__*/function(){var _ref=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee(){return _regeneratorRuntime.wrap(function _callee$(_context){while(1){switch(_context.prev=_context.next){case 0:_context.t0=Game;_context.next=3;return createLeaderBoardSystem(Game);case 3:_context.t1=_context.sent;_context.t0.setCurrentScreen.call(_context.t0,_context.t1);case 5:case\"end\":return _context.stop();}}},_callee);}));return function goToLeaderBoardScreen(){return _ref.apply(this,arguments);};}();var update=function update(delta){if(!worldState.gameOver){// check remaining life\ncountRemainLife=worldState.life.length;var _iterator=_createForOfIteratorHelper(worldState.life),_step;try{for(_iterator.s();!(_step=_iterator.n()).done;){var l=_step.value;if(!l.red){countRemainLife--;}}}catch(err){_iterator.e(err);}finally{_iterator.f();}if(countRemainLife===0&&oneTimeCheck){worldState.emptyLife=true;oneTimeCheck=false;for(var i=0;i<worldState.foods.length;i++){worldState.redSmokeList.push({x:worldState.foods[i].x,y:worldState.foods[i].y,stateTime:0,scale:worldState.foods[i].oriScale});}worldState.foods.length=0;worldState.gameOver=true;}// check finished current recipe\ncount=0;var _iterator2=_createForOfIteratorHelper(worldState.recipes),_step2;try{for(_iterator2.s();!(_step2=_iterator2.n()).done;){var rep=_step2.value;if(rep.finished){count++;}}}catch(err){_iterator2.e(err);}finally{_iterator2.f();}if(count===worldState.recipes.length){for(var _i=0;_i<worldState.foods.length;_i++){worldState.redSmokeList.push({x:worldState.foods[_i].x,y:worldState.foods[_i].y,stateTime:0,scale:worldState.foods[_i].oriScale});}genderNewRecipe();worldState.genderNewRecipeAmount=true;worldState.foods.length=0;worldState.collection.length=0;worldState.difficulty+=1;// worldState.trayState.offsetCheckY = 0;\n}worldState.stateTime+=delta;world.update(delta);}else{// inputHandler.cleanup();\n// world.update(delta, true);\nGame.score=worldState.score;goToLeaderBoardScreen();// showLeaderBoard(worldState.score, restartGame);\n}};return{update:update,destroy:function destroy(){inputHandler.cleanup();}};};export default createGameScreenSystem;","map":{"version":3,"sources":["E:/fcatcher-client/src/components/game/GameScreen.js"],"names":["createViewportAwareInputHandler","Vector2","createWorld","getFoodTexture","getFoodAnimation","getFoodInPotTexture","createBackGroundRenderSystem","createTrayRenderSystem","createTrayPositionSystem","createInputHandlerGameScreenSystem","createFoodSpawnSystem","createFoodPositionSystem","createFoodRenderSystem","createRecipeRenderSystem","createTrayCollideFoodSystem","createRedSmokeRenderSystem","createCollectionRenderSystem","createLifeRenderSystem","createStunScreenRenderSystem","createScoreRenderSystem","createScoreCalcSystem","createWhiteSmokeRenderSystem","createBannerComboRenderSystem","createLeaderBoardSystem","createGameScreenSystem","Game","width","height","canvas","gl","batch","camera","whiteTex","assets","viewport","font","inputHandler","TRAY_INITIAL_Y","foodTex","animAssets","recipes","shuffle","array","sort","Math","random","genderNewRecipe","length","i","push","type","index","amount","floor","finished","aniStateTime","counter","worldState","score","comboCounter","correctCatch","genderNewRecipeAmount","stateTime","gameOver","emptyLife","life","red","lifeIndex","stunScreen","check","opacity","trayState","x","y","position","target","moveLeft","moveRight","speed","difficulty","collection","collectionFinished","foods","smokeAnimation","foodInPot","whiteSmokeList","redSmokeList","comboState","delayTime","scaleSpeed","opacitySpeed","comboCheckIndex","tray","findRegion","TRAY_WIDTH","TRAY_HEIGHT","extra","world","addSystem","count","countRemainLife","oneTimeCheck","goToLeaderBoardScreen","setCurrentScreen","update","delta","l","scale","oriScale","rep","destroy","cleanup"],"mappings":"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","sourcesContent":["// import ReactDOM from \"react-dom\";\r\n// import React from \"react\";\r\n// import LeaderBoard from \"../LeaderBoard\";\r\n// import axios from \"../../utils/axios\";\r\n\r\nimport { createViewportAwareInputHandler, Vector2 } from \"gdxjs\";\r\nimport createWorld from \"./createWorld\";\r\nimport {\r\n  getFoodTexture,\r\n  getFoodAnimation,\r\n  getFoodInPotTexture,\r\n} from \"./utils/getFood\";\r\nimport createBackGroundRenderSystem from \"./systems/BgRenderSystem\";\r\nimport createTrayRenderSystem from \"./systems/TrayRenderSystem\";\r\nimport createTrayPositionSystem from \"./systems/TrayPositionSystem\";\r\nimport createInputHandlerGameScreenSystem from \"./systems/InputHandlerGameScreenSystem\";\r\nimport createFoodSpawnSystem from \"./systems/FoodSpawnSystem\";\r\nimport createFoodPositionSystem from \"./systems/FoodPositionSystem\";\r\nimport createFoodRenderSystem from \"./systems/FoodRenderSystem\";\r\nimport createRecipeRenderSystem from \"./systems/RecipeRenderSystem\";\r\nimport createTrayCollideFoodSystem from \"./systems/TrayCollideFoodSystem\";\r\nimport createRedSmokeRenderSystem from \"./systems/RedSmokeRenderSystem\";\r\nimport createCollectionRenderSystem from \"./systems/CollectionRenderSystem\";\r\nimport createLifeRenderSystem from \"./systems/LifeRenderSystem\";\r\nimport createStunScreenRenderSystem from \"./systems/StunScreenRenderSystem\";\r\nimport createScoreRenderSystem from \"./systems/ScoreRenderSystem\";\r\nimport createScoreCalcSystem from \"./systems/ScoreCalcSystem\";\r\nimport createWhiteSmokeRenderSystem from \"./systems/WhiteSmokeRenderSystem\";\r\nimport createBannerComboRenderSystem from \"./systems/BannerComboRenderSystem\";\r\nimport createLeaderBoardSystem from \"./LeaderBoardScreen\";\r\n\r\n// let shouldShowLeaderBoard = true;\r\n// const showLeaderBoard = async (score, onRestart) => {\r\n//   if (!shouldShowLeaderBoard) {\r\n//     return;\r\n//   }\r\n//   shouldShowLeaderBoard = false;\r\n//   let players = [];\r\n//   try {\r\n//     const res = await axios.post(\r\n//       \"/leader-board\",\r\n//       { score },\r\n//       {\r\n//         headers: { \"x-access-token\": localStorage.getItem(\"@Token\") },\r\n//       }\r\n//     );\r\n//     players = res.data;\r\n//   } catch (e) {}\r\n//   const wrapper = document.createElement(\"div\");\r\n//   wrapper.setAttribute(\"id\", \"leader-board-wrapper\");\r\n//   document.body.appendChild(wrapper);\r\n//   ReactDOM.render(\r\n//     <LeaderBoard\r\n//       players={players}\r\n//       score={score}\r\n//       onClickRestart={() => {\r\n//         onRestart();\r\n//         shouldShowLeaderBoard = true;\r\n//         document.body.removeChild(wrapper);\r\n//       }}\r\n//     />,\r\n//     wrapper\r\n//   );\r\n// };\r\n\r\nconst createGameScreenSystem = (Game) => {\r\n  const {\r\n    width,\r\n    height,\r\n    canvas,\r\n    gl,\r\n    batch,\r\n    camera,\r\n    whiteTex,\r\n    assets,\r\n    viewport,\r\n    font,\r\n  } = Game;\r\n\r\n  const inputHandler = createViewportAwareInputHandler(canvas, viewport);\r\n  const TRAY_INITIAL_Y = (height * 3.1) / 4;\r\n\r\n  const foodTex = getFoodTexture(assets.animAssets);\r\n  const recipes = [];\r\n\r\n  const shuffle = (array) => {\r\n    array.sort(() => Math.random() - 0.5);\r\n  };\r\n\r\n  const genderNewRecipe = () => {\r\n    shuffle(foodTex);\r\n    recipes.length = 0;\r\n    for (let i = 0; i < 4; i++) {\r\n      recipes.push({\r\n        type: foodTex[i].index,\r\n        // amount: Math.floor(Math.random() * (7 - 1) + 1),\r\n        amount: Math.floor(Math.random() * (6 - 4) + 4),\r\n        finished: false,\r\n        aniStateTime: 0,\r\n        counter: 0,\r\n      });\r\n    }\r\n  };\r\n\r\n  genderNewRecipe();\r\n\r\n  const worldState = {\r\n    score: 0,\r\n    comboCounter: 0,\r\n    correctCatch: false,\r\n    genderNewRecipeAmount: true,\r\n    stateTime: 0,\r\n    gameOver: false,\r\n    emptyLife: false,\r\n    life: [{ red: true }, { red: true }, { red: true }],\r\n    lifeIndex: 2, // life checking index\r\n    stunScreen: { check: false, opacity: 1 },\r\n    trayState: {\r\n      x: width / 2,\r\n      y: TRAY_INITIAL_Y,\r\n      position: new Vector2(width / 2, TRAY_INITIAL_Y),\r\n      target: new Vector2(width / 2, TRAY_INITIAL_Y),\r\n      moveLeft: false,\r\n      moveRight: false,\r\n      speed: width * 2.5,\r\n      // offsetCheckY: 0, //\r\n    },\r\n    difficulty: 1, //\r\n    collection: [], //\r\n    collectionFinished: [],\r\n    recipes: recipes, //\r\n    foods: [], //\r\n    foodTex: foodTex,\r\n    // foodAnimation: getFoodAnimation(assets.animAssets).foodAnimation,\r\n    smokeAnimation: getFoodAnimation(assets.animAssets).smokeAnimation,\r\n    foodInPot: getFoodInPotTexture(assets.foodInPot),\r\n    whiteSmokeList: [], // contain position of ws when collection have that kind of food\r\n    redSmokeList: [], // contain position of rs whenever red smoke event triggered\r\n    comboState: {\r\n      delayTime: 0.5,\r\n      scaleSpeed: (1 - 0) / 0.2,\r\n      opacitySpeed: (1 - 0) / 0.2,\r\n    },\r\n    comboCheckIndex: [],\r\n  };\r\n\r\n  const tray = assets.foodInPot.findRegion(\"hot_pot\", -1);\r\n  const TRAY_WIDTH = width / 3.8;\r\n  const TRAY_HEIGHT = (TRAY_WIDTH * tray.height) / tray.width;\r\n  worldState.trayState.width = TRAY_WIDTH;\r\n  worldState.trayState.height = TRAY_HEIGHT;\r\n\r\n  const extra = {\r\n    canvas,\r\n    width,\r\n    height,\r\n    gl,\r\n    batch,\r\n    camera,\r\n    whiteTex,\r\n    inputHandler,\r\n    assets,\r\n    font,\r\n  };\r\n  const world = createWorld(worldState, extra);\r\n  world.addSystem(createInputHandlerGameScreenSystem());\r\n  world.addSystem(createBackGroundRenderSystem());\r\n  world.addSystem(createTrayPositionSystem());\r\n\r\n  world.addSystem(createFoodSpawnSystem());\r\n  world.addSystem(createFoodPositionSystem());\r\n  world.addSystem(createFoodRenderSystem());\r\n  world.addSystem(createRecipeRenderSystem());\r\n  world.addSystem(createRedSmokeRenderSystem());\r\n  world.addSystem(createCollectionRenderSystem());\r\n  world.addSystem(createLifeRenderSystem());\r\n  world.addSystem(createStunScreenRenderSystem());\r\n  world.addSystem(createTrayCollideFoodSystem());\r\n  world.addSystem(createScoreRenderSystem());\r\n  world.addSystem(createScoreCalcSystem());\r\n  world.addSystem(createTrayRenderSystem());\r\n  world.addSystem(createWhiteSmokeRenderSystem());\r\n  world.addSystem(createBannerComboRenderSystem());\r\n\r\n  let count = 0;\r\n  let countRemainLife = worldState.life.length;\r\n  let oneTimeCheck = true;\r\n\r\n  // const restartGame = async () => {\r\n  //   Game.setCurrentScreen(await createStartScreenSystem(Game));\r\n  // };\r\n  const goToLeaderBoardScreen = async () => {\r\n    Game.setCurrentScreen(await createLeaderBoardSystem(Game));\r\n  };\r\n\r\n  const update = (delta) => {\r\n    if (!worldState.gameOver) {\r\n      // check remaining life\r\n      countRemainLife = worldState.life.length;\r\n      for (let l of worldState.life) {\r\n        if (!l.red) {\r\n          countRemainLife--;\r\n        }\r\n      }\r\n\r\n      if (countRemainLife === 0 && oneTimeCheck) {\r\n        worldState.emptyLife = true;\r\n        oneTimeCheck = false;\r\n        for (let i = 0; i < worldState.foods.length; i++) {\r\n          worldState.redSmokeList.push({\r\n            x: worldState.foods[i].x,\r\n            y: worldState.foods[i].y,\r\n            stateTime: 0,\r\n            scale: worldState.foods[i].oriScale,\r\n          });\r\n        }\r\n        worldState.foods.length = 0;\r\n        worldState.gameOver = true;\r\n      }\r\n\r\n      // check finished current recipe\r\n      count = 0;\r\n      for (let rep of worldState.recipes) {\r\n        if (rep.finished) {\r\n          count++;\r\n        }\r\n      }\r\n\r\n      if (count === worldState.recipes.length) {\r\n        for (let i = 0; i < worldState.foods.length; i++) {\r\n          worldState.redSmokeList.push({\r\n            x: worldState.foods[i].x,\r\n            y: worldState.foods[i].y,\r\n            stateTime: 0,\r\n            scale: worldState.foods[i].oriScale,\r\n          });\r\n        }\r\n\r\n        genderNewRecipe();\r\n        worldState.genderNewRecipeAmount = true;\r\n        worldState.foods.length = 0;\r\n        worldState.collection.length = 0;\r\n        worldState.difficulty += 1;\r\n        // worldState.trayState.offsetCheckY = 0;\r\n      }\r\n\r\n      worldState.stateTime += delta;\r\n      world.update(delta);\r\n    } else {\r\n      // inputHandler.cleanup();\r\n      // world.update(delta, true);\r\n      Game.score = worldState.score;\r\n      goToLeaderBoardScreen();\r\n      // showLeaderBoard(worldState.score, restartGame);\r\n    }\r\n  };\r\n\r\n  return {\r\n    update,\r\n    destroy() {\r\n      inputHandler.cleanup();\r\n    },\r\n  };\r\n};\r\n\r\nexport default createGameScreenSystem;\r\n"]},"metadata":{},"sourceType":"module"}