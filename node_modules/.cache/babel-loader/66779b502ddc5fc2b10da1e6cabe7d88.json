{"ast":null,"code":"import _classCallCheck from \"E:\\\\fcatcher-client\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"E:\\\\fcatcher-client\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\n\nvar Vector2 = /*#__PURE__*/function () {\n  function Vector2(x, y) {\n    _classCallCheck(this, Vector2);\n\n    this.x = x;\n    this.y = y;\n  }\n\n  _createClass(Vector2, [{\n    key: \"getX\",\n    value: function getX() {\n      return this.x;\n    }\n  }, {\n    key: \"getY\",\n    value: function getY() {\n      return this.y;\n    }\n  }, {\n    key: \"set\",\n    value: function set(x, y) {\n      this.x = x;\n      this.y = y;\n      return this;\n    }\n  }, {\n    key: \"setVector\",\n    value: function setVector(v) {\n      return this.set(v.x, v.y);\n    }\n  }, {\n    key: \"add\",\n    value: function add(x, y) {\n      this.x += x;\n      this.y += y;\n      return this;\n    }\n  }, {\n    key: \"addVector\",\n    value: function addVector(v) {\n      return this.add(v.x, v.y);\n    }\n  }, {\n    key: \"sub\",\n    value: function sub(x, y) {\n      return this.add(-x, -y);\n    }\n  }, {\n    key: \"subVector\",\n    value: function subVector(v) {\n      return this.sub(v.x, v.y);\n    }\n  }, {\n    key: \"scale\",\n    value: function scale(scalar) {\n      this.x *= scalar;\n      this.y *= scalar;\n      return this;\n    }\n  }, {\n    key: \"dot\",\n    value: function dot(v) {\n      return this.x * v.x + this.y * v.y;\n    }\n  }, {\n    key: \"distanceSqr\",\n    value: function distanceSqr(v) {\n      var deltaX = this.x - v.x;\n      var deltaY = this.y - v.y;\n      return deltaX * deltaX + deltaY * deltaY;\n    }\n  }, {\n    key: \"distance\",\n    value: function distance(v) {\n      return Math.sqrt(this.distanceSqr(v));\n    }\n  }, {\n    key: \"angle\",\n    value: function angle() {\n      return Math.atan2(this.y, this.x);\n    }\n  }, {\n    key: \"len2\",\n    value: function len2() {\n      return this.x * this.x + this.y * this.y;\n    }\n  }, {\n    key: \"len\",\n    value: function len() {\n      return Math.sqrt(this.len2());\n    }\n  }, {\n    key: \"nor\",\n    value: function nor() {\n      var len = this.len();\n\n      if (len !== 0) {\n        this.x /= len;\n        this.y /= len;\n      }\n\n      return this;\n    }\n  }, {\n    key: \"rotateRad\",\n    value: function rotateRad(rad) {\n      var cos = Math.cos(rad);\n      var sin = Math.sin(rad);\n      var newX = this.x * cos - this.y * sin;\n      var newY = this.x * sin + this.y * cos;\n      this.x = newX;\n      this.y = newY;\n      return this;\n    }\n  }, {\n    key: \"rotate\",\n    value: function rotate(degrees) {\n      return this.rotateRad(degrees * Math.PI / 180);\n    }\n  }]);\n\n  return Vector2;\n}();\n\nexport { Vector2 as default };","map":{"version":3,"sources":["E:/fcatcher-client/node_modules/gdxjs/lib/Vector2.js"],"names":["Vector2","x","y","v","set","add","sub","scalar","deltaX","deltaY","Math","sqrt","distanceSqr","atan2","len2","len","rad","cos","sin","newX","newY","degrees","rotateRad","PI"],"mappings":"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","sourcesContent":["export default class Vector2 {\n  constructor(x, y) {\n    this.x = x;\n    this.y = y;\n  }\n\n  getX() {\n    return this.x;\n  }\n\n  getY() {\n    return this.y;\n  }\n\n  set(x, y) {\n    this.x = x;\n    this.y = y;\n    return this;\n  }\n\n  setVector(v) {\n    return this.set(v.x, v.y);\n  }\n\n  add(x, y) {\n    this.x += x;\n    this.y += y;\n    return this;\n  }\n\n  addVector(v) {\n    return this.add(v.x, v.y);\n  }\n\n  sub(x, y) {\n    return this.add(-x, -y);\n  }\n\n  subVector(v) {\n    return this.sub(v.x, v.y);\n  }\n\n  scale(scalar) {\n    this.x *= scalar;\n    this.y *= scalar;\n    return this;\n  }\n\n  dot(v) {\n    return this.x * v.x + this.y * v.y;\n  }\n\n  distanceSqr(v) {\n    const deltaX = this.x - v.x;\n    const deltaY = this.y - v.y;\n    return deltaX * deltaX + deltaY * deltaY;\n  }\n\n  distance(v) {\n    return Math.sqrt(this.distanceSqr(v));\n  }\n\n  angle() {\n    return Math.atan2(this.y, this.x);\n  }\n\n  len2() {\n    return this.x * this.x + this.y * this.y;\n  }\n\n  len() {\n    return Math.sqrt(this.len2());\n  }\n\n  nor() {\n    const len = this.len();\n\n    if (len !== 0) {\n      this.x /= len;\n      this.y /= len;\n    }\n\n    return this;\n  }\n\n  rotateRad(rad) {\n    const cos = Math.cos(rad);\n    const sin = Math.sin(rad);\n    const newX = this.x * cos - this.y * sin;\n    const newY = this.x * sin + this.y * cos;\n    this.x = newX;\n    this.y = newY;\n    return this;\n  }\n\n  rotate(degrees) {\n    return this.rotateRad(degrees * Math.PI / 180);\n  }\n\n}"]},"metadata":{},"sourceType":"module"}