{"ast":null,"code":"import{Vector2}from\"gdxjs\";var createInputHandlerGameScreenSystem=function createInputHandlerGameScreenSystem(){var worldCoord=new Vector2();return{init:function init(_ref,_ref2){var trayState=_ref.trayState;var inputHandler=_ref2.inputHandler,width=_ref2.width;inputHandler.addEventListener(\"touchStart\",function(){worldCoord.setVector(inputHandler.getTouchedWorldCoord());trayState.target.x=worldCoord.x;});inputHandler.addEventListener(\"touchMove\",function(){worldCoord.setVector(inputHandler.getTouchedWorldCoord());trayState.target.x=worldCoord.x;});},update:function update(delta,_ref3,_ref4){// if (inputHandler.getTouchedWorldCoord()) {\n//   worldCoord.setVector(inputHandler.getTouchedWorldCoord());\n//   trayState.target.x = worldCoord.x;\n// }\nvar trayState=_ref3.trayState;var inputHandler=_ref4.inputHandler;}};};export default createInputHandlerGameScreenSystem;","map":{"version":3,"sources":["E:/fcatcher-client/src/components/game/systems/InputHandlerGameScreenSystem.js"],"names":["Vector2","createInputHandlerGameScreenSystem","worldCoord","init","trayState","inputHandler","width","addEventListener","setVector","getTouchedWorldCoord","target","x","update","delta"],"mappings":"AAAA,OAASA,OAAT,KAAwB,OAAxB,CAEA,GAAMC,CAAAA,kCAAkC,CAAG,QAArCA,CAAAA,kCAAqC,EAAM,CAC/C,GAAIC,CAAAA,UAAU,CAAG,GAAIF,CAAAA,OAAJ,EAAjB,CAEA,MAAO,CACLG,IADK,0BACwC,IAAtCC,CAAAA,SAAsC,MAAtCA,SAAsC,IAAvBC,CAAAA,YAAuB,OAAvBA,YAAuB,CAATC,KAAS,OAATA,KAAS,CAC3CD,YAAY,CAACE,gBAAb,CAA8B,YAA9B,CAA4C,UAAM,CAChDL,UAAU,CAACM,SAAX,CAAqBH,YAAY,CAACI,oBAAb,EAArB,EACAL,SAAS,CAACM,MAAV,CAAiBC,CAAjB,CAAqBT,UAAU,CAACS,CAAhC,CACD,CAHD,EAKAN,YAAY,CAACE,gBAAb,CAA8B,WAA9B,CAA2C,UAAM,CAC/CL,UAAU,CAACM,SAAX,CAAqBH,YAAY,CAACI,oBAAb,EAArB,EACAL,SAAS,CAACM,MAAV,CAAiBC,CAAjB,CAAqBT,UAAU,CAACS,CAAhC,CACD,CAHD,EAID,CAXI,CAYLC,MAZK,iBAYEC,KAZF,aAY0C,CAC7C;AACA;AACA;AACA;AAJ6C,GAA/BT,CAAAA,SAA+B,OAA/BA,SAA+B,IAAhBC,CAAAA,YAAgB,OAAhBA,YAAgB,CAK9C,CAjBI,CAAP,CAmBD,CAtBD,CAuBA,cAAeJ,CAAAA,kCAAf","sourcesContent":["import { Vector2 } from \"gdxjs\";\r\n\r\nconst createInputHandlerGameScreenSystem = () => {\r\n  let worldCoord = new Vector2();\r\n\r\n  return {\r\n    init({ trayState }, { inputHandler, width }) {\r\n      inputHandler.addEventListener(\"touchStart\", () => {\r\n        worldCoord.setVector(inputHandler.getTouchedWorldCoord());\r\n        trayState.target.x = worldCoord.x;\r\n      });\r\n\r\n      inputHandler.addEventListener(\"touchMove\", () => {\r\n        worldCoord.setVector(inputHandler.getTouchedWorldCoord());\r\n        trayState.target.x = worldCoord.x;\r\n      });\r\n    },\r\n    update(delta, { trayState }, { inputHandler }) {\r\n      // if (inputHandler.getTouchedWorldCoord()) {\r\n      //   worldCoord.setVector(inputHandler.getTouchedWorldCoord());\r\n      //   trayState.target.x = worldCoord.x;\r\n      // }\r\n    },\r\n  };\r\n};\r\nexport default createInputHandlerGameScreenSystem;\r\n"]},"metadata":{},"sourceType":"module"}