{"ast":null,"code":"var createCollectionRenderSystem=function createCollectionRenderSystem(){var COLLECTION_WIDTH,COLLECTION_HEIGHT;// let SMOKE_WIDTH, SMOKE_HEIGHT;\nvar foodInPotTex;var foodPosition;return{init:function init(_ref,_ref2){var trayState=_ref.trayState;var width=_ref2.width,assets=_ref2.assets;COLLECTION_WIDTH=width/7;COLLECTION_HEIGHT=COLLECTION_WIDTH*255/400;// SMOKE_WIDTH = COLLECTION_WIDTH * 4;\n// SMOKE_HEIGHT = COLLECTION_HEIGHT * 4;\n},update:function update(delta,_ref3,_ref4){var trayState=_ref3.trayState,foodAnimation=_ref3.foodAnimation,smokeAnimation=_ref3.smokeAnimation,collection=_ref3.collection,foodInPot=_ref3.foodInPot;var batch=_ref4.batch,width=_ref4.width,height=_ref4.height,camera=_ref4.camera;foodPosition=[{x:trayState.x-COLLECTION_WIDTH/2,y:trayState.y-trayState.height/1.4},{x:trayState.x-trayState.width/2.2,y:trayState.y-trayState.height/1.4},{x:trayState.x+trayState.width/2.4-COLLECTION_WIDTH,y:trayState.y-trayState.height/1.4},{x:trayState.x-COLLECTION_WIDTH/2,y:trayState.y-trayState.height*1.2}];batch.setProjection(camera.combined);batch.begin();batch.setColor(1,1,1,1);for(var i=collection.length-1;i>=0;i--){for(var j=0;j<foodInPot.length;j++){if(collection[i].type===foodInPot[j].index){foodInPotTex=foodInPot[j];}}foodInPotTex.image.draw(batch,foodPosition[i].x,foodPosition[i].y,COLLECTION_WIDTH,COLLECTION_HEIGHT);}batch.end();}};};export default createCollectionRenderSystem;","map":{"version":3,"sources":["E:/fcatcher-client/src/components/game/systems/CollectionRenderSystem.js"],"names":["createCollectionRenderSystem","COLLECTION_WIDTH","COLLECTION_HEIGHT","foodInPotTex","foodPosition","init","trayState","width","assets","update","delta","foodAnimation","smokeAnimation","collection","foodInPot","batch","height","camera","x","y","setProjection","combined","begin","setColor","i","length","j","type","index","image","draw","end"],"mappings":"AAAA,GAAMA,CAAAA,4BAA4B,CAAG,QAA/BA,CAAAA,4BAA+B,EAAM,CACzC,GAAIC,CAAAA,gBAAJ,CAAsBC,iBAAtB,CACA;AACA,GAAIC,CAAAA,YAAJ,CACA,GAAIC,CAAAA,YAAJ,CACA,MAAO,CACLC,IADK,0BACkC,IAAhCC,CAAAA,SAAgC,MAAhCA,SAAgC,IAAjBC,CAAAA,KAAiB,OAAjBA,KAAiB,CAAVC,MAAU,OAAVA,MAAU,CACrCP,gBAAgB,CAAGM,KAAK,CAAG,CAA3B,CACAL,iBAAiB,CAAID,gBAAgB,CAAG,GAApB,CAA2B,GAA/C,CAEA;AACA;AACD,CAPI,CAQLQ,MARK,iBASHC,KATG,aAYH,IAFEJ,CAAAA,SAEF,OAFEA,SAEF,CAFaK,aAEb,OAFaA,aAEb,CAF4BC,cAE5B,OAF4BA,cAE5B,CAF4CC,UAE5C,OAF4CA,UAE5C,CAFwDC,SAExD,OAFwDA,SAExD,IADEC,CAAAA,KACF,OADEA,KACF,CADSR,KACT,OADSA,KACT,CADgBS,MAChB,OADgBA,MAChB,CADwBC,MACxB,OADwBA,MACxB,CACAb,YAAY,CAAG,CACb,CACEc,CAAC,CAAEZ,SAAS,CAACY,CAAV,CAAcjB,gBAAgB,CAAG,CADtC,CAEEkB,CAAC,CAAEb,SAAS,CAACa,CAAV,CAAcb,SAAS,CAACU,MAAV,CAAmB,GAFtC,CADa,CAKb,CACEE,CAAC,CAAEZ,SAAS,CAACY,CAAV,CAAcZ,SAAS,CAACC,KAAV,CAAkB,GADrC,CAEEY,CAAC,CAAEb,SAAS,CAACa,CAAV,CAAcb,SAAS,CAACU,MAAV,CAAmB,GAFtC,CALa,CASb,CACEE,CAAC,CAAEZ,SAAS,CAACY,CAAV,CAAcZ,SAAS,CAACC,KAAV,CAAkB,GAAhC,CAAsCN,gBAD3C,CAEEkB,CAAC,CAAEb,SAAS,CAACa,CAAV,CAAcb,SAAS,CAACU,MAAV,CAAmB,GAFtC,CATa,CAab,CACEE,CAAC,CAAEZ,SAAS,CAACY,CAAV,CAAcjB,gBAAgB,CAAG,CADtC,CAEEkB,CAAC,CAAEb,SAAS,CAACa,CAAV,CAAcb,SAAS,CAACU,MAAV,CAAmB,GAFtC,CAba,CAAf,CAkBAD,KAAK,CAACK,aAAN,CAAoBH,MAAM,CAACI,QAA3B,EACAN,KAAK,CAACO,KAAN,GACAP,KAAK,CAACQ,QAAN,CAAe,CAAf,CAAkB,CAAlB,CAAqB,CAArB,CAAwB,CAAxB,EACA,IAAK,GAAIC,CAAAA,CAAC,CAAGX,UAAU,CAACY,MAAX,CAAoB,CAAjC,CAAoCD,CAAC,EAAI,CAAzC,CAA4CA,CAAC,EAA7C,CAAiD,CAC/C,IAAK,GAAIE,CAAAA,CAAC,CAAG,CAAb,CAAgBA,CAAC,CAAGZ,SAAS,CAACW,MAA9B,CAAsCC,CAAC,EAAvC,CAA2C,CACzC,GAAIb,UAAU,CAACW,CAAD,CAAV,CAAcG,IAAd,GAAuBb,SAAS,CAACY,CAAD,CAAT,CAAaE,KAAxC,CAA+C,CAC7CzB,YAAY,CAAGW,SAAS,CAACY,CAAD,CAAxB,CACD,CACF,CAEDvB,YAAY,CAAC0B,KAAb,CAAmBC,IAAnB,CACEf,KADF,CAEEX,YAAY,CAACoB,CAAD,CAAZ,CAAgBN,CAFlB,CAGEd,YAAY,CAACoB,CAAD,CAAZ,CAAgBL,CAHlB,CAIElB,gBAJF,CAKEC,iBALF,EAOD,CAEDa,KAAK,CAACgB,GAAN,GACD,CAnDI,CAAP,CAqDD,CA1DD,CA4DA,cAAe/B,CAAAA,4BAAf","sourcesContent":["const createCollectionRenderSystem = () => {\r\n  let COLLECTION_WIDTH, COLLECTION_HEIGHT;\r\n  // let SMOKE_WIDTH, SMOKE_HEIGHT;\r\n  let foodInPotTex;\r\n  let foodPosition;\r\n  return {\r\n    init({ trayState }, { width, assets }) {\r\n      COLLECTION_WIDTH = width / 7;\r\n      COLLECTION_HEIGHT = (COLLECTION_WIDTH * 255) / 400;\r\n\r\n      // SMOKE_WIDTH = COLLECTION_WIDTH * 4;\r\n      // SMOKE_HEIGHT = COLLECTION_HEIGHT * 4;\r\n    },\r\n    update(\r\n      delta,\r\n      { trayState, foodAnimation, smokeAnimation, collection, foodInPot },\r\n      { batch, width, height, camera }\r\n    ) {\r\n      foodPosition = [\r\n        {\r\n          x: trayState.x - COLLECTION_WIDTH / 2,\r\n          y: trayState.y - trayState.height / 1.4,\r\n        },\r\n        {\r\n          x: trayState.x - trayState.width / 2.2,\r\n          y: trayState.y - trayState.height / 1.4,\r\n        },\r\n        {\r\n          x: trayState.x + trayState.width / 2.4 - COLLECTION_WIDTH,\r\n          y: trayState.y - trayState.height / 1.4,\r\n        },\r\n        {\r\n          x: trayState.x - COLLECTION_WIDTH / 2,\r\n          y: trayState.y - trayState.height * 1.2,\r\n        },\r\n      ];\r\n      batch.setProjection(camera.combined);\r\n      batch.begin();\r\n      batch.setColor(1, 1, 1, 1);\r\n      for (let i = collection.length - 1; i >= 0; i--) {\r\n        for (let j = 0; j < foodInPot.length; j++) {\r\n          if (collection[i].type === foodInPot[j].index) {\r\n            foodInPotTex = foodInPot[j];\r\n          }\r\n        }\r\n\r\n        foodInPotTex.image.draw(\r\n          batch,\r\n          foodPosition[i].x,\r\n          foodPosition[i].y,\r\n          COLLECTION_WIDTH,\r\n          COLLECTION_HEIGHT\r\n        );\r\n      }\r\n\r\n      batch.end();\r\n    },\r\n  };\r\n};\r\n\r\nexport default createCollectionRenderSystem;\r\n"]},"metadata":{},"sourceType":"module"}