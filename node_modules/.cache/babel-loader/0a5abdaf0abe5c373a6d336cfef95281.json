{"ast":null,"code":"import _slicedToArray from \"E:\\\\fcatcher-client\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/slicedToArray\";\nexport var project = function project(out, vec3, mat4) {\n  var _vec = _slicedToArray(vec3, 3),\n      x = _vec[0],\n      y = _vec[1],\n      z = _vec[2];\n\n  var m = mat4;\n  var a00 = m[0],\n      a01 = m[1],\n      a02 = m[2],\n      a03 = m[3],\n      a10 = m[4],\n      a11 = m[5],\n      a12 = m[6],\n      a13 = m[7],\n      a20 = m[8],\n      a21 = m[9],\n      a22 = m[10],\n      a23 = m[11],\n      a30 = m[12],\n      a31 = m[13],\n      a32 = m[14],\n      a33 = m[15];\n  var l_w = 1 / (x * a03 + y * a13 + z * a23 + a33);\n  out[0] = (x * a00 + y * a10 + z * a20 + a30) * l_w;\n  out[1] = (x * a01 + y * a11 + z * a21 + a31) * l_w;\n  out[2] = (x * a02 + y * a12 + z * a22 + a32) * l_w;\n  return out;\n};\nexport var unproject = function unproject(out, vec3, invMat4, viewX, viewY, viewWidth, viewHeight) {\n  var _vec2 = _slicedToArray(vec3, 3),\n      x = _vec2[0],\n      y = _vec2[1],\n      z = _vec2[2];\n\n  x = x - viewX;\n  y = viewHeight - y - 1;\n  y = y - viewY;\n  out[0] = 2 * x / viewWidth - 1;\n  out[1] = 2 * y / viewHeight - 1;\n  out[2] = 2 * z - 1;\n  return project(out, out, invMat4);\n};","map":{"version":3,"sources":["E:/fcatcher-client/node_modules/gdxjs/lib/mathUtils.js"],"names":["project","out","vec3","mat4","x","y","z","m","a00","a01","a02","a03","a10","a11","a12","a13","a20","a21","a22","a23","a30","a31","a32","a33","l_w","unproject","invMat4","viewX","viewY","viewWidth","viewHeight"],"mappings":";AAAA,OAAO,IAAMA,OAAO,GAAG,SAAVA,OAAU,CAACC,GAAD,EAAMC,IAAN,EAAYC,IAAZ,EAAqB;AAAA,4BACxBD,IADwB;AAAA,MACnCE,CADmC;AAAA,MAChCC,CADgC;AAAA,MAC7BC,CAD6B;;AAE1C,MAAMC,CAAC,GAAGJ,IAAV;AACA,MAAMK,GAAG,GAAGD,CAAC,CAAC,CAAD,CAAb;AAAA,MACME,GAAG,GAAGF,CAAC,CAAC,CAAD,CADb;AAAA,MAEMG,GAAG,GAAGH,CAAC,CAAC,CAAD,CAFb;AAAA,MAGMI,GAAG,GAAGJ,CAAC,CAAC,CAAD,CAHb;AAAA,MAIMK,GAAG,GAAGL,CAAC,CAAC,CAAD,CAJb;AAAA,MAKMM,GAAG,GAAGN,CAAC,CAAC,CAAD,CALb;AAAA,MAMMO,GAAG,GAAGP,CAAC,CAAC,CAAD,CANb;AAAA,MAOMQ,GAAG,GAAGR,CAAC,CAAC,CAAD,CAPb;AAAA,MAQMS,GAAG,GAAGT,CAAC,CAAC,CAAD,CARb;AAAA,MASMU,GAAG,GAAGV,CAAC,CAAC,CAAD,CATb;AAAA,MAUMW,GAAG,GAAGX,CAAC,CAAC,EAAD,CAVb;AAAA,MAWMY,GAAG,GAAGZ,CAAC,CAAC,EAAD,CAXb;AAAA,MAYMa,GAAG,GAAGb,CAAC,CAAC,EAAD,CAZb;AAAA,MAaMc,GAAG,GAAGd,CAAC,CAAC,EAAD,CAbb;AAAA,MAcMe,GAAG,GAAGf,CAAC,CAAC,EAAD,CAdb;AAAA,MAeMgB,GAAG,GAAGhB,CAAC,CAAC,EAAD,CAfb;AAgBA,MAAMiB,GAAG,GAAG,KAAKpB,CAAC,GAAGO,GAAJ,GAAUN,CAAC,GAAGU,GAAd,GAAoBT,CAAC,GAAGa,GAAxB,GAA8BI,GAAnC,CAAZ;AACAtB,EAAAA,GAAG,CAAC,CAAD,CAAH,GAAS,CAACG,CAAC,GAAGI,GAAJ,GAAUH,CAAC,GAAGO,GAAd,GAAoBN,CAAC,GAAGU,GAAxB,GAA8BI,GAA/B,IAAsCI,GAA/C;AACAvB,EAAAA,GAAG,CAAC,CAAD,CAAH,GAAS,CAACG,CAAC,GAAGK,GAAJ,GAAUJ,CAAC,GAAGQ,GAAd,GAAoBP,CAAC,GAAGW,GAAxB,GAA8BI,GAA/B,IAAsCG,GAA/C;AACAvB,EAAAA,GAAG,CAAC,CAAD,CAAH,GAAS,CAACG,CAAC,GAAGM,GAAJ,GAAUL,CAAC,GAAGS,GAAd,GAAoBR,CAAC,GAAGY,GAAxB,GAA8BI,GAA/B,IAAsCE,GAA/C;AACA,SAAOvB,GAAP;AACD,CAxBM;AAyBP,OAAO,IAAMwB,SAAS,GAAG,SAAZA,SAAY,CAACxB,GAAD,EAAMC,IAAN,EAAYwB,OAAZ,EAAqBC,KAArB,EAA4BC,KAA5B,EAAmCC,SAAnC,EAA8CC,UAA9C,EAA6D;AAAA,6BACpE5B,IADoE;AAAA,MAC/EE,CAD+E;AAAA,MAC5EC,CAD4E;AAAA,MACzEC,CADyE;;AAEpFF,EAAAA,CAAC,GAAGA,CAAC,GAAGuB,KAAR;AACAtB,EAAAA,CAAC,GAAGyB,UAAU,GAAGzB,CAAb,GAAiB,CAArB;AACAA,EAAAA,CAAC,GAAGA,CAAC,GAAGuB,KAAR;AACA3B,EAAAA,GAAG,CAAC,CAAD,CAAH,GAAS,IAAIG,CAAJ,GAAQyB,SAAR,GAAoB,CAA7B;AACA5B,EAAAA,GAAG,CAAC,CAAD,CAAH,GAAS,IAAII,CAAJ,GAAQyB,UAAR,GAAqB,CAA9B;AACA7B,EAAAA,GAAG,CAAC,CAAD,CAAH,GAAS,IAAIK,CAAJ,GAAQ,CAAjB;AACA,SAAON,OAAO,CAACC,GAAD,EAAMA,GAAN,EAAWyB,OAAX,CAAd;AACD,CATM","sourcesContent":["export const project = (out, vec3, mat4) => {\n  const [x, y, z] = vec3;\n  const m = mat4;\n  const a00 = m[0],\n        a01 = m[1],\n        a02 = m[2],\n        a03 = m[3],\n        a10 = m[4],\n        a11 = m[5],\n        a12 = m[6],\n        a13 = m[7],\n        a20 = m[8],\n        a21 = m[9],\n        a22 = m[10],\n        a23 = m[11],\n        a30 = m[12],\n        a31 = m[13],\n        a32 = m[14],\n        a33 = m[15];\n  const l_w = 1 / (x * a03 + y * a13 + z * a23 + a33);\n  out[0] = (x * a00 + y * a10 + z * a20 + a30) * l_w;\n  out[1] = (x * a01 + y * a11 + z * a21 + a31) * l_w;\n  out[2] = (x * a02 + y * a12 + z * a22 + a32) * l_w;\n  return out;\n};\nexport const unproject = (out, vec3, invMat4, viewX, viewY, viewWidth, viewHeight) => {\n  let [x, y, z] = vec3;\n  x = x - viewX;\n  y = viewHeight - y - 1;\n  y = y - viewY;\n  out[0] = 2 * x / viewWidth - 1;\n  out[1] = 2 * y / viewHeight - 1;\n  out[2] = 2 * z - 1;\n  return project(out, out, invMat4);\n};"]},"metadata":{},"sourceType":"module"}