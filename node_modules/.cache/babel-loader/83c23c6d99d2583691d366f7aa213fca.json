{"ast":null,"code":"var createWhiteSmokeRenderSystem=function createWhiteSmokeRenderSystem(){var SMOKE_WIDTH,SMOKE_HEIGHT;return{init:function init(_ref,_ref2){var foodTex=_ref.foodTex;var width=_ref2.width,height=_ref2.height;SMOKE_WIDTH=width/2;SMOKE_HEIGHT=SMOKE_WIDTH*3/5;},update:function update(delta,worldState,_ref3){var batch=_ref3.batch,camera=_ref3.camera,width=_ref3.width,height=_ref3.height;var whiteSmokeList=worldState.whiteSmokeList,smokeAnimation=worldState.smokeAnimation,trayState=worldState.trayState;batch.setProjection(camera.combined);batch.begin();batch.setColor(1,1,1,1);for(var i=whiteSmokeList.length-1;i>=0;i--){if(whiteSmokeList[i].inPot){whiteSmokeList[i].stateTime+=delta;smokeAnimation.animation.getKeyFrame(whiteSmokeList[i].stateTime,1).draw(batch,trayState.x-trayState.width*0.8,trayState.y-trayState.height*1.6,SMOKE_WIDTH,SMOKE_HEIGHT,SMOKE_WIDTH/2,SMOKE_HEIGHT/2,0,1.3,1.3);}else{whiteSmokeList[i].stateTime+=delta;smokeAnimation.animation.getKeyFrame(whiteSmokeList[i].stateTime,1).draw(batch,whiteSmokeList[i].x-SMOKE_WIDTH/2.5,whiteSmokeList[i].y-SMOKE_HEIGHT/3,SMOKE_WIDTH,SMOKE_HEIGHT,SMOKE_WIDTH/2,SMOKE_HEIGHT/2,0,whiteSmokeList[i].scale,whiteSmokeList[i].scale);}if(whiteSmokeList[i].stateTime>smokeAnimation.duration*smokeAnimation.frameLength){whiteSmokeList.splice(i,1);}}batch.end();}};};export default createWhiteSmokeRenderSystem;","map":{"version":3,"sources":["E:/fcatcher-client/src/components/game/systems/WhiteSmokeRenderSystem.js"],"names":["createWhiteSmokeRenderSystem","SMOKE_WIDTH","SMOKE_HEIGHT","init","foodTex","width","height","update","delta","worldState","batch","camera","whiteSmokeList","smokeAnimation","trayState","setProjection","combined","begin","setColor","i","length","inPot","stateTime","animation","getKeyFrame","draw","x","y","scale","duration","frameLength","splice","end"],"mappings":"AAAA,GAAMA,CAAAA,4BAA4B,CAAG,QAA/BA,CAAAA,4BAA+B,EAAM,CACzC,GAAIC,CAAAA,WAAJ,CAAiBC,YAAjB,CACA,MAAO,CACLC,IADK,0BACgC,IAA9BC,CAAAA,OAA8B,MAA9BA,OAA8B,IAAjBC,CAAAA,KAAiB,OAAjBA,KAAiB,CAAVC,MAAU,OAAVA,MAAU,CACnCL,WAAW,CAAGI,KAAK,CAAG,CAAtB,CACAH,YAAY,CAAID,WAAW,CAAG,CAAf,CAAoB,CAAnC,CACD,CAJI,CAMLM,MANK,iBAMEC,KANF,CAMSC,UANT,OAMuD,IAAhCC,CAAAA,KAAgC,OAAhCA,KAAgC,CAAzBC,MAAyB,OAAzBA,MAAyB,CAAjBN,KAAiB,OAAjBA,KAAiB,CAAVC,MAAU,OAAVA,MAAU,IAClDM,CAAAA,cADkD,CACJH,UADI,CAClDG,cADkD,CAClCC,cADkC,CACJJ,UADI,CAClCI,cADkC,CAClBC,SADkB,CACJL,UADI,CAClBK,SADkB,CAE1DJ,KAAK,CAACK,aAAN,CAAoBJ,MAAM,CAACK,QAA3B,EACAN,KAAK,CAACO,KAAN,GACAP,KAAK,CAACQ,QAAN,CAAe,CAAf,CAAkB,CAAlB,CAAqB,CAArB,CAAwB,CAAxB,EACA,IAAK,GAAIC,CAAAA,CAAC,CAAGP,cAAc,CAACQ,MAAf,CAAwB,CAArC,CAAwCD,CAAC,EAAI,CAA7C,CAAgDA,CAAC,EAAjD,CAAqD,CACnD,GAAIP,cAAc,CAACO,CAAD,CAAd,CAAkBE,KAAtB,CAA6B,CAC3BT,cAAc,CAACO,CAAD,CAAd,CAAkBG,SAAlB,EAA+Bd,KAA/B,CACAK,cAAc,CAACU,SAAf,CACGC,WADH,CACeZ,cAAc,CAACO,CAAD,CAAd,CAAkBG,SADjC,CAC4C,CAD5C,EAEGG,IAFH,CAGIf,KAHJ,CAIII,SAAS,CAACY,CAAV,CAAcZ,SAAS,CAACT,KAAV,CAAkB,GAJpC,CAKIS,SAAS,CAACa,CAAV,CAAcb,SAAS,CAACR,MAAV,CAAmB,GALrC,CAMIL,WANJ,CAOIC,YAPJ,CAQID,WAAW,CAAG,CARlB,CASIC,YAAY,CAAG,CATnB,CAUI,CAVJ,CAWI,GAXJ,CAYI,GAZJ,EAcD,CAhBD,IAgBO,CACLU,cAAc,CAACO,CAAD,CAAd,CAAkBG,SAAlB,EAA+Bd,KAA/B,CACAK,cAAc,CAACU,SAAf,CACGC,WADH,CACeZ,cAAc,CAACO,CAAD,CAAd,CAAkBG,SADjC,CAC4C,CAD5C,EAEGG,IAFH,CAGIf,KAHJ,CAIIE,cAAc,CAACO,CAAD,CAAd,CAAkBO,CAAlB,CAAsBzB,WAAW,CAAG,GAJxC,CAKIW,cAAc,CAACO,CAAD,CAAd,CAAkBQ,CAAlB,CAAsBzB,YAAY,CAAG,CALzC,CAMID,WANJ,CAOIC,YAPJ,CAQID,WAAW,CAAG,CARlB,CASIC,YAAY,CAAG,CATnB,CAUI,CAVJ,CAWIU,cAAc,CAACO,CAAD,CAAd,CAAkBS,KAXtB,CAYIhB,cAAc,CAACO,CAAD,CAAd,CAAkBS,KAZtB,EAcD,CACD,GACEhB,cAAc,CAACO,CAAD,CAAd,CAAkBG,SAAlB,CACAT,cAAc,CAACgB,QAAf,CAA0BhB,cAAc,CAACiB,WAF3C,CAGE,CACAlB,cAAc,CAACmB,MAAf,CAAsBZ,CAAtB,CAAyB,CAAzB,EACD,CACF,CACDT,KAAK,CAACsB,GAAN,GACD,CArDI,CAAP,CAuDD,CAzDD,CA2DA,cAAehC,CAAAA,4BAAf","sourcesContent":["const createWhiteSmokeRenderSystem = () => {\r\n  let SMOKE_WIDTH, SMOKE_HEIGHT;\r\n  return {\r\n    init({ foodTex }, { width, height }) {\r\n      SMOKE_WIDTH = width / 2;\r\n      SMOKE_HEIGHT = (SMOKE_WIDTH * 3) / 5;\r\n    },\r\n\r\n    update(delta, worldState, { batch, camera, width, height }) {\r\n      const { whiteSmokeList, smokeAnimation, trayState } = worldState;\r\n      batch.setProjection(camera.combined);\r\n      batch.begin();\r\n      batch.setColor(1, 1, 1, 1);\r\n      for (let i = whiteSmokeList.length - 1; i >= 0; i--) {\r\n        if (whiteSmokeList[i].inPot) {\r\n          whiteSmokeList[i].stateTime += delta;\r\n          smokeAnimation.animation\r\n            .getKeyFrame(whiteSmokeList[i].stateTime, 1)\r\n            .draw(\r\n              batch,\r\n              trayState.x - trayState.width * 0.8,\r\n              trayState.y - trayState.height * 1.6,\r\n              SMOKE_WIDTH,\r\n              SMOKE_HEIGHT,\r\n              SMOKE_WIDTH / 2,\r\n              SMOKE_HEIGHT / 2,\r\n              0,\r\n              1.3,\r\n              1.3\r\n            );\r\n        } else {\r\n          whiteSmokeList[i].stateTime += delta;\r\n          smokeAnimation.animation\r\n            .getKeyFrame(whiteSmokeList[i].stateTime, 1)\r\n            .draw(\r\n              batch,\r\n              whiteSmokeList[i].x - SMOKE_WIDTH / 2.5,\r\n              whiteSmokeList[i].y - SMOKE_HEIGHT / 3,\r\n              SMOKE_WIDTH,\r\n              SMOKE_HEIGHT,\r\n              SMOKE_WIDTH / 2,\r\n              SMOKE_HEIGHT / 2,\r\n              0,\r\n              whiteSmokeList[i].scale,\r\n              whiteSmokeList[i].scale\r\n            );\r\n        }\r\n        if (\r\n          whiteSmokeList[i].stateTime >\r\n          smokeAnimation.duration * smokeAnimation.frameLength\r\n        ) {\r\n          whiteSmokeList.splice(i, 1);\r\n        }\r\n      }\r\n      batch.end();\r\n    },\r\n  };\r\n};\r\n\r\nexport default createWhiteSmokeRenderSystem;\r\n"]},"metadata":{},"sourceType":"module"}