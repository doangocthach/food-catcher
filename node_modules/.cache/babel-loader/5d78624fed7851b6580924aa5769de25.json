{"ast":null,"code":"import _classCallCheck from \"E:\\\\fcatcher-client\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"E:\\\\fcatcher-client\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\n\nvar TextureRegion = /*#__PURE__*/function () {\n  _createClass(TextureRegion, null, [{\n    key: \"splitTexture\",\n    value: function splitTexture(texture, cols, rows) {\n      var width = texture.width,\n          height = texture.height;\n      var regionWidth = width / cols;\n      var regionHeight = height / rows;\n      var regions = [];\n\n      for (var x = 0; x < cols; x++) {\n        for (var y = 0; y < rows; y++) {\n          regions.push(new TextureRegion(texture, x * regionWidth, y * regionHeight, regionWidth, regionHeight, {}));\n        }\n      }\n\n      return regions;\n    }\n  }]);\n\n  function TextureRegion(tex, x, y, width, height, extraData, invTexWidth, invTexHeight, rotate) {\n    _classCallCheck(this, TextureRegion);\n\n    if (!invTexWidth || !invTexHeight) {\n      invTexWidth = 1 / tex.width;\n      invTexHeight = 1 / tex.height;\n    }\n\n    var u = x * invTexWidth;\n    var v = y * invTexHeight;\n    var u2 = (x + width) * invTexWidth;\n    var v2 = (y + height) * invTexHeight;\n    this.texture = tex;\n    this.x = x;\n    this.y = y;\n    this.width = width;\n    this.height = height;\n\n    if (rotate) {\n      this.u = u2;\n      this.v = v;\n      this.u2 = u;\n      this.v2 = v2;\n    } else {\n      this.u = u;\n      this.v = v;\n      this.u2 = u2;\n      this.v2 = v2;\n    }\n\n    for (var key in extraData) {\n      this[key] = extraData[key];\n    }\n  }\n\n  _createClass(TextureRegion, [{\n    key: \"draw\",\n    value: function draw(batch, x, y, width, height) {\n      var originX = arguments.length > 5 && arguments[5] !== undefined ? arguments[5] : 0;\n      var originY = arguments.length > 6 && arguments[6] !== undefined ? arguments[6] : 0;\n      var rotation = arguments.length > 7 && arguments[7] !== undefined ? arguments[7] : 0;\n      var scaleX = arguments.length > 8 && arguments[8] !== undefined ? arguments[8] : 1;\n      var scaleY = arguments.length > 9 && arguments[9] !== undefined ? arguments[9] : 1;\n      batch.draw(this.texture, x, y, width, height, originX, originY, rotation, scaleX, scaleY, this.u, this.v, this.u2, this.v2);\n    }\n  }]);\n\n  return TextureRegion;\n}();\n\nexport { TextureRegion as default };","map":{"version":3,"sources":["E:/fcatcher-client/node_modules/gdxjs/lib/TextureRegion.js"],"names":["TextureRegion","texture","cols","rows","width","height","regionWidth","regionHeight","regions","x","y","push","tex","extraData","invTexWidth","invTexHeight","rotate","u","v","u2","v2","key","batch","originX","originY","rotation","scaleX","scaleY","draw"],"mappings":";;;IAAqBA,a;;;iCACCC,O,EAASC,I,EAAMC,I,EAAM;AAAA,UAErCC,KAFqC,GAInCH,OAJmC,CAErCG,KAFqC;AAAA,UAGrCC,MAHqC,GAInCJ,OAJmC,CAGrCI,MAHqC;AAKvC,UAAMC,WAAW,GAAGF,KAAK,GAAGF,IAA5B;AACA,UAAMK,YAAY,GAAGF,MAAM,GAAGF,IAA9B;AACA,UAAMK,OAAO,GAAG,EAAhB;;AAEA,WAAK,IAAIC,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGP,IAApB,EAA0BO,CAAC,EAA3B,EAA+B;AAC7B,aAAK,IAAIC,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGP,IAApB,EAA0BO,CAAC,EAA3B,EAA+B;AAC7BF,UAAAA,OAAO,CAACG,IAAR,CAAa,IAAIX,aAAJ,CAAkBC,OAAlB,EAA2BQ,CAAC,GAAGH,WAA/B,EAA4CI,CAAC,GAAGH,YAAhD,EAA8DD,WAA9D,EAA2EC,YAA3E,EAAyF,EAAzF,CAAb;AACD;AACF;;AAED,aAAOC,OAAP;AACD;;;AAED,yBAAYI,GAAZ,EAAiBH,CAAjB,EAAoBC,CAApB,EAAuBN,KAAvB,EAA8BC,MAA9B,EAAsCQ,SAAtC,EAAiDC,WAAjD,EAA8DC,YAA9D,EAA4EC,MAA5E,EAAoF;AAAA;;AAClF,QAAI,CAACF,WAAD,IAAgB,CAACC,YAArB,EAAmC;AACjCD,MAAAA,WAAW,GAAG,IAAIF,GAAG,CAACR,KAAtB;AACAW,MAAAA,YAAY,GAAG,IAAIH,GAAG,CAACP,MAAvB;AACD;;AAED,QAAMY,CAAC,GAAGR,CAAC,GAAGK,WAAd;AACA,QAAMI,CAAC,GAAGR,CAAC,GAAGK,YAAd;AACA,QAAMI,EAAE,GAAG,CAACV,CAAC,GAAGL,KAAL,IAAcU,WAAzB;AACA,QAAMM,EAAE,GAAG,CAACV,CAAC,GAAGL,MAAL,IAAeU,YAA1B;AACA,SAAKd,OAAL,GAAeW,GAAf;AACA,SAAKH,CAAL,GAASA,CAAT;AACA,SAAKC,CAAL,GAASA,CAAT;AACA,SAAKN,KAAL,GAAaA,KAAb;AACA,SAAKC,MAAL,GAAcA,MAAd;;AAEA,QAAIW,MAAJ,EAAY;AACV,WAAKC,CAAL,GAASE,EAAT;AACA,WAAKD,CAAL,GAASA,CAAT;AACA,WAAKC,EAAL,GAAUF,CAAV;AACA,WAAKG,EAAL,GAAUA,EAAV;AACD,KALD,MAKO;AACL,WAAKH,CAAL,GAASA,CAAT;AACA,WAAKC,CAAL,GAASA,CAAT;AACA,WAAKC,EAAL,GAAUA,EAAV;AACA,WAAKC,EAAL,GAAUA,EAAV;AACD;;AAED,SAAK,IAAIC,GAAT,IAAgBR,SAAhB,EAA2B;AACzB,WAAKQ,GAAL,IAAYR,SAAS,CAACQ,GAAD,CAArB;AACD;AACF;;;;yBAEIC,K,EAAOb,C,EAAGC,C,EAAGN,K,EAAOC,M,EAAwE;AAAA,UAAhEkB,OAAgE,uEAAtD,CAAsD;AAAA,UAAnDC,OAAmD,uEAAzC,CAAyC;AAAA,UAAtCC,QAAsC,uEAA3B,CAA2B;AAAA,UAAxBC,MAAwB,uEAAf,CAAe;AAAA,UAAZC,MAAY,uEAAH,CAAG;AAC/FL,MAAAA,KAAK,CAACM,IAAN,CAAW,KAAK3B,OAAhB,EAAyBQ,CAAzB,EAA4BC,CAA5B,EAA+BN,KAA/B,EAAsCC,MAAtC,EAA8CkB,OAA9C,EAAuDC,OAAvD,EAAgEC,QAAhE,EAA0EC,MAA1E,EAAkFC,MAAlF,EAA0F,KAAKV,CAA/F,EAAkG,KAAKC,CAAvG,EAA0G,KAAKC,EAA/G,EAAmH,KAAKC,EAAxH;AACD;;;;;;SAtDkBpB,a","sourcesContent":["export default class TextureRegion {\n  static splitTexture(texture, cols, rows) {\n    const {\n      width,\n      height\n    } = texture;\n    const regionWidth = width / cols;\n    const regionHeight = height / rows;\n    const regions = [];\n\n    for (let x = 0; x < cols; x++) {\n      for (let y = 0; y < rows; y++) {\n        regions.push(new TextureRegion(texture, x * regionWidth, y * regionHeight, regionWidth, regionHeight, {}));\n      }\n    }\n\n    return regions;\n  }\n\n  constructor(tex, x, y, width, height, extraData, invTexWidth, invTexHeight, rotate) {\n    if (!invTexWidth || !invTexHeight) {\n      invTexWidth = 1 / tex.width;\n      invTexHeight = 1 / tex.height;\n    }\n\n    const u = x * invTexWidth;\n    const v = y * invTexHeight;\n    const u2 = (x + width) * invTexWidth;\n    const v2 = (y + height) * invTexHeight;\n    this.texture = tex;\n    this.x = x;\n    this.y = y;\n    this.width = width;\n    this.height = height;\n\n    if (rotate) {\n      this.u = u2;\n      this.v = v;\n      this.u2 = u;\n      this.v2 = v2;\n    } else {\n      this.u = u;\n      this.v = v;\n      this.u2 = u2;\n      this.v2 = v2;\n    }\n\n    for (let key in extraData) {\n      this[key] = extraData[key];\n    }\n  }\n\n  draw(batch, x, y, width, height, originX = 0, originY = 0, rotation = 0, scaleX = 1, scaleY = 1) {\n    batch.draw(this.texture, x, y, width, height, originX, originY, rotation, scaleX, scaleY, this.u, this.v, this.u2, this.v2);\n  }\n\n}"]},"metadata":{},"sourceType":"module"}