{"ast":null,"code":"export default ((worldState, extra) => {\n  const systems = [];\n  const passiveSystems = [];\n  return {\n    addSystem(system, passive = false) {\n      system.init && system.init(worldState, extra);\n\n      if (passive) {\n        systems.push(system);\n        passiveSystems.push(system);\n      }\n\n      if (!passive) {\n        systems.push(system);\n      }\n    },\n\n    update(delta, runPassive = true) {\n      for (let system of systems) {\n        system.update(delta, worldState, extra);\n      }\n\n      if (runPassive) {\n        for (let system of passiveSystems) {\n          system.update(delta, worldState, extra);\n        }\n      }\n    }\n\n  };\n});","map":{"version":3,"sources":["E:/fcatcher-client/src/components/game/createWorld.js"],"names":["worldState","extra","systems","passiveSystems","addSystem","system","passive","init","push","update","delta","runPassive"],"mappings":"AAAA,gBAAe,CAACA,UAAD,EAAaC,KAAb,KAAuB;AACpC,QAAMC,OAAO,GAAG,EAAhB;AACA,QAAMC,cAAc,GAAG,EAAvB;AACA,SAAO;AACLC,IAAAA,SAAS,CAACC,MAAD,EAASC,OAAO,GAAG,KAAnB,EAA0B;AACjCD,MAAAA,MAAM,CAACE,IAAP,IAAeF,MAAM,CAACE,IAAP,CAAYP,UAAZ,EAAwBC,KAAxB,CAAf;;AACA,UAAIK,OAAJ,EAAa;AACXJ,QAAAA,OAAO,CAACM,IAAR,CAAaH,MAAb;AACAF,QAAAA,cAAc,CAACK,IAAf,CAAoBH,MAApB;AACD;;AACD,UAAI,CAACC,OAAL,EAAc;AACZJ,QAAAA,OAAO,CAACM,IAAR,CAAaH,MAAb;AACD;AACF,KAVI;;AAWLI,IAAAA,MAAM,CAACC,KAAD,EAAQC,UAAU,GAAG,IAArB,EAA2B;AAC/B,WAAK,IAAIN,MAAT,IAAmBH,OAAnB,EAA4B;AAC1BG,QAAAA,MAAM,CAACI,MAAP,CAAcC,KAAd,EAAqBV,UAArB,EAAiCC,KAAjC;AACD;;AACD,UAAIU,UAAJ,EAAgB;AACd,aAAK,IAAIN,MAAT,IAAmBF,cAAnB,EAAmC;AACjCE,UAAAA,MAAM,CAACI,MAAP,CAAcC,KAAd,EAAqBV,UAArB,EAAiCC,KAAjC;AACD;AACF;AACF;;AApBI,GAAP;AAsBD,CAzBD","sourcesContent":["export default (worldState, extra) => {\r\n  const systems = [];\r\n  const passiveSystems = [];\r\n  return {\r\n    addSystem(system, passive = false) {\r\n      system.init && system.init(worldState, extra);\r\n      if (passive) {\r\n        systems.push(system);\r\n        passiveSystems.push(system);\r\n      }\r\n      if (!passive) {\r\n        systems.push(system);\r\n      }\r\n    },\r\n    update(delta, runPassive = true) {\r\n      for (let system of systems) {\r\n        system.update(delta, worldState, extra);\r\n      }\r\n      if (runPassive) {\r\n        for (let system of passiveSystems) {\r\n          system.update(delta, worldState, extra);\r\n        }\r\n      }\r\n    },\r\n  };\r\n};\r\n"]},"metadata":{},"sourceType":"module"}