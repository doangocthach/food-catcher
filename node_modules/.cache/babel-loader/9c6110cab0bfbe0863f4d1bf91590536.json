{"ast":null,"code":"import _regeneratorRuntime from\"E:\\\\fcatcher-client\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/regenerator\";import _asyncToGenerator from\"E:\\\\fcatcher-client\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/asyncToGenerator\";import React from\"react\";import ReactDOM from\"react-dom\";import RegisterModal from\"../RegisterModal\";import{createViewportAwareInputHandler,fillRect,Vector2}from\"gdxjs\";import{checkPointInsideRect}from\"./utils/coordUtils\";import axios from\"../../utils/axios\";import analytics from\"../../utils/analytics\";import createInstructionScreen from\"./InstructionScreen\";var createStartScreenSystem=function createStartScreenSystem(Game){var goToInstructionScreen=/*#__PURE__*/function(){var _ref=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee(){return _regeneratorRuntime.wrap(function _callee$(_context){while(1){switch(_context.prev=_context.next){case 0:_context.t0=Game;_context.next=3;return createInstructionScreen(Game);case 3:_context.t1=_context.sent;_context.t0.setCurrentScreen.call(_context.t0,_context.t1);case 5:case\"end\":return _context.stop();}}},_callee);}));return function goToInstructionScreen(){return _ref.apply(this,arguments);};}();var canvas=Game.canvas,viewport=Game.viewport,width=Game.width,height=Game.height,camera=Game.camera,batch=Game.batch,assets=Game.assets;var inputHandler=createViewportAwareInputHandler(canvas,viewport);var atlas=assets.startScreen;var bg=assets.backGround2;var banner=atlas.findRegion(\"1nam-an-lau-mien-phi\",-1);var text=atlas.findRegion(\"content\",-1);var logo=atlas.findRegion(\"logo\",-1);var button=atlas.findRegion(\"button-play\",-1);var TEXT_WIDTH=width*0.9;var TEXT_HEIGHT=TEXT_WIDTH*text.height/text.width;var LOGO_WIDTH=width*2/3;var LOGO_HEIGHT=LOGO_WIDTH*logo.height/logo.width;var BANNER_WIDTH=width*0.96;var BANNER_HEIGHT=BANNER_WIDTH*banner.height/banner.width;var BUTTON_WIDTH=width/3.5;var BUTTON_HEIGHT=BUTTON_WIDTH*button.height/button.width;var buttonInfos=[width/2-BUTTON_WIDTH/2,height*1.6/3,BUTTON_WIDTH,BUTTON_HEIGHT];var coord=new Vector2();var point;inputHandler.addEventListener(\"touchStart\",function(x,y){coord.setVector(inputHandler.getTouchedWorldCoord());point={x:coord.x,y:coord.y};if(checkPointInsideRect(point,buttonInfos)){analytics.track(\"startGame\");var token=localStorage.getItem(\"@Token\");if(!token){analytics.track(\"newUser\");var wrapper=document.createElement(\"div\");document.body.append(wrapper);ReactDOM.render(/*#__PURE__*/React.createElement(RegisterModal,{onSubmit:/*#__PURE__*/function(){var _ref2=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee2(formBody){var res,_token;return _regeneratorRuntime.wrap(function _callee2$(_context2){while(1){switch(_context2.prev=_context2.next){case 0:_context2.prev=0;_context2.next=3;return axios.post(\"/register\",formBody);case 3:res=_context2.sent;_token=res.data;localStorage.setItem(\"@Token\",_token);document.body.removeChild(wrapper);analytics.identify(_token);goToInstructionScreen();_context2.next=13;break;case 11:_context2.prev=11;_context2.t0=_context2[\"catch\"](0);case 13:case\"end\":return _context2.stop();}}},_callee2,null,[[0,11]]);}));return function(_x){return _ref2.apply(this,arguments);};}()}),wrapper);}else{analytics.identify(token);goToInstructionScreen();}}});var update=function update(delta){batch.setProjection(camera.combined);batch.begin();batch.setColor(1,1,1,1);fillRect(batch,bg,0,0,width,height);logo.draw(batch,width/2-LOGO_WIDTH/2,height/30,LOGO_WIDTH,LOGO_HEIGHT);text.draw(batch,width/2-TEXT_WIDTH/2,height*0.95/3,TEXT_WIDTH,TEXT_HEIGHT);banner.draw(batch,width/2-BANNER_WIDTH/2,height*1.9/3,BANNER_WIDTH,BANNER_HEIGHT);button.draw(batch,buttonInfos[0],buttonInfos[1],buttonInfos[2],buttonInfos[3]);batch.end();};return{update:update,destroy:function destroy(){inputHandler.cleanup();}};};export default createStartScreenSystem;","map":{"version":3,"sources":["E:/fcatcher-client/src/components/game/StartScreen.js"],"names":["React","ReactDOM","RegisterModal","createViewportAwareInputHandler","fillRect","Vector2","checkPointInsideRect","axios","analytics","createInstructionScreen","createStartScreenSystem","Game","goToInstructionScreen","setCurrentScreen","canvas","viewport","width","height","camera","batch","assets","inputHandler","atlas","startScreen","bg","backGround2","banner","findRegion","text","logo","button","TEXT_WIDTH","TEXT_HEIGHT","LOGO_WIDTH","LOGO_HEIGHT","BANNER_WIDTH","BANNER_HEIGHT","BUTTON_WIDTH","BUTTON_HEIGHT","buttonInfos","coord","point","addEventListener","x","y","setVector","getTouchedWorldCoord","track","token","localStorage","getItem","wrapper","document","createElement","body","append","render","formBody","post","res","data","setItem","removeChild","identify","update","delta","setProjection","combined","begin","setColor","draw","end","destroy","cleanup"],"mappings":"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","sourcesContent":["import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport RegisterModal from \"../RegisterModal\";\r\n\r\nimport { createViewportAwareInputHandler, fillRect, Vector2 } from \"gdxjs\";\r\nimport { checkPointInsideRect } from \"./utils/coordUtils\";\r\nimport axios from \"../../utils/axios\";\r\nimport analytics from \"../../utils/analytics\";\r\nimport createInstructionScreen from \"./InstructionScreen\";\r\n\r\nconst createStartScreenSystem = (Game) => {\r\n  const goToInstructionScreen = async () => {\r\n    Game.setCurrentScreen(await createInstructionScreen(Game));\r\n  };\r\n\r\n  const { canvas, viewport, width, height, camera, batch, assets } = Game;\r\n\r\n  const inputHandler = createViewportAwareInputHandler(canvas, viewport);\r\n\r\n  const atlas = assets.startScreen;\r\n  const bg = assets.backGround2;\r\n\r\n  const banner = atlas.findRegion(\"1nam-an-lau-mien-phi\", -1);\r\n  const text = atlas.findRegion(\"content\", -1);\r\n  const logo = atlas.findRegion(\"logo\", -1);\r\n  const button = atlas.findRegion(\"button-play\", -1);\r\n  const TEXT_WIDTH = width * 0.9;\r\n  const TEXT_HEIGHT = (TEXT_WIDTH * text.height) / text.width;\r\n\r\n  const LOGO_WIDTH = (width * 2) / 3;\r\n  const LOGO_HEIGHT = (LOGO_WIDTH * logo.height) / logo.width;\r\n\r\n  const BANNER_WIDTH = width * 0.96;\r\n  const BANNER_HEIGHT = (BANNER_WIDTH * banner.height) / banner.width;\r\n\r\n  const BUTTON_WIDTH = width / 3.5;\r\n  const BUTTON_HEIGHT = (BUTTON_WIDTH * button.height) / button.width;\r\n\r\n  const buttonInfos = [\r\n    width / 2 - BUTTON_WIDTH / 2,\r\n    (height * 1.6) / 3,\r\n    BUTTON_WIDTH,\r\n    BUTTON_HEIGHT,\r\n  ];\r\n\r\n  const coord = new Vector2();\r\n  let point;\r\n  inputHandler.addEventListener(\"touchStart\", (x, y) => {\r\n    coord.setVector(inputHandler.getTouchedWorldCoord());\r\n    point = { x: coord.x, y: coord.y };\r\n    if (checkPointInsideRect(point, buttonInfos)) {\r\n      analytics.track(\"startGame\");\r\n      const token = localStorage.getItem(\"@Token\");\r\n      if (!token) {\r\n        analytics.track(\"newUser\");\r\n        const wrapper = document.createElement(\"div\");\r\n        document.body.append(wrapper);\r\n        ReactDOM.render(\r\n          <RegisterModal\r\n            onSubmit={async (formBody) => {\r\n              try {\r\n                const res = await axios.post(\"/register\", formBody);\r\n                const token = res.data;\r\n                localStorage.setItem(\"@Token\", token);\r\n                document.body.removeChild(wrapper);\r\n                analytics.identify(token);\r\n                goToInstructionScreen();\r\n              } catch (e) {}\r\n            }}\r\n          />,\r\n          wrapper\r\n        );\r\n      } else {\r\n        analytics.identify(token);\r\n        goToInstructionScreen();\r\n      }\r\n    }\r\n  });\r\n\r\n  const update = (delta) => {\r\n    batch.setProjection(camera.combined);\r\n    batch.begin();\r\n    batch.setColor(1, 1, 1, 1);\r\n    fillRect(batch, bg, 0, 0, width, height);\r\n    logo.draw(\r\n      batch,\r\n      width / 2 - LOGO_WIDTH / 2,\r\n      height / 30,\r\n      LOGO_WIDTH,\r\n      LOGO_HEIGHT\r\n    );\r\n    text.draw(\r\n      batch,\r\n      width / 2 - TEXT_WIDTH / 2,\r\n      (height * 0.95) / 3,\r\n      TEXT_WIDTH,\r\n      TEXT_HEIGHT\r\n    );\r\n    banner.draw(\r\n      batch,\r\n      width / 2 - BANNER_WIDTH / 2,\r\n      (height * 1.9) / 3,\r\n      BANNER_WIDTH,\r\n      BANNER_HEIGHT\r\n    );\r\n    button.draw(\r\n      batch,\r\n      buttonInfos[0],\r\n      buttonInfos[1],\r\n      buttonInfos[2],\r\n      buttonInfos[3]\r\n    );\r\n    batch.end();\r\n  };\r\n\r\n  return {\r\n    update,\r\n    destroy() {\r\n      inputHandler.cleanup();\r\n    },\r\n  };\r\n};\r\n\r\nexport default createStartScreenSystem;\r\n"]},"metadata":{},"sourceType":"module"}