{"ast":null,"code":"import{fillRect}from\"gdxjs\";var createBackGroundRenderSystem=function createBackGroundRenderSystem(){var bg,bar;var BAR_WIDTH,BAR_HEIGHT;return{init:function init(worldState,_ref){var width=_ref.width,assets=_ref.assets;var atlas=assets.newAssets;bg=assets.backGround;bar=atlas.findRegion(\"menu-bar\",-1);BAR_WIDTH=width;BAR_HEIGHT=BAR_WIDTH*bar.height/bar.width;},update:function update(delta,worldState,_ref2){var batch=_ref2.batch,width=_ref2.width,height=_ref2.height,camera=_ref2.camera;batch.setProjection(camera.combined);batch.begin();batch.setColor(1,1,1,1);fillRect(batch,bg,0,0,width,height);bar.draw(batch,0,0,BAR_WIDTH,BAR_HEIGHT);batch.end();}};};export default createBackGroundRenderSystem;","map":{"version":3,"sources":["E:/fcatcher-client/src/components/game/systems/BgRenderSystem.js"],"names":["fillRect","createBackGroundRenderSystem","bg","bar","BAR_WIDTH","BAR_HEIGHT","init","worldState","width","assets","atlas","newAssets","backGround","findRegion","height","update","delta","batch","camera","setProjection","combined","begin","setColor","draw","end"],"mappings":"AAAA,OAASA,QAAT,KAAyB,OAAzB,CAEA,GAAMC,CAAAA,4BAA4B,CAAG,QAA/BA,CAAAA,4BAA+B,EAAM,CACzC,GAAIC,CAAAA,EAAJ,CAAQC,GAAR,CACA,GAAIC,CAAAA,SAAJ,CAAeC,UAAf,CACA,MAAO,CACLC,IADK,eACAC,UADA,MAC+B,IAAjBC,CAAAA,KAAiB,MAAjBA,KAAiB,CAAVC,MAAU,MAAVA,MAAU,CAClC,GAAIC,CAAAA,KAAK,CAAGD,MAAM,CAACE,SAAnB,CAEAT,EAAE,CAAGO,MAAM,CAACG,UAAZ,CACAT,GAAG,CAAGO,KAAK,CAACG,UAAN,CAAiB,UAAjB,CAA6B,CAAC,CAA9B,CAAN,CACAT,SAAS,CAAGI,KAAZ,CACAH,UAAU,CAAID,SAAS,CAAGD,GAAG,CAACW,MAAjB,CAA2BX,GAAG,CAACK,KAA5C,CACD,CARI,CASLO,MATK,iBASEC,KATF,CASST,UATT,OASuD,IAAhCU,CAAAA,KAAgC,OAAhCA,KAAgC,CAAzBT,KAAyB,OAAzBA,KAAyB,CAAlBM,MAAkB,OAAlBA,MAAkB,CAAVI,MAAU,OAAVA,MAAU,CAC1DD,KAAK,CAACE,aAAN,CAAoBD,MAAM,CAACE,QAA3B,EACAH,KAAK,CAACI,KAAN,GACAJ,KAAK,CAACK,QAAN,CAAe,CAAf,CAAkB,CAAlB,CAAqB,CAArB,CAAwB,CAAxB,EAEAtB,QAAQ,CAACiB,KAAD,CAAQf,EAAR,CAAY,CAAZ,CAAe,CAAf,CAAkBM,KAAlB,CAAyBM,MAAzB,CAAR,CACAX,GAAG,CAACoB,IAAJ,CAASN,KAAT,CAAgB,CAAhB,CAAmB,CAAnB,CAAsBb,SAAtB,CAAiCC,UAAjC,EAEAY,KAAK,CAACO,GAAN,GACD,CAlBI,CAAP,CAoBD,CAvBD,CAyBA,cAAevB,CAAAA,4BAAf","sourcesContent":["import { fillRect } from \"gdxjs\";\r\n\r\nconst createBackGroundRenderSystem = () => {\r\n  let bg, bar;\r\n  let BAR_WIDTH, BAR_HEIGHT;\r\n  return {\r\n    init(worldState, { width, assets }) {\r\n      let atlas = assets.newAssets;\r\n\r\n      bg = assets.backGround;\r\n      bar = atlas.findRegion(\"menu-bar\", -1);\r\n      BAR_WIDTH = width;\r\n      BAR_HEIGHT = (BAR_WIDTH * bar.height) / bar.width;\r\n    },\r\n    update(delta, worldState, { batch, width, height, camera }) {\r\n      batch.setProjection(camera.combined);\r\n      batch.begin();\r\n      batch.setColor(1, 1, 1, 1);\r\n\r\n      fillRect(batch, bg, 0, 0, width, height);\r\n      bar.draw(batch, 0, 0, BAR_WIDTH, BAR_HEIGHT);\r\n\r\n      batch.end();\r\n    },\r\n  };\r\n};\r\n\r\nexport default createBackGroundRenderSystem;\r\n"]},"metadata":{},"sourceType":"module"}