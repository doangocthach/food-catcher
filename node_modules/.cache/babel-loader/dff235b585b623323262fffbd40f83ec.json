{"ast":null,"code":"var createFoodPositionSystem=function createFoodPositionSystem(){return{init:function init(worldState,extra){},update:function update(delta,worldState,_ref){var width=_ref.width,height=_ref.height;var foods=worldState.foods,redSmokeList=worldState.redSmokeList,recipes=worldState.recipes;for(var i=0;i<foods.length;i++){if(foods[i].upSpeedY>0){foods[i].upSpeedY=foods[i].oriSpeedY+foods[i].upAccelerationY*foods[i].stateTime;foods[i].upSpeedX=foods[i].oriSpeedX+foods[i].upAccelerationX*foods[i].stateTime;foods[i].stateTime=Math.min(foods[i].stateTime+=delta,foods[i].upRealTime);foods[i].y-=foods[i].upSpeedY*delta;foods[i].x+=foods[i].upSpeedX*delta;}else{foods[i].y+=foods[i].downSpeedY*delta;foods[i].downSpeedY+=foods[i].downAcceleration;}if(foods[i].y>height*4.1/5){for(var j=0;j<recipes.length;j++){if(foods[i].type===recipes[j].type){worldState.comboCounter=0;worldState.comboCheckIndex.length=0;}}redSmokeList.push({x:foods[i].x,y:foods[i].y,stateTime:0,scale:foods[i].oriScale});foods.splice(i,1);}}}};};export default createFoodPositionSystem;","map":{"version":3,"sources":["E:/fcatcher-client/src/components/game/systems/FoodPositionSystem.js"],"names":["createFoodPositionSystem","init","worldState","extra","update","delta","width","height","foods","redSmokeList","recipes","i","length","upSpeedY","oriSpeedY","upAccelerationY","stateTime","upSpeedX","oriSpeedX","upAccelerationX","Math","min","upRealTime","y","x","downSpeedY","downAcceleration","j","type","comboCounter","comboCheckIndex","push","scale","oriScale","splice"],"mappings":"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","sourcesContent":["const createFoodPositionSystem = () => {\r\n  return {\r\n    init(worldState, extra) {},\r\n\r\n    update(delta, worldState, { width, height }) {\r\n      const { foods, redSmokeList, recipes } = worldState;\r\n\r\n      for (let i = 0; i < foods.length; i++) {\r\n        if (foods[i].upSpeedY > 0) {\r\n          foods[i].upSpeedY =\r\n            foods[i].oriSpeedY + foods[i].upAccelerationY * foods[i].stateTime;\r\n          foods[i].upSpeedX =\r\n            foods[i].oriSpeedX + foods[i].upAccelerationX * foods[i].stateTime;\r\n\r\n          foods[i].stateTime = Math.min(\r\n            (foods[i].stateTime += delta),\r\n            foods[i].upRealTime\r\n          );\r\n\r\n          foods[i].y -= foods[i].upSpeedY * delta;\r\n          foods[i].x += foods[i].upSpeedX * delta;\r\n        } else {\r\n          foods[i].y += foods[i].downSpeedY * delta;\r\n          foods[i].downSpeedY += foods[i].downAcceleration;\r\n        }\r\n\r\n        if (foods[i].y > (height * 4.1) / 5) {\r\n          for (let j = 0; j < recipes.length; j++) {\r\n            if (foods[i].type === recipes[j].type) {\r\n              worldState.comboCounter = 0;\r\n              worldState.comboCheckIndex.length = 0;\r\n            }\r\n          }\r\n          redSmokeList.push({\r\n            x: foods[i].x,\r\n            y: foods[i].y,\r\n            stateTime: 0,\r\n            scale: foods[i].oriScale,\r\n          });\r\n          foods.splice(i, 1);\r\n        }\r\n      }\r\n    },\r\n  };\r\n};\r\n\r\nexport default createFoodPositionSystem;\r\n"]},"metadata":{},"sourceType":"module"}