{"ast":null,"code":"const createRedSmokeRenderSystem = () => {\n  let SMOKE_WIDTH, SMOKE_HEIGHT;\n  return {\n    init({\n      foodTex\n    }, {\n      width,\n      height\n    }) {\n      SMOKE_WIDTH = width / 2;\n      SMOKE_HEIGHT = SMOKE_WIDTH * 3 / 5;\n    },\n\n    update(delta, worldState, {\n      batch,\n      camera,\n      width,\n      height\n    }) {\n      const {\n        redSmokeList,\n        smokeAnimation,\n        emptyLife\n      } = worldState;\n      batch.setProjection(camera.combined);\n      batch.begin();\n      batch.setColor(1, 0, 0, 1);\n\n      for (let i = redSmokeList.length - 1; i >= 0; i--) {\n        redSmokeList[i].stateTime += delta;\n        smokeAnimation.animation.getKeyFrame(redSmokeList[i].stateTime, 1).draw(batch, redSmokeList[i].x - SMOKE_WIDTH / 2.5, redSmokeList[i].y - SMOKE_HEIGHT / 3, SMOKE_WIDTH, SMOKE_HEIGHT, SMOKE_WIDTH / 2, SMOKE_HEIGHT / 2, 0, redSmokeList[i].scale, redSmokeList[i].scale);\n\n        if (redSmokeList[i].stateTime > smokeAnimation.duration * smokeAnimation.frameLength) {\n          if (emptyLife && i === redSmokeList.length - 1) {\n            worldState.gameOver = true;\n          }\n\n          redSmokeList.splice(i, 1);\n        }\n      }\n\n      batch.end();\n    }\n\n  };\n};\n\nexport default createRedSmokeRenderSystem;","map":{"version":3,"sources":["E:/fcatcher-client/src/components/game/systems/RedSmokeRenderSystem.js"],"names":["createRedSmokeRenderSystem","SMOKE_WIDTH","SMOKE_HEIGHT","init","foodTex","width","height","update","delta","worldState","batch","camera","redSmokeList","smokeAnimation","emptyLife","setProjection","combined","begin","setColor","i","length","stateTime","animation","getKeyFrame","draw","x","y","scale","duration","frameLength","gameOver","splice","end"],"mappings":"AAAA,MAAMA,0BAA0B,GAAG,MAAM;AACvC,MAAIC,WAAJ,EAAiBC,YAAjB;AACA,SAAO;AACLC,IAAAA,IAAI,CAAC;AAAEC,MAAAA;AAAF,KAAD,EAAc;AAAEC,MAAAA,KAAF;AAASC,MAAAA;AAAT,KAAd,EAAiC;AACnCL,MAAAA,WAAW,GAAGI,KAAK,GAAG,CAAtB;AACAH,MAAAA,YAAY,GAAID,WAAW,GAAG,CAAf,GAAoB,CAAnC;AACD,KAJI;;AAMLM,IAAAA,MAAM,CAACC,KAAD,EAAQC,UAAR,EAAoB;AAAEC,MAAAA,KAAF;AAASC,MAAAA,MAAT;AAAiBN,MAAAA,KAAjB;AAAwBC,MAAAA;AAAxB,KAApB,EAAsD;AAC1D,YAAM;AAAEM,QAAAA,YAAF;AAAgBC,QAAAA,cAAhB;AAAgCC,QAAAA;AAAhC,UAA8CL,UAApD;AACAC,MAAAA,KAAK,CAACK,aAAN,CAAoBJ,MAAM,CAACK,QAA3B;AACAN,MAAAA,KAAK,CAACO,KAAN;AACAP,MAAAA,KAAK,CAACQ,QAAN,CAAe,CAAf,EAAkB,CAAlB,EAAqB,CAArB,EAAwB,CAAxB;;AACA,WAAK,IAAIC,CAAC,GAAGP,YAAY,CAACQ,MAAb,GAAsB,CAAnC,EAAsCD,CAAC,IAAI,CAA3C,EAA8CA,CAAC,EAA/C,EAAmD;AACjDP,QAAAA,YAAY,CAACO,CAAD,CAAZ,CAAgBE,SAAhB,IAA6Bb,KAA7B;AACAK,QAAAA,cAAc,CAACS,SAAf,CACGC,WADH,CACeX,YAAY,CAACO,CAAD,CAAZ,CAAgBE,SAD/B,EAC0C,CAD1C,EAEGG,IAFH,CAGId,KAHJ,EAIIE,YAAY,CAACO,CAAD,CAAZ,CAAgBM,CAAhB,GAAoBxB,WAAW,GAAG,GAJtC,EAKIW,YAAY,CAACO,CAAD,CAAZ,CAAgBO,CAAhB,GAAoBxB,YAAY,GAAG,CALvC,EAMID,WANJ,EAOIC,YAPJ,EAQID,WAAW,GAAG,CARlB,EASIC,YAAY,GAAG,CATnB,EAUI,CAVJ,EAWIU,YAAY,CAACO,CAAD,CAAZ,CAAgBQ,KAXpB,EAYIf,YAAY,CAACO,CAAD,CAAZ,CAAgBQ,KAZpB;;AAcA,YACEf,YAAY,CAACO,CAAD,CAAZ,CAAgBE,SAAhB,GACAR,cAAc,CAACe,QAAf,GAA0Bf,cAAc,CAACgB,WAF3C,EAGE;AACA,cAAIf,SAAS,IAAIK,CAAC,KAAKP,YAAY,CAACQ,MAAb,GAAsB,CAA7C,EAAgD;AAC9CX,YAAAA,UAAU,CAACqB,QAAX,GAAsB,IAAtB;AACD;;AACDlB,UAAAA,YAAY,CAACmB,MAAb,CAAoBZ,CAApB,EAAuB,CAAvB;AACD;AACF;;AACDT,MAAAA,KAAK,CAACsB,GAAN;AACD;;AAtCI,GAAP;AAwCD,CA1CD;;AA4CA,eAAehC,0BAAf","sourcesContent":["const createRedSmokeRenderSystem = () => {\r\n  let SMOKE_WIDTH, SMOKE_HEIGHT;\r\n  return {\r\n    init({ foodTex }, { width, height }) {\r\n      SMOKE_WIDTH = width / 2;\r\n      SMOKE_HEIGHT = (SMOKE_WIDTH * 3) / 5;\r\n    },\r\n\r\n    update(delta, worldState, { batch, camera, width, height }) {\r\n      const { redSmokeList, smokeAnimation, emptyLife } = worldState;\r\n      batch.setProjection(camera.combined);\r\n      batch.begin();\r\n      batch.setColor(1, 0, 0, 1);\r\n      for (let i = redSmokeList.length - 1; i >= 0; i--) {\r\n        redSmokeList[i].stateTime += delta;\r\n        smokeAnimation.animation\r\n          .getKeyFrame(redSmokeList[i].stateTime, 1)\r\n          .draw(\r\n            batch,\r\n            redSmokeList[i].x - SMOKE_WIDTH / 2.5,\r\n            redSmokeList[i].y - SMOKE_HEIGHT / 3,\r\n            SMOKE_WIDTH,\r\n            SMOKE_HEIGHT,\r\n            SMOKE_WIDTH / 2,\r\n            SMOKE_HEIGHT / 2,\r\n            0,\r\n            redSmokeList[i].scale,\r\n            redSmokeList[i].scale\r\n          );\r\n        if (\r\n          redSmokeList[i].stateTime >\r\n          smokeAnimation.duration * smokeAnimation.frameLength\r\n        ) {\r\n          if (emptyLife && i === redSmokeList.length - 1) {\r\n            worldState.gameOver = true;\r\n          }\r\n          redSmokeList.splice(i, 1);\r\n        }\r\n      }\r\n      batch.end();\r\n    },\r\n  };\r\n};\r\n\r\nexport default createRedSmokeRenderSystem;\r\n"]},"metadata":{},"sourceType":"module"}