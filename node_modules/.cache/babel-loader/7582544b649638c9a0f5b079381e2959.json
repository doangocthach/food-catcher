{"ast":null,"code":"export var checkPointInsideRect=function checkPointInsideRect(point,verts){var DEVICE_PIXEL_RATIO=arguments.length>2&&arguments[2]!==undefined?arguments[2]:1;var x=point.x*DEVICE_PIXEL_RATIO;var y=point.y*DEVICE_PIXEL_RATIO;// const minX = Math.min(verts[0], verts[2], verts[4], verts[6]);\n// const maxX = Math.max(verts[0], verts[2], verts[4], verts[6]);\n// const minY = Math.min(verts[1], verts[3], verts[5], verts[7]);\n// const maxY = Math.max(verts[1], verts[3], verts[5], verts[7]);\nvar minX=verts[0];var maxX=verts[0]+verts[2];var minY=verts[1];var maxY=verts[1]+verts[3];if(x<minX||x>maxX||y<minY||y>maxY)return false;return true;};","map":{"version":3,"sources":["E:/fcatcher-client/src/components/game/utils/coordUtils.js"],"names":["checkPointInsideRect","point","verts","DEVICE_PIXEL_RATIO","x","y","minX","maxX","minY","maxY"],"mappings":"AAAA,MAAO,IAAMA,CAAAA,oBAAoB,CAAG,QAAvBA,CAAAA,oBAAuB,CAACC,KAAD,CAAQC,KAAR,CAA0C,IAA3BC,CAAAA,kBAA2B,2DAAN,CAAM,CAC5E,GAAMC,CAAAA,CAAC,CAAGH,KAAK,CAACG,CAAN,CAAUD,kBAApB,CACA,GAAME,CAAAA,CAAC,CAAGJ,KAAK,CAACI,CAAN,CAAUF,kBAApB,CACA;AACA;AACA;AACA;AAEA,GAAMG,CAAAA,IAAI,CAAGJ,KAAK,CAAC,CAAD,CAAlB,CACA,GAAMK,CAAAA,IAAI,CAAGL,KAAK,CAAC,CAAD,CAAL,CAAWA,KAAK,CAAC,CAAD,CAA7B,CACA,GAAMM,CAAAA,IAAI,CAAGN,KAAK,CAAC,CAAD,CAAlB,CACA,GAAMO,CAAAA,IAAI,CAAGP,KAAK,CAAC,CAAD,CAAL,CAAWA,KAAK,CAAC,CAAD,CAA7B,CACA,GAAIE,CAAC,CAAGE,IAAJ,EAAYF,CAAC,CAAGG,IAAhB,EAAwBF,CAAC,CAAGG,IAA5B,EAAoCH,CAAC,CAAGI,IAA5C,CAAkD,MAAO,MAAP,CAClD,MAAO,KAAP,CACD,CAdM","sourcesContent":["export const checkPointInsideRect = (point, verts, DEVICE_PIXEL_RATIO = 1) => {\r\n  const x = point.x * DEVICE_PIXEL_RATIO;\r\n  const y = point.y * DEVICE_PIXEL_RATIO;\r\n  // const minX = Math.min(verts[0], verts[2], verts[4], verts[6]);\r\n  // const maxX = Math.max(verts[0], verts[2], verts[4], verts[6]);\r\n  // const minY = Math.min(verts[1], verts[3], verts[5], verts[7]);\r\n  // const maxY = Math.max(verts[1], verts[3], verts[5], verts[7]);\r\n\r\n  const minX = verts[0];\r\n  const maxX = verts[0] + verts[2];\r\n  const minY = verts[1];\r\n  const maxY = verts[1] + verts[3];\r\n  if (x < minX || x > maxX || y < minY || y > maxY) return false;\r\n  return true;\r\n};\r\n"]},"metadata":{},"sourceType":"module"}