{"version":3,"sources":["components/Container.js","components/game/utils/glyphLayout.js","components/game/utils/loadFontFile.js","components/game/systems/FoodSpawnSystem.js","components/Modal.js","components/RegisterModal.js","components/game/utils/coordUtils.js","utils/axios.js","utils/analytics.js","components/game/utils/getFood.js","components/game/systems/BgRenderSystem.js","components/game/systems/TrayRenderSystem.js","components/game/systems/TrayPositionSystem.js","components/game/systems/InputHandlerGameScreenSystem.js","components/game/systems/FoodPositionSystem.js","components/game/systems/FoodRenderSystem.js","components/game/systems/RecipeRenderSystem.js","components/game/systems/TrayCollideFoodSystem.js","components/game/systems/RedSmokeRenderSystem.js","components/game/systems/CollectionRenderSystem.js","components/game/systems/LifeRenderSystem.js","components/game/systems/StunScreenRenderSystem.js","components/game/systems/ScoreRenderSystem.js","components/game/systems/ScoreCalcSystem.js","components/game/systems/WhiteSmokeRenderSystem.js","components/game/systems/BannerComboRenderSystem.js","components/game/LeaderBoardScreen.js","components/game/GameScreen.js","components/game/createWorld.js","components/game/InstructionScreen.js","components/game/StartScreen.js","components/game/index.js","components/GameModal.js","components/Body.js","App.js","serviceWorker.js","index.js","assets/logo.jpg"],"names":["className","wrapperClassName","children","clsx","checkKerning","id1","id2","kerningsData","check","amount","kerning","first","second","GlyphLayour","pageImage","regions","keringsData","canvasWidth","addToCache","line","px","py","lineBreak","lineH","xAdvance","index","length","currChar","charCodeAt","preChar","key","findRegions","kerningAmount","cache","push","x","xoffset","scale","y","yoffset","width","height","xadvance","beforeDrawing","posX","posY","fontSize","CharSequence","preDraw","spaceXadvance","tmpLength","tmplist","i","char","maxSeq","Math","max","newbase","baseLine","listCharSeq","trim","split","map","s","si","oriWidth","tmpRatio","fixedWidth","lineHeight","accumulate","tmpChar","j","key2","substring","id","positionBreak","lastBreakIndex","tmp","key3","getPositionBasedOnMode","lastLine","tmpXadvance","lastKey","type","oriHeight","align","round","setAlignMode","mode","setType","setLineHeight","setFixedGlyphWidth","fixedW","draw","batch","this","base","position","Vector2","newBase","AlignMode","TextType","concatAndResolveUrl","url","concat","url1","url2","url3","l","pop","join","randomArray","tmp2","otherFoodArray","gl","packFileUrl","textureOptions","a","fetch","then","res","text","packFileContent","pages","regionsData","lines","tmp_array","push_to_kerning","numOfPages","startPageLine","tuple","pageCounter","saveIndex","undefined","filter","item","parseInt","face","size","bold","italic","charset","unicode","stretchH","smooth","aa","padding","spacing","outline","scaleW","scaleH","num_of_pages","packed","alphaChnl","redChnl","greenChnl","blueChnl","page_id","file","left","top","page","region","id_page","loadTexture","texture","invTextWidth","invTextHeight","regionData","invTexWidth","invTexHeight","TextureRegion","getLineHeight","getPages","getRegions","setNewText","onSubmit","useState","username","email","phoneNumber","state","setstate","submitBtn","useRef","useEffect","_resizeHandler","current","scrollIntoView","window","addEventListener","removeEventListener","Modal","autoComplete","e","preventDefault","src","require","alt","name","value","onChange","target","placeholder","required","ref","checkPointInsideRect","point","verts","DEVICE_PIXEL_RATIO","minX","maxX","minY","maxY","axiosInstance","axios","create","baseURL","process","analytics","Analytics","app","plugins","googleAnalytics","trackingId","getFoodInPotTexture","atlas","image","findRegion","getFoodAnimation","effect","tom_efftect","kimchi_efftect","nam_efftect","ngao_efftect","raucai_efftect","thitbo_efftect","bachtuoc_effect","smoke_animation","createAnimation","foodAnimation","animation","duration","smokeAnimation","frameLength","createBackGroundRenderSystem","bg","bar","BAR_WIDTH","BAR_HEIGHT","init","worldState","assets","newAssets","backGround","update","delta","camera","setProjection","combined","begin","setColor","fillRect","end","createTrayRenderSystem","tray","trayShadow","TRAY_WIDTH","TRAY_HEIGHT","TS_WIDTH","TS_HEIGHT","trayState","gameAssets","trayAtlas","foodInPot","createTrayPositionSystem","setVector","subVector","nor","speed","distanceSqr","len2","addVector","createInputHandlerGameScreenSystem","worldCoord","inputHandler","getTouchedWorldCoord","getRandomFoodList","foodTex","recipes","comboCounter","difficulty","rep","includes","createFoodSpawnSystem","pattern","timer","delayAfterCombo","speedXIndex","speedYIndex","extra","stateTime","minNumber","maxNumber","getShootTypeBaseOnDifficulty","number","upSpeedY","upAccelerationY","time","upSpeedX","tmpSpeedX","tmpAccX","random","speedX","accerX","getPattern","min","loop","tmpIndex","randomFoodArray","sort","foods","upTime","upRealTime","oriSpeedX","oriSpeedY","upAccelerationX","downSpeedY","downAcceleration","scaleSpeed","opacitySpeed","oriScale","oriOpacity","getDelayBaseOnDifficulty","createFoodPositionSystem","redSmokeList","comboCheckIndex","splice","createFoodRenderSystem","FOOD_WIDTH","FOOD_HEIGHT","tmpFood","tex","createRecipeRenderSystem","TEXT_AMOUNT1","TEXT_AMOUNT2","TEXT_AMOUNT3","TEXT_AMOUNT4","TEXT_COUNTER","TEXT_LIST","numberFont","recipePositionInfos","font","RECIPE_MARGIN","genderNewRecipeAmount","whiteSmokeList","counter","createTrayCollideFoodSystem","collection","life","correctCatch","stateTimeSmoke","stateTimeFood","startSmoke","inPot","finished","lifeIndex","red","stunScreen","createRedSmokeRenderSystem","SMOKE_WIDTH","SMOKE_HEIGHT","emptyLife","getKeyFrame","gameOver","createCollectionRenderSystem","COLLECTION_WIDTH","COLLECTION_HEIGHT","foodInPotTex","foodPosition","createLifeRenderSystem","redLife","blackLife","LIFE_WIDTH","LIFE_HEIGHT","LIFE_START_X","LIFE_START_Y","LIFE_MARGIN_RIGHT","createStunScreenRenderSystem","whiteTex","opacity","createScoreRenderSystem","scoreText","scoreTexTure","ST_WIDTH","ST_HEIGHT","score","createScoreCalcSystem","addScore","track","createWhiteSmokeRenderSystem","pushToComboList","comboList","indexCombo","comboSize","infos","createBannerComboRenderSystem","combo1","combo2","combo3","C1_WIDTH","C1_HEIGHT","C2_WIDTH","C2_HEIGHT","C3_WIDTH","C3_HEIGHT","comboState","delayTime","getHeightBaseOnWidth","textWidth","censorEmail","lastChar","slice","numOfDisplay","floor","resultString","charAt","repeat","createLeaderBoardSystem","Game","canvas","viewport","goToStartScreen","createStartScreenSystem","setCurrentScreen","createViewportAwareInputHandler","leaderBoard","logo","header","footer","yourScore","no1","no2","retry","LOGO_WIDTH","LOGO_HEIGHT","HEADER_WIDTH","HEADER_HEIGHT","FOOTER_WIDTH","FOOTER_HEIGHt","S_WIDTH","S_HIEGHT","NO1_WIDTH","NO1_HEIGHT","NO2_WIDTH","NO2_HEIGHT","BUTTON_WIDTH","BUTTON_HEIGHT","BUTTON_RECTS","medalList","CONTAINER_MARGIN","CONTAINER_WIDTH","CONTAINER_HEIGHT","players","post","sig","MurmurHash","hash","result","headers","localStorage","getItem","data","getData","coord","textFont","userScore","scoreSize","RESULT_START_X","NAME_START_Y","SCORE_START_Y","userNameText","userScoreText","userNameSize","userScoreSize","loopLength","gotData","toString","destroy","cleanup","createGameScreenSystem","TRAY_INITIAL_Y","animAssets","genderNewRecipe","aniStateTime","moveLeft","moveRight","collectionFinished","world","systems","passiveSystems","addSystem","system","passive","runPassive","createWorld","count","countRemainLife","oneTimeCheck","goToLeaderBoardScreen","createInstructionScreenSystem","goToGameScreen","startScreen","button","banner1","banner2","B1_WIDTH","B1_HEIGHT","B2_WIDTH","B2_HEIGHT","buttonInfos","goToInstructionScreen","createInstructionScreen","backGround2","banner","TEXT_WIDTH","TEXT_HEIGHT","BANNER_WIDTH","BANNER_HEIGHT","token","identify","wrapper","document","createElement","body","append","ReactDOM","render","RegisterModal","formBody","setItem","removeChild","createViewport","getCamera","getContext","createBatch","createWhiteText","screen","currentScreen","foxLogo","ratio","doAndCount","promise","Promise","all","loadAtlas","loadFontFile","clearColor","clear","COLOR_BUFFER_BIT","createGameLoop","onClose","canvasRef","infosRef","initGame","Fragment","Container","GameModal","App","Body","Boolean","location","hostname","match","StrictMode","getElementById","navigator","serviceWorker","ready","registration","unregister","catch","error","console","message","module","exports"],"mappings":"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","file":"static/js/main.4cba9165.chunk.js","sourcesContent":["import React from \"react\";\r\nimport clsx from \"clsx\";\r\nimport \"./container.css\";\r\n\r\nexport default ({ className, wrapperClassName, children }) => {\r\n  return (\r\n    <div className={clsx(\"container-wrapper\", wrapperClassName)}>\r\n      <div className={clsx(\"container\", className)}>{children}</div>\r\n    </div>\r\n  );\r\n};\r\n","import { Vector2 } from \"gdxjs\";\r\n\r\nconst checkKerning = (id1, id2, kerningsData) => {\r\n  let check = false;\r\n  let amount = 0;\r\n  for (let kerning of kerningsData) {\r\n    if (kerning.first === id1 && kerning.second === id2) {\r\n      amount = kerning.amount;\r\n      check = true;\r\n      break;\r\n    } else {\r\n      check = false;\r\n    }\r\n  }\r\n  if (check) {\r\n    return amount;\r\n  } else {\r\n    return 0;\r\n  }\r\n};\r\n\r\nexport default class GlyphLayour {\r\n  constructor(pageImage, regions, keringsData, canvasWidth) {\r\n    this.pageImage = pageImage;\r\n    this.regions = regions;\r\n    this.kerningsData = keringsData;\r\n    this.canvasWidth = canvasWidth;\r\n    this.type = 0;\r\n    this.align = 2;\r\n    this.lineHeight = pageImage.lineHeight;\r\n    this.baseLine = pageImage.base;\r\n    this.fixedWidth = canvasWidth;\r\n    // temp variable\r\n    this.position = new Vector2(0, 0);\r\n    this.scale = 0;\r\n    this.newBase = 0;\r\n    this.oriWidth = 0;\r\n    this.oriHeight = 0;\r\n    this.positionBreak = []; // list of break-position's index\r\n    this.lastBreakIndex = 0;\r\n    // pre draw\r\n    this.cache = [];\r\n    this.preDraw = true;\r\n  }\r\n  addToCache = (line, px, py, lineBreak, lineH) => {\r\n    let xAdvance = 0;\r\n    for (let index = 0; index < line.length; index++) {\r\n      const currChar = line.charCodeAt(index);\r\n      const preChar = line.charCodeAt(index - 1);\r\n      let key = this.findRegions(currChar);\r\n      let kerningAmount = checkKerning(preChar, currChar, this.kerningsData);\r\n      // let kerningAmount = checkKerning(currChar, preChar, this.kerningsData);\r\n      this.cache.push({\r\n        key: key,\r\n        x:\r\n          px + xAdvance + key.xoffset * this.scale + kerningAmount * this.scale,\r\n        y: py + key.yoffset * this.scale + lineBreak * this.scale + lineH,\r\n        width: key.width * this.scale,\r\n        height: key.height * this.scale,\r\n      });\r\n      xAdvance += key.xadvance * this.scale;\r\n    }\r\n  };\r\n\r\n  beforeDrawing = (posX, posY, fontSize, CharSequence) => {\r\n    if (this.preDraw) {\r\n      let spaceXadvance = 0;\r\n      let tmpLength = 0;\r\n      let tmplist = [];\r\n      // find longest sequence\r\n      for (let i = 0; i < CharSequence.length; i++) {\r\n        const char = CharSequence.charCodeAt(i);\r\n        const key = this.findRegions(char);\r\n        if (char !== 32) {\r\n          tmpLength += key.xadvance * this.scale;\r\n        } else {\r\n          spaceXadvance = key.xadvance * this.scale;\r\n          tmplist.push(tmpLength);\r\n          tmpLength = 0;\r\n        }\r\n      }\r\n      let maxSeq = Math.max(...tmplist) + spaceXadvance;\r\n      //////////////////\r\n      this.newbase = fontSize;\r\n      this.scale = this.newbase / this.baseLine;\r\n      CharSequence = CharSequence.trim();\r\n\r\n      // split string between /n\r\n      let listCharSeq = CharSequence.split(\"/n\").map((s) => s.trim());\r\n      let lineH = 0;\r\n      for (let si = 0; si < listCharSeq.length; si++) {\r\n        CharSequence = listCharSeq[si];\r\n        // find new origin Width for each line\r\n        this.oriWidth = 0;\r\n        for (let i = 0; i < CharSequence.length; i++) {\r\n          const char = CharSequence.charCodeAt(i);\r\n          const preChar = CharSequence.charCodeAt(i - 1);\r\n          const key = this.findRegions(char);\r\n          let kerningAmount = checkKerning(preChar, char, this.kerningsData); // new\r\n          this.oriWidth += kerningAmount * this.scale; // new\r\n          if (i < CharSequence.length - 1) {\r\n            this.oriWidth += key.xadvance * this.scale;\r\n          } else {\r\n            this.oriWidth += key.width * this.scale;\r\n          }\r\n        }\r\n        let tmpRatio = this.oriWidth / this.fixedWidth;\r\n        lineH = this.lineHeight * this.scale * si;\r\n        let accumulate = 0;\r\n        let tmpChar = \"\";\r\n        let lineBreak = 0;\r\n        // finding position break and length of each line\r\n        // only execute if oriWidth > fixedWidth and fixedWidth > longest seq\r\n        if (tmpRatio > 1 && this.fixedWidth > maxSeq) {\r\n          for (let i = 0; i < CharSequence.length; i++) {\r\n            tmpChar += CharSequence[i];\r\n            const char = CharSequence.charCodeAt(i);\r\n            const key = this.findRegions(char);\r\n            accumulate += key.xadvance * this.scale;\r\n            // every line before last line\r\n            if (accumulate >= this.fixedWidth) {\r\n              let j = i;\r\n              while (j >= 0) {\r\n                i--;\r\n                j--;\r\n                const key2 = this.findRegions(CharSequence.charCodeAt(i));\r\n                accumulate -= key2.xadvance * this.scale;\r\n                tmpChar = tmpChar.substring(0, tmpChar.length - 1);\r\n                if (accumulate <= this.fixedWidth && key2.id === 32) {\r\n                  lineBreak = this.lineHeight * this.positionBreak.length;\r\n                  this.positionBreak.push(i); ///\r\n                  this.lastBreakIndex = i;\r\n                  const line = tmpChar.trim();\r\n                  let tmp = 0;\r\n                  let key3 = 0;\r\n\r\n                  for (let index = 0; index < line.length; index++) {\r\n                    key3 = this.findRegions(line.charCodeAt(index));\r\n                    if (index === line.length - 1) {\r\n                      tmp += key3.width * this.scale;\r\n                    } else {\r\n                      tmp += key3.xadvance * this.scale;\r\n                    }\r\n                  }\r\n                  let [px, py] = this.getPositionBasedOnMode(posX, posY, tmp);\r\n\r\n                  this.addToCache(line, px, py, lineBreak, lineH);\r\n\r\n                  accumulate = 0;\r\n                  j = -1;\r\n                  tmpChar = \"\";\r\n                }\r\n              }\r\n            }\r\n            // last line\r\n            if (i === CharSequence.length - 1 && accumulate < this.oriWidth) {\r\n              let tmpChar = \"\";\r\n              for (let j = this.lastBreakIndex; j <= i; j++) {\r\n                tmpChar += CharSequence[j];\r\n              }\r\n              const lastLine = tmpChar.trim();\r\n              let tmpXadvance = 0;\r\n              let lastKey = 0;\r\n              for (let index = 0; index < lastLine.length; index++) {\r\n                lastKey = this.findRegions(lastLine.charCodeAt(index));\r\n                if (index === lastLine.length - 1) {\r\n                  tmpXadvance += lastKey.width * this.scale;\r\n                } else {\r\n                  tmpXadvance += lastKey.xadvance * this.scale;\r\n                }\r\n              }\r\n              let [px, py] = this.getPositionBasedOnMode(\r\n                posX,\r\n                posY,\r\n                tmpXadvance\r\n              );\r\n              lineBreak = this.lineHeight * this.positionBreak.length;\r\n              this.addToCache(lastLine, px, py, lineBreak, lineH);\r\n            }\r\n          }\r\n        }\r\n        // if originWidth < fixedWidth or fixedWidth < longest sequence\r\n        if (tmpRatio <= 1 || this.fixedWidth < maxSeq) {\r\n          let [px, py] = this.getPositionBasedOnMode(posX, posY, this.oriWidth);\r\n          this.addToCache(CharSequence, px, py, 0, lineH);\r\n        }\r\n      }\r\n      if (this.type === 0) {\r\n        this.preDraw = false;\r\n      }\r\n      this.oriHeight = this.newbase;\r\n    }\r\n  };\r\n\r\n  getPositionBasedOnMode = (posX, posY, oriWidth) => {\r\n    if (this.align === 0) {\r\n      // posY -= Math.round(this.oriHeight / 2);\r\n      posX -= Math.round(oriWidth / 2);\r\n    } else if (this.align === 1) {\r\n      posX -= oriWidth;\r\n    }\r\n    return [posX, posY];\r\n  };\r\n\r\n  setAlignMode = (mode) => {\r\n    this.align = mode;\r\n  };\r\n\r\n  setType = (type) => {\r\n    this.type = type;\r\n  };\r\n\r\n  setLineHeight = (lineHeight) => {\r\n    this.lineHeight = lineHeight;\r\n  };\r\n\r\n  setFixedGlyphWidth = (fixedW) => {\r\n    this.fixedWidth = fixedW;\r\n    // this.fixedHeight = fixedH;\r\n  };\r\n\r\n  findRegions = (id) => {\r\n    for (let i = 0; i < this.regions.length; i++) {\r\n      if (this.regions[i].id === id) {\r\n        return this.regions[i];\r\n      }\r\n    }\r\n  };\r\n\r\n  draw = (batch, CharSequence = \"\", posX, posY, fontSize = this.baseLine) => {\r\n    if (this.type === 0) {\r\n      if (this.preDraw) {\r\n        this.beforeDrawing(posX, posY, fontSize, CharSequence);\r\n      }\r\n      for (let i = 0; i < this.cache.length; i++) {\r\n        let cache = this.cache[i];\r\n        cache.key.draw(batch, cache.x, cache.y, cache.width, cache.height);\r\n      }\r\n    }\r\n\r\n    if (this.type === 1) {\r\n      this.beforeDrawing(posX, posY, fontSize, CharSequence);\r\n      for (let i = 0; i < this.cache.length; i++) {\r\n        let cache = this.cache[i];\r\n        cache.key.draw(batch, cache.x, cache.y, cache.width, cache.height);\r\n      }\r\n      this.cache.length = 0;\r\n      this.positionBreak.length = 0;\r\n    }\r\n  };\r\n}\r\n","import { loadTexture, TextureRegion } from \"gdxjs\";\r\nimport GlyphLayour from \"./glyphLayout\";\r\n\r\nexport const AlignMode = {\r\n  center: 0,\r\n  right: 1,\r\n  left: 2,\r\n};\r\n\r\nexport const TextType = {\r\n  static: 0,\r\n  dynamic: 1,\r\n};\r\n\r\nfunction concatAndResolveUrl(url, concat) {\r\n  let url1 = url.split(\"/\");\r\n  let url2 = concat.split(\"/\");\r\n  let url3 = [];\r\n\r\n  for (let i = 0, l = url1.length; i < l; i++) {\r\n    if (url1[i] === \"..\") {\r\n      url3.pop();\r\n    } else if (url1[i] === \".\") {\r\n      continue;\r\n    } else {\r\n      url3.push(url1[i]);\r\n    }\r\n  }\r\n\r\n  for (let i = 0, l = url2.length; i < l; i++) {\r\n    if (url2[i] === \"..\") {\r\n      url3.pop();\r\n    } else if (url2[i] === \".\") {\r\n      continue;\r\n    } else {\r\n      url3.push(url2[i]);\r\n    }\r\n  }\r\n\r\n  return url3.join(\"/\");\r\n}\r\n\r\nexport default async (gl, packFileUrl, textureOptions) => {\r\n  const packFileContent = await fetch(packFileUrl).then((res) => res.text());\r\n  const pages = [];\r\n  const regionsData = [];\r\n  const kerningsData = [];\r\n  let pageImage = null;\r\n  const lines = packFileContent.split(\"\\n\");\r\n  let i = 0;\r\n  let tuple;\r\n  let tmp_array = [];\r\n  let push_to_kerning = false;\r\n\r\n  let numOfPages = 0;\r\n  let startPageLine = 2;\r\n  while (true) {\r\n    let line = lines[startPageLine];\r\n    tmp_array.length = 0;\r\n    tuple = line.split(\" \").map((s) => s.trim());\r\n    if (tuple[0] === \"page\") {\r\n      numOfPages += 1;\r\n    } else {\r\n      break;\r\n    }\r\n    startPageLine += 1;\r\n  }\r\n\r\n  let pageCounter = -1;\r\n  let saveIndex = 2 + numOfPages + 1; // index to start finding region data\r\n\r\n  while (true) {\r\n    let line = lines[i];\r\n\r\n    if (line === undefined) {\r\n      push_to_kerning = false;\r\n      break;\r\n    }\r\n\r\n    if (line.split(\" \").length === 2) {\r\n      const tmp = line.split(\" \");\r\n      if (tmp[0] === \"kernings\") {\r\n        push_to_kerning = true;\r\n      }\r\n      i++;\r\n      line = lines[i];\r\n    }\r\n\r\n    if (push_to_kerning && pageImage !== null) {\r\n      tuple = line.split(\" \").map((s) => s.trim());\r\n      tuple = tuple.filter((item) => item !== \"\");\r\n      tmp_array.length = 0;\r\n\r\n      for (let i = 1; i < tuple.length; i++) {\r\n        tmp_array.push(tuple[i].split(\"=\")[1]);\r\n      }\r\n      const first = parseInt(tmp_array[0], 10);\r\n      const second = parseInt(tmp_array[1], 10);\r\n      const amount = parseInt(tmp_array[2], 10);\r\n      kerningsData.push({ first, second, amount });\r\n    }\r\n\r\n    if (pageImage === null) {\r\n      pageCounter += 1;\r\n\r\n      tmp_array.length = 0;\r\n      tuple = line.split(\" \").map((s) => s.trim());\r\n      for (let i = 1; i < tuple.length; i++) {\r\n        tmp_array.push(tuple[i].split(\"=\")[1]);\r\n      }\r\n      const face = tmp_array[0];\r\n      const size = parseInt(tmp_array[1], 10);\r\n      const bold = parseInt(tmp_array[2], 10) === 0 ? false : true;\r\n      const italic = parseInt(tmp_array[3], 10) === 0 ? false : true;\r\n      const charset = tmp_array[4];\r\n      const unicode = parseInt(tmp_array[5], 10);\r\n      const stretchH = parseInt(tmp_array[6], 10); // percentage\r\n      const smooth = parseInt(tmp_array[7], 10);\r\n      const aa = parseInt(tmp_array[8], 10);\r\n      const padding = tmp_array[9].split(\",\").map((i) => parseInt(i, 10));\r\n      const spacing = tmp_array[10].split(\",\").map((i) => parseInt(i, 10));\r\n      const outline = parseInt(tmp_array[11], 10);\r\n\r\n      i++;\r\n      line = lines[i];\r\n      tmp_array.length = 0;\r\n      tuple = line.split(\" \").map((s) => s.trim());\r\n      for (let i = 1; i < tuple.length; i++) {\r\n        tmp_array.push(tuple[i].split(\"=\")[1]);\r\n      }\r\n      const lineHeight = parseInt(tmp_array[0], 10);\r\n      const base = parseInt(tmp_array[1], 10);\r\n      const scaleW = parseInt(tmp_array[2], 10);\r\n      const scaleH = parseInt(tmp_array[3], 10);\r\n      const num_of_pages = parseInt(tmp_array[4], 10);\r\n      const packed = parseInt(tmp_array[5], 10);\r\n      const alphaChnl = parseInt(tmp_array[6], 10);\r\n      const redChnl = parseInt(tmp_array[7], 10);\r\n      const greenChnl = parseInt(tmp_array[8], 10);\r\n      const blueChnl = parseInt(tmp_array[9], 10);\r\n\r\n      i = i + pageCounter + 1;\r\n      line = lines[i];\r\n      tmp_array.length = 0;\r\n      tuple = line.split(\" \").map((s) => s.trim());\r\n      for (let i = 1; i < tuple.length; i++) {\r\n        tmp_array.push(tuple[i].split(\"=\")[1]);\r\n      }\r\n      const page_id = parseInt(tmp_array[0], 10);\r\n      const url = tmp_array[1].split('\"');\r\n      const file = concatAndResolveUrl(packFileUrl, `../${url[1]}`);\r\n\r\n      pageImage = {\r\n        file,\r\n        page_id,\r\n        face,\r\n        size,\r\n        bold,\r\n        italic,\r\n        charset,\r\n        unicode,\r\n        stretchH,\r\n        smooth,\r\n        aa,\r\n        padding,\r\n        spacing,\r\n        outline,\r\n        lineHeight,\r\n        base,\r\n        scaleW,\r\n        scaleH,\r\n        num_of_pages,\r\n        packed,\r\n        alphaChnl,\r\n        redChnl,\r\n        greenChnl,\r\n        blueChnl,\r\n      };\r\n      pages.push(pageImage);\r\n\r\n      i = saveIndex;\r\n      line = lines[i];\r\n    }\r\n\r\n    if (!push_to_kerning && pageImage !== null) {\r\n      tuple = line.split(\" \").map((s) => s.trim());\r\n      tuple = tuple.filter((item) => item !== \"\");\r\n      tmp_array.length = 0;\r\n\r\n      for (let i = 1; i < tuple.length; i++) {\r\n        tmp_array.push(tuple[i].split(\"=\")[1]);\r\n      }\r\n      const id = parseInt(tmp_array[0], 10);\r\n      const left = parseInt(tmp_array[1], 10);\r\n      const top = parseInt(tmp_array[2], 10);\r\n      const width = parseInt(tmp_array[3], 10);\r\n      const height = parseInt(tmp_array[4], 10);\r\n      const xoffset = parseInt(tmp_array[5], 10);\r\n      const yoffset = parseInt(tmp_array[6], 10);\r\n      const xadvance = parseInt(tmp_array[7], 10);\r\n      const page = parseInt(tmp_array[8], 10);\r\n      const region = {\r\n        id,\r\n        left,\r\n        top,\r\n        width,\r\n        height,\r\n        xoffset,\r\n        yoffset,\r\n        xadvance,\r\n        page: pageImage,\r\n        id_page: page,\r\n      };\r\n\r\n      if (region.id_page === pageCounter) {\r\n        regionsData.push(region);\r\n      } else {\r\n        if (pageCounter === numOfPages - 1) {\r\n          push_to_kerning = true;\r\n        } else {\r\n          saveIndex = i;\r\n          i = -1;\r\n          pageImage = null;\r\n        }\r\n      }\r\n    }\r\n\r\n    i++;\r\n  }\r\n\r\n  //   console.log(kerningsData);\r\n  //   console.log(pages);\r\n  //   console.log(regionsData);\r\n  for (let page of pages) {\r\n    page.texture = await loadTexture(gl, page.file, textureOptions);\r\n    page.invTextWidth = 1 / page.texture.width;\r\n    page.invTextHeight = 1 / page.texture.height;\r\n  }\r\n\r\n  const regions = [];\r\n\r\n  for (let regionData of regionsData) {\r\n    const left = regionData.left;\r\n    const top = regionData.top;\r\n    const width = regionData.width;\r\n    const height = regionData.height;\r\n    const { texture, invTexWidth, invTexHeight } = regionData.page;\r\n    regions.push(\r\n      new TextureRegion(\r\n        texture,\r\n        left,\r\n        top,\r\n        width,\r\n        height,\r\n        regionData,\r\n        invTexWidth,\r\n        invTexHeight\r\n      )\r\n    );\r\n  }\r\n\r\n  return {\r\n    getLineHeight() {\r\n      return pageImage.lineHeight;\r\n    },\r\n\r\n    getPages() {\r\n      return pages;\r\n    },\r\n\r\n    getRegions() {\r\n      return regions;\r\n    },\r\n\r\n    findRegions(id) {\r\n      for (let i = 0; i < regions.length; i++) {\r\n        if (regions[i].id === id) {\r\n          return regions[i];\r\n        }\r\n      }\r\n    },\r\n\r\n    setNewText(canvasWidth) {\r\n      return new GlyphLayour(pageImage, regions, kerningsData, canvasWidth);\r\n    },\r\n  };\r\n};\r\n","const shuffle = (array) => {\r\n  array.sort(() => Math.random() - 0.5);\r\n};\r\n\r\nlet randomArray, tmp, tmp2, otherFoodArray;\r\nconst getRandomFoodList = (foodTex, recipes, comboCounter, difficulty) => {\r\n  randomArray = [];\r\n  tmp = [];\r\n  tmp2 = [];\r\n  otherFoodArray = [];\r\n\r\n  for (let rep of recipes) {\r\n    randomArray.push(rep.type);\r\n    tmp.push(rep.type);\r\n  }\r\n\r\n  for (let i = 0; i < foodTex.length; i++) {\r\n    tmp2.push(foodTex[i].index);\r\n  }\r\n\r\n  for (let value of tmp2) {\r\n    if (!tmp.includes(value)) {\r\n      otherFoodArray.push(value);\r\n    }\r\n  }\r\n  if (comboCounter >= 5 && comboCounter < 10) {\r\n    randomArray.push(otherFoodArray[0]);\r\n  }\r\n\r\n  if (comboCounter >= 10 && comboCounter < 20) {\r\n    for (let i = 0; i < otherFoodArray.length - 1; i++) {\r\n      randomArray.push(otherFoodArray[i]);\r\n    }\r\n  }\r\n\r\n  if (comboCounter >= 20) {\r\n    for (let i = 0; i < otherFoodArray.length; i++) {\r\n      randomArray.push(otherFoodArray[i]);\r\n    }\r\n  }\r\n\r\n  return randomArray;\r\n};\r\n\r\nconst getDelayBaseOnDifficulty = (difficulty) => {\r\n  if (difficulty >= 1 && difficulty <= 3) {\r\n    return 2.5;\r\n  } else if (difficulty >= 4 && difficulty <= 6) {\r\n    return 2;\r\n  } else if (difficulty >= 7 && difficulty <= 9) {\r\n    return 1.5;\r\n  } else {\r\n    return 1;\r\n  }\r\n};\r\n\r\nconst getPattern = (number, width, height) => {\r\n  let timer;\r\n  let upSpeedX = [];\r\n  let upSpeedY;\r\n  let upAccelerationY;\r\n  let time;\r\n  let tmpSpeedX = [];\r\n  let tmpAccX = [];\r\n\r\n  if (number === 0) {\r\n    // 3 on 1 line\r\n    timer = [0, 0.15, 0.2];\r\n    upSpeedY = [height / 2];\r\n    upAccelerationY = -height / 4;\r\n    time = -upSpeedY / upAccelerationY;\r\n    if (Math.random() > 0.5) {\r\n      tmpSpeedX = [width / 3];\r\n    } else {\r\n      tmpSpeedX = [-width / 3];\r\n    }\r\n  } else if (number === 3) {\r\n    // 4 zig zag\r\n    timer = [0, 0.15, 0.17, 0.25];\r\n    upSpeedY = [height / 2];\r\n    upAccelerationY = -height / 4;\r\n    time = -upSpeedY / upAccelerationY;\r\n    if (Math.random() > 0.5) {\r\n      tmpSpeedX = [width / 3, width / 10, -width / 10, -width / 3];\r\n    } else {\r\n      tmpSpeedX = [-width / 3, -width / 10, width / 10, width / 3];\r\n    }\r\n  } else if (number === 4) {\r\n    // 5 V\r\n    timer = [0, 0.16, 0.16, 0.17, 0.17];\r\n    upSpeedY = [height / 2.1];\r\n    upAccelerationY = -height / 4;\r\n    time = -upSpeedY / upAccelerationY;\r\n    tmpSpeedX = [width / 100, width / 6, -width / 6, width / 2.5, -width / 2.5];\r\n  } else if (number === 5) {\r\n    // 5 V reverse\r\n    timer = [0, 0, 0.12, 0.12, 0.2];\r\n    upSpeedY = [height / 2.1];\r\n    upAccelerationY = -height / 4;\r\n    time = -upSpeedY / upAccelerationY;\r\n    tmpSpeedX = [width / 2.5, -width / 2.5, width / 6, -width / 6, width / 100];\r\n  } else if (number === 1) {\r\n    // 2 random index same time\r\n    timer = [0, 0.15];\r\n    upSpeedY = [height / 2];\r\n    upAccelerationY = -height / 4;\r\n    time = -upSpeedY / upAccelerationY;\r\n    if (Math.random() > 0.5) {\r\n      tmpSpeedX = [\r\n        Math.random() * (width / 4 - width / 8) + width / 8,\r\n        -(Math.random() * (width / 4 - width / 8) + width / 8),\r\n      ];\r\n    } else {\r\n      tmpSpeedX = [\r\n        -(Math.random() * (width / 4 - width / 8) + width / 8),\r\n        Math.random() * (width / 4 - width / 8) + width / 8,\r\n      ];\r\n    }\r\n  } else if (number === 2) {\r\n    // 3 random index same time\r\n    timer = [0, 0.2, 0.1];\r\n    upSpeedY = [height / 2];\r\n    upAccelerationY = -height / 4;\r\n    time = -upSpeedY / upAccelerationY;\r\n    tmpSpeedX = [\r\n      Math.random() * (width / 4 - width / 6) + width / 6,\r\n      -(Math.random() * (width / 2.8 - width / 5.5) + width / 5.5),\r\n      Math.random() * (width / 20 - width / 40) + width / 40,\r\n    ];\r\n  }\r\n\r\n  for (let i = 0; i < tmpSpeedX.length; i++) {\r\n    tmpAccX.push(-tmpSpeedX[i] / time);\r\n  }\r\n\r\n  for (let i = 0; i < tmpSpeedX.length; i++) {\r\n    upSpeedX.push({ speedX: tmpSpeedX[i], accerX: tmpAccX[i] });\r\n  }\r\n  return {\r\n    timer,\r\n    upSpeedX,\r\n    upSpeedY,\r\n    upAccelerationY,\r\n    time,\r\n  };\r\n};\r\n\r\nconst getShootTypeBaseOnDifficulty = (difficulty) => {\r\n  if (difficulty >= 1 && difficulty <= 2) {\r\n    return { minNumber: 0, maxNumber: 2 };\r\n  } else if (difficulty >= 3 && difficulty <= 7) {\r\n    return { minNumber: 0, maxNumber: 3 };\r\n  } else {\r\n    return { minNumber: 0, maxNumber: 5 };\r\n  }\r\n};\r\n\r\nconst createFoodSpawnSystem = () => {\r\n  let index = 0;\r\n  let delayAfterCombo = 2;\r\n  let pattern;\r\n  let timer;\r\n  let speedXIndex = 0;\r\n  let speedYIndex = 0;\r\n  return {\r\n    init(worldState, extra) {},\r\n\r\n    update(delta, worldState, { width, height }) {\r\n      // console.log(worldState.foods);\r\n      // console.log(worldState.stateTime, delayAfterCombo, timer);\r\n      const { foodTex, difficulty, recipes, comboCounter } = worldState;\r\n      if (pattern === undefined && worldState.stateTime > delayAfterCombo) {\r\n        const { minNumber, maxNumber } = getShootTypeBaseOnDifficulty(\r\n          difficulty\r\n        );\r\n        pattern = getPattern(\r\n          Math.round(Math.random() * (maxNumber - minNumber) + minNumber),\r\n          width,\r\n          height\r\n        );\r\n        // pattern = getPattern(5, width, height);\r\n\r\n        timer = worldState.stateTime + pattern.timer[index];\r\n      } else if (\r\n        worldState.stateTime > delayAfterCombo &&\r\n        worldState.stateTime > timer\r\n      ) {\r\n        index = Math.min((index += 1), pattern.timer.length);\r\n        timer = worldState.stateTime + pattern.timer[index];\r\n\r\n        let loop = 1;\r\n        let tmpIndex = index - 1;\r\n        while (true) {\r\n          if (\r\n            pattern.timer[tmpIndex] === pattern.timer[tmpIndex + 1] &&\r\n            tmpIndex < pattern.timer.length\r\n          ) {\r\n            tmpIndex = Math.min((tmpIndex += 1), pattern.timer.length);\r\n            loop += 1;\r\n          } else {\r\n            break;\r\n          }\r\n        }\r\n        // console.log(loop, index);\r\n        for (let i = 0; i < loop; i++) {\r\n          if (i > 0) {\r\n            index = Math.min((index += 1), pattern.timer.length);\r\n          }\r\n          timer = worldState.stateTime + pattern.timer[index];\r\n          const randomFoodArray = getRandomFoodList(\r\n            foodTex,\r\n            recipes,\r\n            comboCounter,\r\n            difficulty\r\n          );\r\n          shuffle(randomFoodArray);\r\n\r\n          worldState.foods.push({\r\n            stateTime: 0,\r\n            type: randomFoodArray[0],\r\n            x: width / 2,\r\n            y: (height * 2) / 3,\r\n            upTime: worldState.stateTime + pattern.time, // check with game stateTime\r\n            upRealTime: pattern.time,\r\n            oriSpeedX: pattern.upSpeedX[speedXIndex].speedX,\r\n            oriSpeedY: pattern.upSpeedY[speedYIndex],\r\n            upSpeedX: pattern.upSpeedX[speedXIndex].speedX,\r\n            upSpeedY: pattern.upSpeedY[speedYIndex],\r\n            upAccelerationX: pattern.upSpeedX[speedXIndex].accerX,\r\n            upAccelerationY: pattern.upAccelerationY,\r\n            downSpeedY: 0,\r\n            downAcceleration: height / 100,\r\n            scaleSpeed: (1 - 0) / pattern.time,\r\n            opacitySpeed: (1 - 0) / pattern.time,\r\n            oriScale: 0,\r\n            oriOpacity: 0,\r\n          });\r\n\r\n          speedXIndex = Math.min(\r\n            (speedXIndex += 1),\r\n            pattern.upSpeedX.length - 1\r\n          );\r\n          speedYIndex = Math.min(\r\n            (speedYIndex += 1),\r\n            pattern.upSpeedY.length - 1\r\n          );\r\n        }\r\n\r\n        // last\r\n        if (index === pattern.timer.length) {\r\n          delayAfterCombo =\r\n            worldState.stateTime + getDelayBaseOnDifficulty(difficulty);\r\n          index = 0;\r\n          speedXIndex = 0;\r\n          speedYIndex = 0;\r\n          pattern = undefined;\r\n        }\r\n      }\r\n    },\r\n  };\r\n};\r\n\r\nexport default createFoodSpawnSystem;\r\n","import React from \"react\";\r\nimport clsx from \"clsx\";\r\nimport \"./modal.css\";\r\nexport default ({ className, id, children }) => {\r\n  return (\r\n    <div id={id} className={clsx(\"modal-wrapper\", className)}>\r\n      {children}\r\n    </div>\r\n  );\r\n};\r\n","import \"./registerModal.css\";\r\nimport React, { useState, useEffect, useRef } from \"react\";\r\nimport Modal from \"./Modal\";\r\n\r\nexport default ({ onSubmit }) => {\r\n  const [state, setstate] = useState({\r\n    username: \"\",\r\n    email: \"\",\r\n    phoneNumber: \"\",\r\n  });\r\n\r\n  const submitBtn = useRef(null);\r\n\r\n  useEffect(() => {\r\n    const _resizeHandler = () => {\r\n      if (submitBtn) {\r\n        submitBtn.current.scrollIntoView();\r\n      }\r\n    };\r\n    window.addEventListener(\"resize\", _resizeHandler);\r\n    return () => window.removeEventListener(\"resize\", _resizeHandler);\r\n  }, []);\r\n\r\n  return (\r\n    <Modal id=\"register-modal\">\r\n      <div className=\"form-container\">\r\n        <form\r\n          autoComplete=\"off\"\r\n          onSubmit={async (e) => {\r\n            e.preventDefault();\r\n            onSubmit(state);\r\n          }}\r\n        >\r\n          <div className=\"logo-container\">\r\n            <img src={require(\"../assets/logo.jpg\")} alt=\"logo\" />\r\n          </div>\r\n          <h1>Để lại thông tin cá nhân trước khi bắt đầu MiniGame LẩuPhan</h1>\r\n          <input\r\n            type=\"text\"\r\n            name=\"username\"\r\n            value={state.username}\r\n            onChange={(e) => setstate({ ...state, username: e.target.value })}\r\n            placeholder=\"Họ và tên...\"\r\n            required\r\n          />\r\n          <input\r\n            type=\"email\"\r\n            name=\"email\"\r\n            value={state.email}\r\n            onChange={(e) => setstate({ ...state, email: e.target.value })}\r\n            placeholder=\"Email...\"\r\n            required\r\n          />\r\n          <input\r\n            type=\"text\"\r\n            name=\"phoneNumber\"\r\n            value={state.phoneNumber}\r\n            onChange={(e) =>\r\n              setstate({ ...state, phoneNumber: e.target.value })\r\n            }\r\n            placeholder=\"Số điện thoại...\"\r\n            required\r\n          />\r\n          <button ref={submitBtn} type=\"submit\">\r\n            Chơi ngay!\r\n          </button>\r\n        </form>\r\n      </div>\r\n    </Modal>\r\n  );\r\n};\r\n","export const checkPointInsideRect = (point, verts, DEVICE_PIXEL_RATIO = 1) => {\r\n  const x = point.x * DEVICE_PIXEL_RATIO;\r\n  const y = point.y * DEVICE_PIXEL_RATIO;\r\n  // const minX = Math.min(verts[0], verts[2], verts[4], verts[6]);\r\n  // const maxX = Math.max(verts[0], verts[2], verts[4], verts[6]);\r\n  // const minY = Math.min(verts[1], verts[3], verts[5], verts[7]);\r\n  // const maxY = Math.max(verts[1], verts[3], verts[5], verts[7]);\r\n\r\n  const minX = verts[0];\r\n  const maxX = verts[0] + verts[2];\r\n  const minY = verts[1];\r\n  const maxY = verts[1] + verts[3];\r\n  if (x < minX || x > maxX || y < minY || y > maxY) return false;\r\n  return true;\r\n};\r\n","import axios from \"axios\";\r\n\r\nconst baseURL = process.env.REACT_APP_API_HOST;\r\n\r\nconst axiosInstance = axios.create({\r\n  baseURL,\r\n});\r\nexport default axiosInstance;\r\n","import Analytics from \"analytics\";\r\nimport googleAnalytics from \"@analytics/google-analytics\";\r\n\r\nconst analytics = Analytics({\r\n  app: \"Lẩu Phan Minigame\",\r\n  plugins: [\r\n    googleAnalytics({\r\n      trackingId: \"UA-171082295-1\",\r\n    }),\r\n  ],\r\n});\r\n\r\nexport default analytics;\r\n","import { createAnimation } from \"gdxjs\";\r\n\r\nexport const getFoodInPotTexture = (atlas) => {\r\n  const foodTex = [\r\n    {\r\n      image: atlas.findRegion(\"Tom\", -1),\r\n      index: 0,\r\n    },\r\n    {\r\n      image: atlas.findRegion(\"kimchi\", -1),\r\n      index: 1,\r\n    },\r\n    {\r\n      image: atlas.findRegion(\"nam\", -1),\r\n      index: 2,\r\n    },\r\n    {\r\n      image: atlas.findRegion(\"ngao\", -1), // dung ra la ngao\r\n      index: 3,\r\n    },\r\n    {\r\n      image: atlas.findRegion(\"raucai\", -1),\r\n      index: 4,\r\n    },\r\n    {\r\n      image: atlas.findRegion(\"thitbo\", -1),\r\n      index: 5,\r\n    },\r\n    {\r\n      image: atlas.findRegion(\"bachtuoc\", -1),\r\n      index: 6,\r\n    },\r\n  ];\r\n  return foodTex;\r\n};\r\n\r\nexport const getFoodTexture = (atlas) => {\r\n  const foodTex = [\r\n    {\r\n      image: atlas.findRegion(\"tom xuong\", -1),\r\n      index: 0,\r\n    },\r\n    {\r\n      image: atlas.findRegion(\"kimchi xuong\", -1),\r\n      index: 1,\r\n    },\r\n    {\r\n      image: atlas.findRegion(\"nam xuong\", -1),\r\n      index: 2,\r\n    },\r\n    {\r\n      image: atlas.findRegion(\"ngao xuong\", -1),\r\n      index: 3,\r\n    },\r\n    {\r\n      image: atlas.findRegion(\"raucai xuong\", -1),\r\n      index: 4,\r\n    },\r\n    {\r\n      image: atlas.findRegion(\"thitbo xuong\", -1),\r\n      index: 5,\r\n    },\r\n    {\r\n      image: atlas.findRegion(\"bachtuoc xuong\", -1),\r\n      index: 6,\r\n    },\r\n  ];\r\n  return foodTex;\r\n};\r\n\r\nexport const getFoodAnimation = (atlas) => {\r\n  const duration_smoke = 0.05;\r\n  const duration_food = 0.05;\r\n  const effect = atlas.findRegions(\"effect boc khoi\");\r\n  const tom_efftect = atlas.findRegions(\"Tom\");\r\n  const kimchi_efftect = atlas.findRegions(\"kimchi\");\r\n  const nam_efftect = atlas.findRegions(\"nam\");\r\n  const ngao_efftect = atlas.findRegions(\"ngao\");\r\n  const raucai_efftect = atlas.findRegions(\"raucai\");\r\n  const thitbo_efftect = atlas.findRegions(\"thitbo\");\r\n  const bachtuoc_effect = atlas.findRegions(\"bachtuoc\");\r\n  const smoke_animation = createAnimation(duration_smoke, effect);\r\n\r\n  const foodAnimation = [\r\n    {\r\n      animation: createAnimation(duration_food, tom_efftect),\r\n      index: 0,\r\n      length: tom_efftect.length - 1,\r\n      duration: duration_food,\r\n    },\r\n    {\r\n      animation: createAnimation(duration_food, kimchi_efftect),\r\n      index: 1,\r\n      length: kimchi_efftect.length - 1,\r\n      duration: duration_food,\r\n    },\r\n    {\r\n      animation: createAnimation(duration_food, nam_efftect),\r\n      index: 2,\r\n      length: nam_efftect.length - 1,\r\n      duration: duration_food,\r\n    },\r\n    {\r\n      animation: createAnimation(duration_food, ngao_efftect),\r\n      index: 3,\r\n      length: ngao_efftect.length - 1,\r\n      duration: duration_food,\r\n    },\r\n    {\r\n      animation: createAnimation(duration_food, raucai_efftect),\r\n      index: 4,\r\n      length: raucai_efftect.length - 1,\r\n      duration: duration_food,\r\n    },\r\n    {\r\n      animation: createAnimation(duration_food, thitbo_efftect),\r\n      index: 5,\r\n      length: thitbo_efftect.length - 1,\r\n      duration: duration_food,\r\n    },\r\n    {\r\n      animation: createAnimation(duration_food, bachtuoc_effect),\r\n      index: 6,\r\n      length: bachtuoc_effect.length - 1,\r\n      duration: duration_food,\r\n    },\r\n  ];\r\n  return {\r\n    foodAnimation,\r\n    smokeAnimation: {\r\n      animation: smoke_animation,\r\n      duration: duration_smoke,\r\n      frameLength: effect.length - 1,\r\n    },\r\n  };\r\n};\r\n","import { fillRect } from \"gdxjs\";\r\n\r\nconst createBackGroundRenderSystem = () => {\r\n  let bg, bar;\r\n  let BAR_WIDTH, BAR_HEIGHT;\r\n  return {\r\n    init(worldState, { width, assets }) {\r\n      let atlas = assets.newAssets;\r\n\r\n      bg = assets.backGround;\r\n      bar = atlas.findRegion(\"menu-bar\", -1);\r\n      BAR_WIDTH = width;\r\n      BAR_HEIGHT = (BAR_WIDTH * bar.height) / bar.width;\r\n    },\r\n    update(delta, worldState, { batch, width, height, camera }) {\r\n      batch.setProjection(camera.combined);\r\n      batch.begin();\r\n      batch.setColor(1, 1, 1, 1);\r\n\r\n      fillRect(batch, bg, 0, 0, width, height);\r\n      bar.draw(batch, 0, 0, BAR_WIDTH, BAR_HEIGHT);\r\n\r\n      batch.end();\r\n    },\r\n  };\r\n};\r\n\r\nexport default createBackGroundRenderSystem;\r\n","const createTrayRenderSystem = () => {\r\n  let tray, trayShadow;\r\n  let TRAY_WIDTH, TRAY_HEIGHT, TS_WIDTH, TS_HEIGHT;\r\n  return {\r\n    init({ trayState }, { width, assets }) {\r\n      let atlas = assets.gameAssets;\r\n      let trayAtlas = assets.foodInPot;\r\n\r\n      // tray = atlas.findRegion(\"tray\", -1);\r\n      tray = trayAtlas.findRegion(\"hot_pot\", -1);\r\n      trayShadow = atlas.findRegion(\"tray-shadow\", -1);\r\n\r\n      TRAY_WIDTH = width / 3.8;\r\n      TRAY_HEIGHT = (TRAY_WIDTH * tray.height) / tray.width;\r\n\r\n      TS_WIDTH = TRAY_WIDTH * 0.8;\r\n      TS_HEIGHT = (TS_WIDTH * trayShadow.height) / trayShadow.width;\r\n    },\r\n    update(delta, { trayState }, { batch, width, height, camera }) {\r\n      batch.setProjection(camera.combined);\r\n      batch.begin();\r\n      batch.setColor(1, 1, 1, 1);\r\n\r\n      tray.draw(\r\n        batch,\r\n        trayState.x - TRAY_WIDTH / 2,\r\n        trayState.y,\r\n        TRAY_WIDTH,\r\n        TRAY_HEIGHT\r\n      );\r\n\r\n      trayShadow.draw(\r\n        batch,\r\n        trayState.x - TS_WIDTH / 2,\r\n        trayState.y + height / 13,\r\n        TS_WIDTH,\r\n        TS_HEIGHT\r\n      );\r\n\r\n      batch.end();\r\n    },\r\n  };\r\n};\r\n\r\nexport default createTrayRenderSystem;\r\n","import { Vector2 } from \"gdxjs\";\r\n\r\nconst createTrayPositionSystem = () => {\r\n  let tmp = new Vector2();\r\n\r\n  return {\r\n    update(delta, { trayState }, { batch, width, height, camera }) {\r\n      tmp\r\n        .setVector(trayState.target)\r\n        .subVector(trayState.position)\r\n        .nor()\r\n        .scale(trayState.speed * delta);\r\n      if (trayState.target.distanceSqr(trayState.position) <= tmp.len2()) {\r\n        trayState.position.setVector(trayState.target);\r\n      } else {\r\n        trayState.position.addVector(tmp);\r\n      }\r\n\r\n      trayState.x = trayState.position.x;\r\n      if (trayState.x <= trayState.width / 2) {\r\n        trayState.x = trayState.width / 2;\r\n      }\r\n      if (trayState.x >= width - trayState.width / 2) {\r\n        trayState.x = width - trayState.width / 2;\r\n      }\r\n    },\r\n  };\r\n};\r\n\r\nexport default createTrayPositionSystem;\r\n","import { Vector2 } from \"gdxjs\";\r\n\r\nconst createInputHandlerGameScreenSystem = () => {\r\n  let worldCoord = new Vector2();\r\n\r\n  return {\r\n    init({ trayState }, { inputHandler, width }) {\r\n      inputHandler.addEventListener(\"touchStart\", () => {\r\n        worldCoord.setVector(inputHandler.getTouchedWorldCoord());\r\n        trayState.target.x = worldCoord.x;\r\n      });\r\n\r\n      inputHandler.addEventListener(\"touchMove\", () => {\r\n        worldCoord.setVector(inputHandler.getTouchedWorldCoord());\r\n        trayState.target.x = worldCoord.x;\r\n      });\r\n    },\r\n    update(delta, { trayState }, { inputHandler }) {\r\n      // if (inputHandler.getTouchedWorldCoord()) {\r\n      //   worldCoord.setVector(inputHandler.getTouchedWorldCoord());\r\n      //   trayState.target.x = worldCoord.x;\r\n      // }\r\n    },\r\n  };\r\n};\r\nexport default createInputHandlerGameScreenSystem;\r\n","const createFoodPositionSystem = () => {\r\n  return {\r\n    init(worldState, extra) {},\r\n\r\n    update(delta, worldState, { width, height }) {\r\n      const { foods, redSmokeList, recipes } = worldState;\r\n\r\n      for (let i = 0; i < foods.length; i++) {\r\n        if (foods[i].upSpeedY > 0) {\r\n          foods[i].upSpeedY =\r\n            foods[i].oriSpeedY + foods[i].upAccelerationY * foods[i].stateTime;\r\n          foods[i].upSpeedX =\r\n            foods[i].oriSpeedX + foods[i].upAccelerationX * foods[i].stateTime;\r\n\r\n          foods[i].stateTime = Math.min(\r\n            (foods[i].stateTime += delta),\r\n            foods[i].upRealTime\r\n          );\r\n\r\n          foods[i].y -= foods[i].upSpeedY * delta;\r\n          foods[i].x += foods[i].upSpeedX * delta;\r\n        } else {\r\n          foods[i].y += foods[i].downSpeedY * delta;\r\n          foods[i].downSpeedY += foods[i].downAcceleration;\r\n        }\r\n\r\n        if (foods[i].y > (height * 4.1) / 5) {\r\n          for (let j = 0; j < recipes.length; j++) {\r\n            if (foods[i].type === recipes[j].type) {\r\n              worldState.comboCounter = 0;\r\n              worldState.comboCheckIndex.length = 0;\r\n            }\r\n          }\r\n          redSmokeList.push({\r\n            x: foods[i].x,\r\n            y: foods[i].y,\r\n            stateTime: 0,\r\n            scale: foods[i].oriScale,\r\n          });\r\n          foods.splice(i, 1);\r\n        }\r\n      }\r\n    },\r\n  };\r\n};\r\n\r\nexport default createFoodPositionSystem;\r\n","const createFoodRenderSystem = () => {\r\n  let FOOD_WIDTH, FOOD_HEIGHT;\r\n\r\n  return {\r\n    init({ foodTex }, { width, height }) {\r\n      let tmpFood;\r\n      for (let tex of foodTex) {\r\n        if (tex.index === 0) {\r\n          tmpFood = tex.image;\r\n          break;\r\n        }\r\n      }\r\n      FOOD_WIDTH = width / 6;\r\n      FOOD_HEIGHT = (FOOD_WIDTH * tmpFood.height) / tmpFood.width;\r\n    },\r\n\r\n    update(delta, { foods, foodTex }, { width, height, batch, camera }) {\r\n      batch.setProjection(camera.combined);\r\n      batch.begin();\r\n      for (let i = foods.length - 1; i >= 0; i--) {\r\n        let image;\r\n        for (let j = 0; j < foodTex.length; j++) {\r\n          if (foodTex[j].index === foods[i].type) {\r\n            image = foodTex[j].image;\r\n          }\r\n        }\r\n\r\n        foods[i].oriOpacity = Math.min(\r\n          (foods[i].oriOpacity += delta * foods[i].opacitySpeed),\r\n          1\r\n        );\r\n        foods[i].oriScale = Math.min(\r\n          (foods[i].oriScale += delta * foods[i].scaleSpeed),\r\n          1\r\n        );\r\n        batch.setColor(1, 1, 1, foods[i].oriOpacity);\r\n        image.draw(\r\n          batch,\r\n          foods[i].x - FOOD_WIDTH / 2,\r\n          foods[i].y,\r\n          FOOD_WIDTH,\r\n          FOOD_HEIGHT,\r\n          FOOD_WIDTH / 2,\r\n          FOOD_HEIGHT / 2,\r\n          0,\r\n          foods[i].oriScale,\r\n          foods[i].oriScale\r\n        );\r\n      }\r\n      batch.end();\r\n    },\r\n  };\r\n};\r\n\r\nexport default createFoodRenderSystem;\r\n","import { AlignMode, TextType } from \"../utils/loadFontFile\";\r\n\r\nconst createRecipeRenderSystem = () => {\r\n  let FOOD_WIDTH, FOOD_HEIGHT;\r\n  let recipePositionInfos = [];\r\n  let TEXT_AMOUNT1, TEXT_AMOUNT2, TEXT_AMOUNT3, TEXT_AMOUNT4;\r\n  let TEXT_COUNTER, TEXT_LIST;\r\n  let numberFont;\r\n  return {\r\n    init({ foodTex }, { width, height, font }) {\r\n      let tmpFood;\r\n      for (let tex of foodTex) {\r\n        if (tex.index === 0) {\r\n          tmpFood = tex.image;\r\n          break;\r\n        }\r\n      }\r\n      FOOD_WIDTH = width / 7;\r\n      FOOD_HEIGHT = (FOOD_WIDTH * tmpFood.height) / tmpFood.width;\r\n\r\n      const RECIPE_MARGIN = width / 75;\r\n      for (let i = 0; i < 4; i++) {\r\n        recipePositionInfos.push({\r\n          x: width / 3.06 + i * (FOOD_WIDTH + RECIPE_MARGIN),\r\n          y: height * 0.028,\r\n        });\r\n      }\r\n\r\n      numberFont = font.numberFont;\r\n      TEXT_COUNTER = numberFont.setNewText(width);\r\n      TEXT_COUNTER.setAlignMode(AlignMode.right);\r\n      TEXT_COUNTER.setType(TextType.dynamic);\r\n    },\r\n\r\n    update(\r\n      delta,\r\n      {\r\n        recipes,\r\n        foodTex,\r\n        whiteSmokeList,\r\n        smokeAnimation,\r\n        stateTime,\r\n        genderNewRecipeAmount,\r\n      },\r\n      { batch, camera, width, height, font }\r\n    ) {\r\n      if (genderNewRecipeAmount) {\r\n        genderNewRecipeAmount = false;\r\n        TEXT_AMOUNT1 = numberFont.setNewText(width);\r\n        TEXT_AMOUNT1.setAlignMode(AlignMode.left);\r\n        TEXT_AMOUNT2 = numberFont.setNewText(width);\r\n        TEXT_AMOUNT2.setAlignMode(AlignMode.left);\r\n        TEXT_AMOUNT3 = numberFont.setNewText(width);\r\n        TEXT_AMOUNT3.setAlignMode(AlignMode.left);\r\n        TEXT_AMOUNT4 = numberFont.setNewText(width);\r\n        TEXT_AMOUNT4.setAlignMode(AlignMode.left);\r\n        TEXT_LIST = [TEXT_AMOUNT1, TEXT_AMOUNT2, TEXT_AMOUNT3, TEXT_AMOUNT4];\r\n      }\r\n\r\n      batch.setProjection(camera.combined);\r\n      batch.begin();\r\n      for (let i = 0; i < recipes.length; i++) {\r\n        let image;\r\n        for (let j = 0; j < foodTex.length; j++) {\r\n          if (foodTex[j].index === recipes[i].type) {\r\n            image = foodTex[j].image;\r\n          }\r\n        }\r\n        batch.setColor(1, 1, 1, 1);\r\n        image.draw(\r\n          batch,\r\n          recipePositionInfos[i].x,\r\n          recipePositionInfos[i].y,\r\n          FOOD_WIDTH,\r\n          FOOD_HEIGHT\r\n        );\r\n      }\r\n      for (let i = 0; i < 4; i++) {\r\n        batch.setColor(0, 0, 0, 1);\r\n        TEXT_LIST[i].draw(\r\n          batch,\r\n          `/ ${recipes[i].amount}`,\r\n          recipePositionInfos[i].x * 0.97 + FOOD_WIDTH / 2 + width * 0.005,\r\n          height * 0.06,\r\n          width / 20\r\n        );\r\n        TEXT_COUNTER.draw(\r\n          batch,\r\n          `${recipes[i].counter}`,\r\n          recipePositionInfos[i].x * 0.98 +\r\n            FOOD_WIDTH / 2 +\r\n            width * 0.0003 -\r\n            width * 0.01,\r\n          height * 0.06,\r\n          width / 20\r\n        );\r\n        batch.setColor(1, 1, 1, 1);\r\n      }\r\n      batch.end();\r\n    },\r\n  };\r\n};\r\n\r\nexport default createRecipeRenderSystem;\r\n","const createTrayCollideFoodSystem = () => {\r\n  return {\r\n    update(delta, worldState, { batch, camera, width, height }) {\r\n      const {\r\n        recipes,\r\n        trayState,\r\n        foods,\r\n        collection,\r\n        stateTime,\r\n        life,\r\n        whiteSmokeList,\r\n      } = worldState;\r\n\r\n      for (let i = 0; i < foods.length; i++) {\r\n        if (\r\n          foods[i].x > trayState.x - trayState.width / 2 &&\r\n          foods[i].x < trayState.x + trayState.width / 2 &&\r\n          foods[i].y >\r\n            // trayState.y - trayState.height - trayState.offsetCheckY &&\r\n            trayState.y - trayState.height &&\r\n          foods[i].y < trayState.y + trayState.height &&\r\n          stateTime > foods[i].upTime\r\n        ) {\r\n          for (let j = 0; j < recipes.length; j++) {\r\n            if (foods[i].type === recipes[j].type && !worldState.correctCatch) {\r\n              worldState.correctCatch = true;\r\n              if (recipes[j].counter === 0) {\r\n                // only push that kind of food one time to collection\r\n                // trayState.offsetCheckY += trayState.height * 0.7; // update offsetY\r\n                collection.push({\r\n                  type: foods[i].type,\r\n                  stateTimeSmoke: 0,\r\n                  stateTimeFood: 0,\r\n                  startSmoke: true,\r\n                });\r\n\r\n                whiteSmokeList.push({\r\n                  inPot: true,\r\n\r\n                  stateTime: 0,\r\n                  // width: trayState.width,\r\n                  // height: trayState.height,\r\n                });\r\n              } else {\r\n                whiteSmokeList.push({\r\n                  x: foods[i].x,\r\n                  y: foods[i].y,\r\n                  stateTime: 0,\r\n                  scale: foods[i].oriScale,\r\n                });\r\n              }\r\n\r\n              recipes[j].counter = Math.min(\r\n                recipes[j].amount,\r\n                (recipes[j].counter += 1)\r\n              );\r\n\r\n              if (recipes[j].counter === recipes[j].amount) {\r\n                recipes[j].finished = true;\r\n              }\r\n              //   console.log(\"hit\");\r\n              foods.splice(i, 1);\r\n              break; // if there is any one match => break the loop\r\n            } else if (foods[i].type !== recipes[j].type) {\r\n              //   console.log(\"miss\");\r\n            }\r\n\r\n            //wrong catch\r\n            if (j === recipes.length - 1) {\r\n              worldState.comboCounter = 0;\r\n              worldState.comboCheckIndex.length = 0;\r\n              life[worldState.lifeIndex].red = false;\r\n              worldState.lifeIndex = Math.max(0, (worldState.lifeIndex -= 1));\r\n              worldState.stunScreen.check = true;\r\n              foods.splice(i, 1);\r\n            }\r\n          }\r\n        }\r\n      }\r\n    },\r\n  };\r\n};\r\n\r\nexport default createTrayCollideFoodSystem;\r\n","const createRedSmokeRenderSystem = () => {\r\n  let SMOKE_WIDTH, SMOKE_HEIGHT;\r\n  return {\r\n    init({ foodTex }, { width, height }) {\r\n      SMOKE_WIDTH = width / 2;\r\n      SMOKE_HEIGHT = (SMOKE_WIDTH * 3) / 5;\r\n    },\r\n\r\n    update(delta, worldState, { batch, camera, width, height }) {\r\n      const { redSmokeList, smokeAnimation, emptyLife } = worldState;\r\n      batch.setProjection(camera.combined);\r\n      batch.begin();\r\n      batch.setColor(1, 0, 0, 1);\r\n      for (let i = redSmokeList.length - 1; i >= 0; i--) {\r\n        redSmokeList[i].stateTime += delta;\r\n        smokeAnimation.animation\r\n          .getKeyFrame(redSmokeList[i].stateTime, 1)\r\n          .draw(\r\n            batch,\r\n            redSmokeList[i].x - SMOKE_WIDTH / 2.5,\r\n            redSmokeList[i].y - SMOKE_HEIGHT / 3,\r\n            SMOKE_WIDTH,\r\n            SMOKE_HEIGHT,\r\n            SMOKE_WIDTH / 2,\r\n            SMOKE_HEIGHT / 2,\r\n            0,\r\n            redSmokeList[i].scale,\r\n            redSmokeList[i].scale\r\n          );\r\n        if (\r\n          redSmokeList[i].stateTime >\r\n          smokeAnimation.duration * smokeAnimation.frameLength\r\n        ) {\r\n          if (emptyLife && i === redSmokeList.length - 1) {\r\n            worldState.gameOver = true;\r\n          }\r\n          redSmokeList.splice(i, 1);\r\n        }\r\n      }\r\n      batch.end();\r\n    },\r\n  };\r\n};\r\n\r\nexport default createRedSmokeRenderSystem;\r\n","const createCollectionRenderSystem = () => {\r\n  let COLLECTION_WIDTH, COLLECTION_HEIGHT;\r\n  // let SMOKE_WIDTH, SMOKE_HEIGHT;\r\n  let foodInPotTex;\r\n  let foodPosition;\r\n  return {\r\n    init({ trayState }, { width, assets }) {\r\n      COLLECTION_WIDTH = width / 7;\r\n      COLLECTION_HEIGHT = (COLLECTION_WIDTH * 255) / 400;\r\n\r\n      // SMOKE_WIDTH = COLLECTION_WIDTH * 4;\r\n      // SMOKE_HEIGHT = COLLECTION_HEIGHT * 4;\r\n    },\r\n    update(\r\n      delta,\r\n      { trayState, foodAnimation, smokeAnimation, collection, foodInPot },\r\n      { batch, width, height, camera }\r\n    ) {\r\n      foodPosition = [\r\n        {\r\n          x: trayState.x - COLLECTION_WIDTH / 2,\r\n          y: trayState.y - trayState.height / 1.4,\r\n        },\r\n        {\r\n          x: trayState.x - trayState.width / 2.2,\r\n          y: trayState.y - trayState.height / 1.4,\r\n        },\r\n        {\r\n          x: trayState.x + trayState.width / 2.4 - COLLECTION_WIDTH,\r\n          y: trayState.y - trayState.height / 1.4,\r\n        },\r\n        {\r\n          x: trayState.x - COLLECTION_WIDTH / 2,\r\n          y: trayState.y - trayState.height * 1.2,\r\n        },\r\n      ];\r\n      batch.setProjection(camera.combined);\r\n      batch.begin();\r\n      batch.setColor(1, 1, 1, 1);\r\n      for (let i = collection.length - 1; i >= 0; i--) {\r\n        for (let j = 0; j < foodInPot.length; j++) {\r\n          if (collection[i].type === foodInPot[j].index) {\r\n            foodInPotTex = foodInPot[j];\r\n          }\r\n        }\r\n\r\n        foodInPotTex.image.draw(\r\n          batch,\r\n          foodPosition[i].x,\r\n          foodPosition[i].y,\r\n          COLLECTION_WIDTH,\r\n          COLLECTION_HEIGHT\r\n        );\r\n      }\r\n\r\n      batch.end();\r\n    },\r\n  };\r\n};\r\n\r\nexport default createCollectionRenderSystem;\r\n","const createLifeRenderSystem = () => {\r\n  let redLife,\r\n    blackLife,\r\n    LIFE_WIDTH,\r\n    LIFE_HEIGHT,\r\n    LIFE_START_X,\r\n    LIFE_START_Y,\r\n    LIFE_MARGIN_RIGHT;\r\n  let tex;\r\n\r\n  return {\r\n    init({ trayState }, { width, assets, height }) {\r\n      const atlas = assets.foodInPot;\r\n\r\n      redLife = atlas.findRegion(\"tim_do\", -1);\r\n      blackLife = atlas.findRegion(\"tim_den\", -1);\r\n\r\n      LIFE_WIDTH = width / 12;\r\n      LIFE_HEIGHT = (LIFE_WIDTH * redLife.height) / redLife.width;\r\n\r\n      LIFE_START_X = width * 0.3;\r\n      LIFE_START_Y = height / 9;\r\n\r\n      LIFE_MARGIN_RIGHT = width / 9;\r\n    },\r\n    update(delta, { life }, { batch, width, height, camera }) {\r\n      batch.setProjection(camera.combined);\r\n      batch.begin();\r\n      batch.setColor(1, 1, 1, 1);\r\n\r\n      for (let i = 0; i < life.length; i++) {\r\n        if (life[i].red) {\r\n          tex = redLife;\r\n        } else {\r\n          tex = blackLife;\r\n        }\r\n        tex.draw(\r\n          batch,\r\n          LIFE_START_X + LIFE_MARGIN_RIGHT * i,\r\n          LIFE_START_Y,\r\n          LIFE_WIDTH,\r\n          LIFE_HEIGHT\r\n        );\r\n      }\r\n\r\n      batch.end();\r\n    },\r\n  };\r\n};\r\n\r\nexport default createLifeRenderSystem;\r\n","import { fillRect } from \"gdxjs\";\r\n\r\nconst createStunScreenRenderSystem = () => {\r\n  return {\r\n    update(delta, { stunScreen }, { width, height, batch, camera, whiteTex }) {\r\n      if (stunScreen.check) {\r\n        batch.setProjection(camera.combined);\r\n        batch.begin();\r\n        batch.setColor(1, 0, 0, stunScreen.opacity);\r\n        fillRect(batch, whiteTex, 0, 0, width, height);\r\n        batch.end();\r\n        stunScreen.opacity -= delta * 4;\r\n        if (stunScreen.opacity <= 0) {\r\n          stunScreen.opacity = 1;\r\n          stunScreen.check = false;\r\n        }\r\n      }\r\n    },\r\n  };\r\n};\r\n\r\nexport default createStunScreenRenderSystem;\r\n","import { AlignMode, TextType } from \"../utils/loadFontFile\";\r\n\r\nconst createScoreRenderSystem = () => {\r\n  let scoreText;\r\n  let scoreTexTure;\r\n  let ST_WIDTH, ST_HEIGHT;\r\n  return {\r\n    init(worldState, { font, width, assets }) {\r\n      const { numberFont } = font;\r\n      scoreText = numberFont.setNewText(width);\r\n\r\n      const atlas = assets.newAssets;\r\n\r\n      scoreTexTure = atlas.findRegion(\"Score\", -1);\r\n\r\n      ST_WIDTH = width / 6;\r\n      ST_HEIGHT = (ST_WIDTH * scoreTexTure.height) / scoreTexTure.width;\r\n    },\r\n    update(delta, { score }, { batch, camera, width, height }) {\r\n      batch.setProjection(camera.combined);\r\n      batch.begin();\r\n      batch.setColor(0, 0, 0, 1);\r\n\r\n      scoreTexTure.draw(\r\n        batch,\r\n        width * 0.97 - ST_WIDTH,\r\n        height * 0.11,\r\n        ST_WIDTH,\r\n        ST_HEIGHT\r\n      );\r\n\r\n      scoreText.setAlignMode(AlignMode.right);\r\n      scoreText.setType(TextType.dynamic);\r\n      // scoreText.setFixedGlyphWidth(width);\r\n      scoreText.draw(\r\n        batch,\r\n        `${score}`,\r\n        width * 0.975,\r\n        height * 0.12,\r\n        width / 8\r\n      );\r\n\r\n      batch.end();\r\n    },\r\n  };\r\n};\r\n\r\nexport default createScoreRenderSystem;\r\n","import analytics from \"../../../utils/analytics\";\r\n\r\nconst checkAdditionScore = (comboCounter) => {\r\n  if (comboCounter === 10) {\r\n    analytics.track(\"combo\", { comboCounter });\r\n    return 100;\r\n  } else if (comboCounter === 30) {\r\n    analytics.track(\"combo\", { comboCounter });\r\n    return 300;\r\n  } else if (comboCounter >= 50 && comboCounter % 10 === 0) {\r\n    analytics.track(\"combo\", { comboCounter: 50 });\r\n    return 500;\r\n  } else {\r\n    return 10;\r\n  }\r\n};\r\n\r\nconst createScoreCalcSystem = () => {\r\n  return {\r\n    update(delta, worldState, extra) {\r\n      if (worldState.correctCatch) {\r\n        worldState.correctCatch = false;\r\n        worldState.comboCounter += 1;\r\n        const addScore = checkAdditionScore(worldState.comboCounter);\r\n        worldState.score += addScore;\r\n      }\r\n    },\r\n  };\r\n};\r\n\r\nexport default createScoreCalcSystem;\r\n","const createWhiteSmokeRenderSystem = () => {\r\n  let SMOKE_WIDTH, SMOKE_HEIGHT;\r\n  return {\r\n    init({ foodTex }, { width, height }) {\r\n      SMOKE_WIDTH = width / 2;\r\n      SMOKE_HEIGHT = (SMOKE_WIDTH * 3) / 5;\r\n    },\r\n\r\n    update(delta, worldState, { batch, camera, width, height }) {\r\n      const { whiteSmokeList, smokeAnimation, trayState } = worldState;\r\n      batch.setProjection(camera.combined);\r\n      batch.begin();\r\n      batch.setColor(1, 1, 1, 1);\r\n      for (let i = whiteSmokeList.length - 1; i >= 0; i--) {\r\n        if (whiteSmokeList[i].inPot) {\r\n          whiteSmokeList[i].stateTime += delta;\r\n          smokeAnimation.animation\r\n            .getKeyFrame(whiteSmokeList[i].stateTime, 1)\r\n            .draw(\r\n              batch,\r\n              trayState.x - trayState.width * 0.8,\r\n              trayState.y - trayState.height * 1.6,\r\n              SMOKE_WIDTH,\r\n              SMOKE_HEIGHT,\r\n              SMOKE_WIDTH / 2,\r\n              SMOKE_HEIGHT / 2,\r\n              0,\r\n              1.3,\r\n              1.3\r\n            );\r\n        } else {\r\n          whiteSmokeList[i].stateTime += delta;\r\n          smokeAnimation.animation\r\n            .getKeyFrame(whiteSmokeList[i].stateTime, 1)\r\n            .draw(\r\n              batch,\r\n              whiteSmokeList[i].x - SMOKE_WIDTH / 2.5,\r\n              whiteSmokeList[i].y - SMOKE_HEIGHT / 3,\r\n              SMOKE_WIDTH,\r\n              SMOKE_HEIGHT,\r\n              SMOKE_WIDTH / 2,\r\n              SMOKE_HEIGHT / 2,\r\n              0,\r\n              whiteSmokeList[i].scale,\r\n              whiteSmokeList[i].scale\r\n            );\r\n        }\r\n        if (\r\n          whiteSmokeList[i].stateTime >\r\n          smokeAnimation.duration * smokeAnimation.frameLength\r\n        ) {\r\n          whiteSmokeList.splice(i, 1);\r\n        }\r\n      }\r\n      batch.end();\r\n    },\r\n  };\r\n};\r\n\r\nexport default createWhiteSmokeRenderSystem;\r\n","const pushToComboList = (\r\n  comboList,\r\n  texture,\r\n  indexCombo,\r\n  comboSize,\r\n  width,\r\n  height\r\n) => {\r\n  comboList.push({\r\n    tex: texture,\r\n    x: Math.random() > 0.5 ? (width * 1.5) / 4 : (width * 2.5) / 4,\r\n    y:\r\n      Math.random() * ((height * 2) / 4 - (height * 2.5) / 4) +\r\n      (height * 2.5) / 4,\r\n    width: comboSize[indexCombo].width,\r\n    height: comboSize[indexCombo].height,\r\n    infos: { stateTime: 0, scale: 0, opacity: 0 },\r\n  });\r\n};\r\n\r\nconst createBannerComboRenderSystem = () => {\r\n  let comboList = [];\r\n  let combo1, combo2, combo3;\r\n  let comboSize = [];\r\n\r\n  return {\r\n    init(worldState, { assets, width, height }) {\r\n      const atlas = assets.newAssets;\r\n\r\n      combo1 = atlas.findRegion(\"combo1\", -1);\r\n      combo2 = atlas.findRegion(\"combo2\", -1);\r\n      combo3 = atlas.findRegion(\"combo3\", -1);\r\n\r\n      const C1_WIDTH = width / 3;\r\n      const C1_HEIGHT = (C1_WIDTH * combo1.height) / combo1.width;\r\n\r\n      const C2_WIDTH = width / 2.5;\r\n      const C2_HEIGHT = (C2_WIDTH * combo2.height) / combo2.width;\r\n\r\n      const C3_WIDTH = width / 2;\r\n      const C3_HEIGHT = (C3_WIDTH * combo3.height) / combo3.width;\r\n      comboSize = [\r\n        { width: C1_WIDTH, height: C1_HEIGHT },\r\n        { width: C2_WIDTH, height: C2_HEIGHT },\r\n        { width: C3_WIDTH, height: C3_HEIGHT },\r\n      ];\r\n    },\r\n    update(delta, worldState, { batch, camera, width, height }) {\r\n      const { comboCounter, comboState } = worldState;\r\n      if (\r\n        comboCounter === 10 &&\r\n        worldState.comboCheckIndex[comboCounter] === undefined\r\n      ) {\r\n        worldState.comboCheckIndex[comboCounter] = true;\r\n        pushToComboList(comboList, combo1, 0, comboSize, width, height);\r\n      } else if (\r\n        comboCounter === 30 &&\r\n        worldState.comboCheckIndex[comboCounter] === undefined\r\n      ) {\r\n        worldState.comboCheckIndex[comboCounter] = true;\r\n        pushToComboList(comboList, combo2, 1, comboSize, width, height);\r\n      } else if (\r\n        comboCounter >= 50 &&\r\n        comboCounter % 10 === 0 &&\r\n        worldState.comboCheckIndex[comboCounter] === undefined\r\n      ) {\r\n        worldState.comboCheckIndex[comboCounter] = true;\r\n        pushToComboList(comboList, combo3, 2, comboSize, width, height);\r\n      }\r\n\r\n      batch.setProjection(camera.combined);\r\n      batch.begin();\r\n      for (let i = comboList.length - 1; i >= 0; i--) {\r\n        batch.setColor(1, 1, 1, comboList[i].infos.opacity);\r\n        comboList[i].tex.draw(\r\n          batch,\r\n          comboList[i].x - comboList[i].width / 2,\r\n          comboList[i].y,\r\n          comboList[i].width,\r\n          comboList[i].height,\r\n          comboList[i].width / 2,\r\n          comboList[i].height / 2,\r\n          0,\r\n          comboList[i].infos.scale,\r\n          comboList[i].infos.scale\r\n        );\r\n\r\n        if (\r\n          comboList[i].infos.scale < 1 &&\r\n          comboList[i].infos.stateTime === 0\r\n        ) {\r\n          comboList[i].infos.scale = Math.min(\r\n            (comboList[i].infos.scale += delta * comboState.scaleSpeed),\r\n            1\r\n          );\r\n          comboList[i].infos.opacity = Math.min(\r\n            (comboList[i].infos.opacity += delta * comboState.opacitySpeed),\r\n            1\r\n          );\r\n        } else {\r\n          comboList[i].infos.stateTime += delta;\r\n          if (comboList[i].infos.stateTime > comboState.delayTime) {\r\n            comboList[i].infos.scale = Math.max(\r\n              (comboList[i].infos.scale -= delta * comboState.scaleSpeed),\r\n              0\r\n            );\r\n            comboList[i].infos.opacity = Math.max(\r\n              (comboList[i].infos.opacity -= delta * comboState.opacitySpeed),\r\n              0\r\n            );\r\n\r\n            if (comboList[i].infos.scale === 0) {\r\n              comboList.splice(i, 1);\r\n            }\r\n          }\r\n        }\r\n      }\r\n      batch.end();\r\n    },\r\n  };\r\n};\r\n\r\nexport default createBannerComboRenderSystem;\r\n","import axios from \"../../utils/axios\";\r\nimport { createViewportAwareInputHandler, fillRect, Vector2 } from \"gdxjs\";\r\nimport createStartScreenSystem from \"./StartScreen\";\r\nimport { checkPointInsideRect } from \"./utils/coordUtils\";\r\n\r\nimport MurmurHash from \"imurmurhash\";\r\nimport analytics from \"../../utils/analytics\";\r\n\r\nconst MAGIC = `blah@gamefox`;\r\n\r\nconst getHeightBaseOnWidth = (texture, textWidth) => {\r\n  return [textWidth, (textWidth * texture.height) / texture.width];\r\n};\r\n\r\nconst censorEmail = (email) => {\r\n  if (email === undefined) {\r\n    return;\r\n  }\r\n  let tmp = email.split(\"@\");\r\n  const nameLimitter = 7;\r\n  const domainLimitter = 6;\r\n  const lastChar = tmp[0].slice(-1);\r\n  if (tmp[0].length > nameLimitter) {\r\n    tmp[0] = tmp[0].slice(0, nameLimitter);\r\n  }\r\n\r\n  if (email.length > 13) {\r\n    if (tmp[1].length > domainLimitter) {\r\n      tmp[1] = tmp[1].slice(0, domainLimitter);\r\n      tmp[1] += \"..\";\r\n    }\r\n  }\r\n\r\n  let numOfDisplay = Math.max(1, Math.floor(tmp[0].length / 3));\r\n  let resultString = \"\";\r\n  for (let i = 0; i < numOfDisplay; i++) {\r\n    resultString += tmp[0].charAt(i);\r\n  }\r\n  return resultString + \"*\".repeat(tmp[0].length - 2) + lastChar + \"@\" + tmp[1];\r\n};\r\n\r\nconst createLeaderBoardSystem = (Game) => {\r\n  const {\r\n    canvas,\r\n    viewport,\r\n    width,\r\n    height,\r\n    camera,\r\n    batch,\r\n    assets,\r\n    score,\r\n    whiteTex,\r\n    font,\r\n  } = Game;\r\n\r\n  const goToStartScreen = async () => {\r\n    Game.setCurrentScreen(await createStartScreenSystem(Game));\r\n  };\r\n\r\n  const inputHandler = createViewportAwareInputHandler(canvas, viewport);\r\n\r\n  const bg = assets.backGround;\r\n  const atlas = assets.leaderBoard;\r\n  const logo = atlas.findRegion(\"logo-2\", -1);\r\n  const header = atlas.findRegion(\"header\", -1);\r\n  const footer = atlas.findRegion(\"footer\", -1);\r\n  const yourScore = atlas.findRegion(\"your-score\", -1);\r\n  const no1 = atlas.findRegion(\"no1\", -1);\r\n  const no2 = atlas.findRegion(\"no2\", -1);\r\n  const retry = atlas.findRegion(\"thu-lai\", -1);\r\n\r\n  const [LOGO_WIDTH, LOGO_HEIGHT] = getHeightBaseOnWidth(logo, width / 4.1);\r\n  const [HEADER_WIDTH, HEADER_HEIGHT] = getHeightBaseOnWidth(header, width / 2);\r\n  const [FOOTER_WIDTH, FOOTER_HEIGHt] = getHeightBaseOnWidth(\r\n    footer,\r\n    width * 0.9\r\n  );\r\n  const [S_WIDTH, S_HIEGHT] = getHeightBaseOnWidth(yourScore, width / 2);\r\n  const [NO1_WIDTH, NO1_HEIGHT] = getHeightBaseOnWidth(no1, width / 8);\r\n  const [NO2_WIDTH, NO2_HEIGHT] = getHeightBaseOnWidth(no2, width / 8);\r\n  const [BUTTON_WIDTH, BUTTON_HEIGHT] = getHeightBaseOnWidth(retry, width / 3);\r\n\r\n  const BUTTON_RECTS = [\r\n    width / 2 - BUTTON_WIDTH / 2,\r\n    (height * 2.2) / 3,\r\n    BUTTON_WIDTH,\r\n    BUTTON_HEIGHT,\r\n  ];\r\n\r\n  const medalList = [\r\n    { texture: no1, width: NO1_WIDTH, height: NO1_HEIGHT },\r\n    { texture: no2, width: NO2_WIDTH, height: NO2_HEIGHT },\r\n  ];\r\n\r\n  const CONTAINER_MARGIN = width / 17;\r\n  const CONTAINER_WIDTH = width - CONTAINER_MARGIN * 2;\r\n  const CONTAINER_HEIGHT = height - CONTAINER_MARGIN * 2;\r\n\r\n  let players = [];\r\n  const getData = async () => {\r\n    try {\r\n      analytics.track(\"gameOver\", { score });\r\n      const res = await axios.post(\r\n        \"/leader-board\",\r\n        { score, sig: MurmurHash().hash(`${score};${MAGIC}`).result() },\r\n        {\r\n          headers: { \"x-access-token\": localStorage.getItem(\"@Token\") },\r\n        }\r\n      );\r\n      players = res.data;\r\n    } catch (e) {}\r\n  };\r\n  getData();\r\n\r\n  let coord = new Vector2();\r\n  inputHandler.addEventListener(\"touchStart\", () => {\r\n    coord.setVector(inputHandler.getTouchedWorldCoord());\r\n    if (checkPointInsideRect(coord, BUTTON_RECTS)) {\r\n      Game.score = 0;\r\n      goToStartScreen();\r\n    }\r\n  });\r\n\r\n  const { numberFont, textFont } = font;\r\n  const userScore = numberFont.setNewText(width);\r\n  const scoreSize = width / 5.3;\r\n\r\n  const RESULT_START_X = width / 3;\r\n  const NAME_START_Y = (height * 0.62) / 3;\r\n  const SCORE_START_Y = (height * 0.69) / 3;\r\n\r\n  const userNameText = [\r\n    textFont.setNewText(width),\r\n    textFont.setNewText(width),\r\n    textFont.setNewText(width),\r\n  ];\r\n  const userScoreText = [\r\n    numberFont.setNewText(width),\r\n    numberFont.setNewText(width),\r\n    numberFont.setNewText(width),\r\n  ];\r\n  const userNameSize = width / 14;\r\n  const userScoreSize = width / 10;\r\n  let loopLength = 0; // top 3 player ll be display\r\n\r\n  let gotData = false;\r\n  const update = (delta) => {\r\n    if (players.length > 0 && !gotData) {\r\n      // console.log(players);\r\n      gotData = true;\r\n      for (let i = 0; i < players.length; i++) {\r\n        players[i].email = censorEmail(players[i].email);\r\n        players[i].username = players[i].username || \"\";\r\n        players[i].username =\r\n          players[i].username.length > 12\r\n            ? players[i].username.slice(0, 12) + \"..\"\r\n            : players[i].username;\r\n      }\r\n    }\r\n\r\n    batch.setProjection(camera.combined);\r\n    batch.begin();\r\n    fillRect(batch, bg, 0, 0, width, height);\r\n    batch.setColor(0, 0, 0, 1);\r\n    fillRect(\r\n      batch,\r\n      whiteTex,\r\n      width / 2 - (CONTAINER_WIDTH + width / 100) / 2,\r\n      height / 2 - (CONTAINER_HEIGHT + width / 100) / 2,\r\n      CONTAINER_WIDTH + width / 100,\r\n      CONTAINER_HEIGHT + width / 100\r\n    );\r\n    batch.setColor(255 / 255, 246 / 255, 234 / 255, 1);\r\n    fillRect(\r\n      batch,\r\n      whiteTex,\r\n      width / 2 - CONTAINER_WIDTH / 2,\r\n      height / 2 - CONTAINER_HEIGHT / 2,\r\n      CONTAINER_WIDTH,\r\n      CONTAINER_HEIGHT\r\n    );\r\n    batch.setColor(1, 1, 1, 1);\r\n    logo.draw(batch, (width * 1) / 12, height / 50, LOGO_WIDTH, LOGO_HEIGHT);\r\n    header.draw(\r\n      batch,\r\n      (width * 1.1) / 3,\r\n      height / 25,\r\n      HEADER_WIDTH,\r\n      HEADER_HEIGHT\r\n    );\r\n    yourScore.draw(batch, width / 3, (height * 1.7) / 3, S_WIDTH, S_HIEGHT);\r\n    batch.setColor(0, 0, 0, 1);\r\n    userScore.draw(\r\n      batch,\r\n      `${Game.score}`,\r\n      width / 3,\r\n      (height * 1.79) / 3,\r\n      scoreSize\r\n    );\r\n    batch.setColor(1, 1, 1, 1);\r\n    retry.draw(\r\n      batch,\r\n      BUTTON_RECTS[0],\r\n      BUTTON_RECTS[1],\r\n      BUTTON_RECTS[2],\r\n      BUTTON_RECTS[3]\r\n    );\r\n    footer.draw(\r\n      batch,\r\n      width / 2 - FOOTER_WIDTH / 2,\r\n      height - FOOTER_HEIGHt + height / 200,\r\n      FOOTER_WIDTH,\r\n      FOOTER_HEIGHt\r\n    );\r\n    if (players.length > 0) {\r\n      loopLength = players.length > 3 ? 3 : players.length;\r\n      for (let i = 0; i < loopLength; i++) {\r\n        batch.setColor(0, 0, 0, 1);\r\n        userNameText[i].draw(\r\n          batch,\r\n          players[i].username,\r\n          RESULT_START_X,\r\n          NAME_START_Y + (i * height) / 9,\r\n          userNameSize\r\n        );\r\n        batch.setColor(255 / 255, 115 / 255, 23 / 255, 1);\r\n        userScoreText[i].draw(\r\n          batch,\r\n          players[i].score.toString(),\r\n          RESULT_START_X,\r\n          SCORE_START_Y + (i * height) / 9,\r\n          userScoreSize\r\n        );\r\n        if (i === 0 || i === 1) {\r\n          batch.setColor(1, 1, 1, 1);\r\n          medalList[i].texture.draw(\r\n            batch,\r\n            (width * 0.55) / 3,\r\n            (height * 0.6) / 3 + (height / 8.6) * i,\r\n            medalList[i].width,\r\n            medalList[i].height\r\n          );\r\n        }\r\n      }\r\n    }\r\n    batch.setColor(1, 1, 1, 1);\r\n\r\n    batch.end();\r\n  };\r\n  return {\r\n    update,\r\n    destroy() {\r\n      inputHandler.cleanup();\r\n    },\r\n  };\r\n};\r\nexport default createLeaderBoardSystem;\r\n","// import ReactDOM from \"react-dom\";\r\n// import React from \"react\";\r\n// import LeaderBoard from \"../LeaderBoard\";\r\n// import axios from \"../../utils/axios\";\r\n\r\nimport { createViewportAwareInputHandler, Vector2 } from \"gdxjs\";\r\nimport createWorld from \"./createWorld\";\r\nimport {\r\n  getFoodTexture,\r\n  getFoodAnimation,\r\n  getFoodInPotTexture,\r\n} from \"./utils/getFood\";\r\nimport createBackGroundRenderSystem from \"./systems/BgRenderSystem\";\r\nimport createTrayRenderSystem from \"./systems/TrayRenderSystem\";\r\nimport createTrayPositionSystem from \"./systems/TrayPositionSystem\";\r\nimport createInputHandlerGameScreenSystem from \"./systems/InputHandlerGameScreenSystem\";\r\nimport createFoodSpawnSystem from \"./systems/FoodSpawnSystem\";\r\nimport createFoodPositionSystem from \"./systems/FoodPositionSystem\";\r\nimport createFoodRenderSystem from \"./systems/FoodRenderSystem\";\r\nimport createRecipeRenderSystem from \"./systems/RecipeRenderSystem\";\r\nimport createTrayCollideFoodSystem from \"./systems/TrayCollideFoodSystem\";\r\nimport createRedSmokeRenderSystem from \"./systems/RedSmokeRenderSystem\";\r\nimport createCollectionRenderSystem from \"./systems/CollectionRenderSystem\";\r\nimport createLifeRenderSystem from \"./systems/LifeRenderSystem\";\r\nimport createStunScreenRenderSystem from \"./systems/StunScreenRenderSystem\";\r\nimport createScoreRenderSystem from \"./systems/ScoreRenderSystem\";\r\nimport createScoreCalcSystem from \"./systems/ScoreCalcSystem\";\r\nimport createWhiteSmokeRenderSystem from \"./systems/WhiteSmokeRenderSystem\";\r\nimport createBannerComboRenderSystem from \"./systems/BannerComboRenderSystem\";\r\nimport createLeaderBoardSystem from \"./LeaderBoardScreen\";\r\n\r\n// let shouldShowLeaderBoard = true;\r\n// const showLeaderBoard = async (score, onRestart) => {\r\n//   if (!shouldShowLeaderBoard) {\r\n//     return;\r\n//   }\r\n//   shouldShowLeaderBoard = false;\r\n//   let players = [];\r\n//   try {\r\n//     const res = await axios.post(\r\n//       \"/leader-board\",\r\n//       { score },\r\n//       {\r\n//         headers: { \"x-access-token\": localStorage.getItem(\"@Token\") },\r\n//       }\r\n//     );\r\n//     players = res.data;\r\n//   } catch (e) {}\r\n//   const wrapper = document.createElement(\"div\");\r\n//   wrapper.setAttribute(\"id\", \"leader-board-wrapper\");\r\n//   document.body.appendChild(wrapper);\r\n//   ReactDOM.render(\r\n//     <LeaderBoard\r\n//       players={players}\r\n//       score={score}\r\n//       onClickRestart={() => {\r\n//         onRestart();\r\n//         shouldShowLeaderBoard = true;\r\n//         document.body.removeChild(wrapper);\r\n//       }}\r\n//     />,\r\n//     wrapper\r\n//   );\r\n// };\r\n\r\nconst createGameScreenSystem = (Game) => {\r\n  const {\r\n    width,\r\n    height,\r\n    canvas,\r\n    gl,\r\n    batch,\r\n    camera,\r\n    whiteTex,\r\n    assets,\r\n    viewport,\r\n    font,\r\n  } = Game;\r\n\r\n  const inputHandler = createViewportAwareInputHandler(canvas, viewport);\r\n  const TRAY_INITIAL_Y = (height * 3.1) / 4;\r\n\r\n  const foodTex = getFoodTexture(assets.animAssets);\r\n  const recipes = [];\r\n\r\n  const shuffle = (array) => {\r\n    array.sort(() => Math.random() - 0.5);\r\n  };\r\n\r\n  const genderNewRecipe = () => {\r\n    shuffle(foodTex);\r\n    recipes.length = 0;\r\n    for (let i = 0; i < 4; i++) {\r\n      recipes.push({\r\n        type: foodTex[i].index,\r\n        // amount: Math.floor(Math.random() * (7 - 1) + 1),\r\n        amount: Math.floor(Math.random() * (6 - 4) + 4),\r\n        finished: false,\r\n        aniStateTime: 0,\r\n        counter: 0,\r\n      });\r\n    }\r\n  };\r\n\r\n  genderNewRecipe();\r\n\r\n  const worldState = {\r\n    score: 0,\r\n    comboCounter: 0,\r\n    correctCatch: false,\r\n    genderNewRecipeAmount: true,\r\n    stateTime: 0,\r\n    gameOver: false,\r\n    emptyLife: false,\r\n    life: [{ red: true }, { red: true }, { red: true }],\r\n    lifeIndex: 2, // life checking index\r\n    stunScreen: { check: false, opacity: 1 },\r\n    trayState: {\r\n      x: width / 2,\r\n      y: TRAY_INITIAL_Y,\r\n      position: new Vector2(width / 2, TRAY_INITIAL_Y),\r\n      target: new Vector2(width / 2, TRAY_INITIAL_Y),\r\n      moveLeft: false,\r\n      moveRight: false,\r\n      speed: width * 2.5,\r\n      // offsetCheckY: 0, //\r\n    },\r\n    difficulty: 1, //\r\n    collection: [], //\r\n    collectionFinished: [],\r\n    recipes: recipes, //\r\n    foods: [], //\r\n    foodTex: foodTex,\r\n    // foodAnimation: getFoodAnimation(assets.animAssets).foodAnimation,\r\n    smokeAnimation: getFoodAnimation(assets.animAssets).smokeAnimation,\r\n    foodInPot: getFoodInPotTexture(assets.foodInPot),\r\n    whiteSmokeList: [], // contain position of ws when collection have that kind of food\r\n    redSmokeList: [], // contain position of rs whenever red smoke event triggered\r\n    comboState: {\r\n      delayTime: 0.5,\r\n      scaleSpeed: (1 - 0) / 0.2,\r\n      opacitySpeed: (1 - 0) / 0.2,\r\n    },\r\n    comboCheckIndex: [],\r\n  };\r\n\r\n  const tray = assets.foodInPot.findRegion(\"hot_pot\", -1);\r\n  const TRAY_WIDTH = width / 3.8;\r\n  const TRAY_HEIGHT = (TRAY_WIDTH * tray.height) / tray.width;\r\n  worldState.trayState.width = TRAY_WIDTH;\r\n  worldState.trayState.height = TRAY_HEIGHT;\r\n\r\n  const extra = {\r\n    canvas,\r\n    width,\r\n    height,\r\n    gl,\r\n    batch,\r\n    camera,\r\n    whiteTex,\r\n    inputHandler,\r\n    assets,\r\n    font,\r\n  };\r\n  const world = createWorld(worldState, extra);\r\n  world.addSystem(createInputHandlerGameScreenSystem());\r\n  world.addSystem(createBackGroundRenderSystem());\r\n  world.addSystem(createTrayPositionSystem());\r\n\r\n  world.addSystem(createFoodSpawnSystem());\r\n  world.addSystem(createFoodPositionSystem());\r\n  world.addSystem(createFoodRenderSystem());\r\n  world.addSystem(createRecipeRenderSystem());\r\n  world.addSystem(createRedSmokeRenderSystem());\r\n  world.addSystem(createCollectionRenderSystem());\r\n  world.addSystem(createLifeRenderSystem());\r\n  world.addSystem(createStunScreenRenderSystem());\r\n  world.addSystem(createTrayCollideFoodSystem());\r\n  world.addSystem(createScoreRenderSystem());\r\n  world.addSystem(createScoreCalcSystem());\r\n  world.addSystem(createTrayRenderSystem());\r\n  world.addSystem(createWhiteSmokeRenderSystem());\r\n  world.addSystem(createBannerComboRenderSystem());\r\n\r\n  let count = 0;\r\n  let countRemainLife = worldState.life.length;\r\n  let oneTimeCheck = true;\r\n\r\n  // const restartGame = async () => {\r\n  //   Game.setCurrentScreen(await createStartScreenSystem(Game));\r\n  // };\r\n  const goToLeaderBoardScreen = async () => {\r\n    Game.setCurrentScreen(await createLeaderBoardSystem(Game));\r\n  };\r\n\r\n  const update = (delta) => {\r\n    if (!worldState.gameOver) {\r\n      // check remaining life\r\n      countRemainLife = worldState.life.length;\r\n      for (let l of worldState.life) {\r\n        if (!l.red) {\r\n          countRemainLife--;\r\n        }\r\n      }\r\n\r\n      if (countRemainLife === 0 && oneTimeCheck) {\r\n        worldState.emptyLife = true;\r\n        oneTimeCheck = false;\r\n        for (let i = 0; i < worldState.foods.length; i++) {\r\n          worldState.redSmokeList.push({\r\n            x: worldState.foods[i].x,\r\n            y: worldState.foods[i].y,\r\n            stateTime: 0,\r\n            scale: worldState.foods[i].oriScale,\r\n          });\r\n        }\r\n        worldState.foods.length = 0;\r\n        worldState.gameOver = true;\r\n      }\r\n\r\n      // check finished current recipe\r\n      count = 0;\r\n      for (let rep of worldState.recipes) {\r\n        if (rep.finished) {\r\n          count++;\r\n        }\r\n      }\r\n\r\n      if (count === worldState.recipes.length) {\r\n        for (let i = 0; i < worldState.foods.length; i++) {\r\n          worldState.redSmokeList.push({\r\n            x: worldState.foods[i].x,\r\n            y: worldState.foods[i].y,\r\n            stateTime: 0,\r\n            scale: worldState.foods[i].oriScale,\r\n          });\r\n        }\r\n\r\n        genderNewRecipe();\r\n        worldState.genderNewRecipeAmount = true;\r\n        worldState.foods.length = 0;\r\n        worldState.collection.length = 0;\r\n        worldState.difficulty += 1;\r\n        // worldState.trayState.offsetCheckY = 0;\r\n      }\r\n\r\n      worldState.stateTime += delta;\r\n      world.update(delta);\r\n    } else {\r\n      // inputHandler.cleanup();\r\n      // world.update(delta, true);\r\n      Game.score = worldState.score;\r\n      goToLeaderBoardScreen();\r\n      // showLeaderBoard(worldState.score, restartGame);\r\n    }\r\n  };\r\n\r\n  return {\r\n    update,\r\n    destroy() {\r\n      inputHandler.cleanup();\r\n    },\r\n  };\r\n};\r\n\r\nexport default createGameScreenSystem;\r\n","export default (worldState, extra) => {\r\n  const systems = [];\r\n  const passiveSystems = [];\r\n  return {\r\n    addSystem(system, passive = false) {\r\n      system.init && system.init(worldState, extra);\r\n      if (passive) {\r\n        systems.push(system);\r\n        passiveSystems.push(system);\r\n      }\r\n      if (!passive) {\r\n        systems.push(system);\r\n      }\r\n    },\r\n    update(delta, runPassive = true) {\r\n      for (let system of systems) {\r\n        system.update(delta, worldState, extra);\r\n      }\r\n      if (runPassive) {\r\n        for (let system of passiveSystems) {\r\n          system.update(delta, worldState, extra);\r\n        }\r\n      }\r\n    },\r\n  };\r\n};\r\n","import { createViewportAwareInputHandler, fillRect, Vector2 } from \"gdxjs\";\r\nimport createGameScreenSystem from \"./GameScreen\";\r\nimport { checkPointInsideRect } from \"./utils/coordUtils\";\r\n\r\nconst createInstructionScreenSystem = (Game) => {\r\n  const goToGameScreen = async () => {\r\n    Game.setCurrentScreen(await createGameScreenSystem(Game));\r\n  };\r\n\r\n  const { canvas, viewport, width, height, camera, batch, assets } = Game;\r\n\r\n  const inputHandler = createViewportAwareInputHandler(canvas, viewport);\r\n\r\n  const atlas = assets.startScreen;\r\n  const bg = assets.backGround;\r\n\r\n  const button = atlas.findRegion(\"button-play\", -1);\r\n  const banner1 = atlas.findRegion(\"hung_nguyen_lieu_de_ghi_diem\", -1);\r\n  const banner2 = atlas.findRegion(\r\n    \"ne_cac_nguyen_lieu_khong_co_trong_menu\",\r\n    -1\r\n  );\r\n\r\n  const B1_WIDTH = width * 0.9;\r\n  const B1_HEIGHT = (B1_WIDTH * banner1.height) / banner1.width;\r\n\r\n  const B2_WIDTH = width * 0.9;\r\n  const B2_HEIGHT = (B2_WIDTH * banner2.height) / banner2.width;\r\n\r\n  const BUTTON_WIDTH = width / 3.5;\r\n  const BUTTON_HEIGHT = (BUTTON_WIDTH * button.height) / button.width;\r\n\r\n  const buttonInfos = [\r\n    width / 2 - BUTTON_WIDTH / 2,\r\n    (height * 2.6) / 3,\r\n    BUTTON_WIDTH,\r\n    BUTTON_HEIGHT,\r\n  ];\r\n\r\n  const coord = new Vector2();\r\n  let point;\r\n  inputHandler.addEventListener(\"touchStart\", (x, y) => {\r\n    coord.setVector(inputHandler.getTouchedWorldCoord());\r\n    point = { x: coord.x, y: coord.y };\r\n    if (checkPointInsideRect(point, buttonInfos)) {\r\n      goToGameScreen();\r\n    }\r\n  });\r\n\r\n  const update = (delta) => {\r\n    batch.setProjection(camera.combined);\r\n    batch.begin();\r\n    batch.setColor(1, 1, 1, 1);\r\n    fillRect(batch, bg, 0, 0, width, height);\r\n    banner1.draw(\r\n      batch,\r\n      width / 2 - B1_WIDTH / 2,\r\n      height / 16,\r\n      B1_WIDTH,\r\n      B1_HEIGHT\r\n    );\r\n\r\n    banner2.draw(\r\n      batch,\r\n      width / 2 - B2_WIDTH / 2,\r\n      (height * 1.4) / 3,\r\n      B2_WIDTH,\r\n      B2_HEIGHT\r\n    );\r\n\r\n    button.draw(\r\n      batch,\r\n      buttonInfos[0],\r\n      buttonInfos[1],\r\n      buttonInfos[2],\r\n      buttonInfos[3]\r\n    );\r\n    batch.end();\r\n  };\r\n\r\n  return {\r\n    update,\r\n    destroy() {\r\n      inputHandler.cleanup();\r\n    },\r\n  };\r\n};\r\n\r\nexport default createInstructionScreenSystem;\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport RegisterModal from \"../RegisterModal\";\r\n\r\nimport { createViewportAwareInputHandler, fillRect, Vector2 } from \"gdxjs\";\r\nimport { checkPointInsideRect } from \"./utils/coordUtils\";\r\nimport axios from \"../../utils/axios\";\r\nimport analytics from \"../../utils/analytics\";\r\nimport createInstructionScreen from \"./InstructionScreen\";\r\n\r\nconst createStartScreenSystem = (Game) => {\r\n  const goToInstructionScreen = async () => {\r\n    Game.setCurrentScreen(await createInstructionScreen(Game));\r\n  };\r\n\r\n  const { canvas, viewport, width, height, camera, batch, assets } = Game;\r\n\r\n  const inputHandler = createViewportAwareInputHandler(canvas, viewport);\r\n\r\n  const atlas = assets.startScreen;\r\n  const bg = assets.backGround2;\r\n\r\n  const banner = atlas.findRegion(\"1nam-an-lau-mien-phi\", -1);\r\n  const text = atlas.findRegion(\"content\", -1);\r\n  const logo = atlas.findRegion(\"logo\", -1);\r\n  const button = atlas.findRegion(\"button-play\", -1);\r\n  const TEXT_WIDTH = width * 0.9;\r\n  const TEXT_HEIGHT = (TEXT_WIDTH * text.height) / text.width;\r\n\r\n  const LOGO_WIDTH = (width * 2) / 3;\r\n  const LOGO_HEIGHT = (LOGO_WIDTH * logo.height) / logo.width;\r\n\r\n  const BANNER_WIDTH = width * 0.96;\r\n  const BANNER_HEIGHT = (BANNER_WIDTH * banner.height) / banner.width;\r\n\r\n  const BUTTON_WIDTH = width / 3.5;\r\n  const BUTTON_HEIGHT = (BUTTON_WIDTH * button.height) / button.width;\r\n\r\n  const buttonInfos = [\r\n    width / 2 - BUTTON_WIDTH / 2,\r\n    (height * 1.6) / 3,\r\n    BUTTON_WIDTH,\r\n    BUTTON_HEIGHT,\r\n  ];\r\n\r\n  const coord = new Vector2();\r\n  let point;\r\n  inputHandler.addEventListener(\"touchStart\", (x, y) => {\r\n    coord.setVector(inputHandler.getTouchedWorldCoord());\r\n    point = { x: coord.x, y: coord.y };\r\n    if (checkPointInsideRect(point, buttonInfos)) {\r\n      analytics.track(\"startGame\");\r\n      const token = localStorage.getItem(\"@Token\");\r\n      if (!token) {\r\n        analytics.track(\"newUser\");\r\n        const wrapper = document.createElement(\"div\");\r\n        document.body.append(wrapper);\r\n        ReactDOM.render(\r\n          <RegisterModal\r\n            onSubmit={async (formBody) => {\r\n              try {\r\n                const res = await axios.post(\"/register\", formBody);\r\n                const token = res.data;\r\n                localStorage.setItem(\"@Token\", token);\r\n                document.body.removeChild(wrapper);\r\n                analytics.identify(token);\r\n                goToInstructionScreen();\r\n              } catch (e) {}\r\n            }}\r\n          />,\r\n          wrapper\r\n        );\r\n      } else {\r\n        analytics.identify(token);\r\n        goToInstructionScreen();\r\n      }\r\n    }\r\n  });\r\n\r\n  const update = (delta) => {\r\n    batch.setProjection(camera.combined);\r\n    batch.begin();\r\n    batch.setColor(1, 1, 1, 1);\r\n    fillRect(batch, bg, 0, 0, width, height);\r\n    logo.draw(\r\n      batch,\r\n      width / 2 - LOGO_WIDTH / 2,\r\n      height / 30,\r\n      LOGO_WIDTH,\r\n      LOGO_HEIGHT\r\n    );\r\n    text.draw(\r\n      batch,\r\n      width / 2 - TEXT_WIDTH / 2,\r\n      (height * 0.95) / 3,\r\n      TEXT_WIDTH,\r\n      TEXT_HEIGHT\r\n    );\r\n    banner.draw(\r\n      batch,\r\n      width / 2 - BANNER_WIDTH / 2,\r\n      (height * 1.9) / 3,\r\n      BANNER_WIDTH,\r\n      BANNER_HEIGHT\r\n    );\r\n    button.draw(\r\n      batch,\r\n      buttonInfos[0],\r\n      buttonInfos[1],\r\n      buttonInfos[2],\r\n      buttonInfos[3]\r\n    );\r\n    batch.end();\r\n  };\r\n\r\n  return {\r\n    update,\r\n    destroy() {\r\n      inputHandler.cleanup();\r\n    },\r\n  };\r\n};\r\n\r\nexport default createStartScreenSystem;\r\n","import \"./index.css\";\r\nimport {\r\n  createGameLoop,\r\n  createBatch,\r\n  loadTexture,\r\n  loadAtlas,\r\n  createViewport,\r\n  fillRect,\r\n} from \"gdxjs\";\r\nimport createWhiteText from \"gl-white-texture\";\r\nimport loadFontFile from \"./utils/loadFontFile\";\r\n\r\nimport createStartScreenSystem from \"./StartScreen\";\r\n\r\nconst init = async (canvas, infos) => {\r\n  const width = 47;\r\n  const height = 100;\r\n  const viewport = createViewport(canvas, width, height);\r\n  const camera = viewport.getCamera();\r\n  const gl = viewport.getContext();\r\n  const batch = createBatch(gl);\r\n  const whiteTex = createWhiteText(gl);\r\n\r\n  const Game = {\r\n    score: 0,\r\n    width,\r\n    height,\r\n    canvas,\r\n    gl,\r\n    batch,\r\n    camera,\r\n    whiteTex,\r\n    viewport,\r\n    setCurrentScreen(screen) {\r\n      if (Game.currentScreen) {\r\n        Game.currentScreen.destroy();\r\n      }\r\n      Game.currentScreen = screen;\r\n    },\r\n  };\r\n\r\n  const foxLogo = await loadTexture(gl, \"./assets/logo.png\");\r\n  const LOGO_WIDTH = width / 1.8;\r\n  const LOGO_HEIGHT = (LOGO_WIDTH * foxLogo.height) / foxLogo.width;\r\n\r\n  let counter = 0;\r\n  const numOfAssets = 10;\r\n\r\n  const draw = () => {\r\n    batch.setProjection(camera.combined);\r\n    batch.begin();\r\n    batch.setColor(255 / 255, 114 / 255, 22 / 255, 1);\r\n    fillRect(batch, whiteTex, 0, 0, width, height);\r\n    batch.setColor(1, 1, 1, 1);\r\n    fillRect(\r\n      batch,\r\n      foxLogo,\r\n      width / 2 - LOGO_WIDTH / 2,\r\n      (height * 0.8) / 3,\r\n      LOGO_WIDTH,\r\n      LOGO_HEIGHT\r\n    );\r\n    batch.setColor(1, 1, 1, 1);\r\n    fillRect(\r\n      batch,\r\n      whiteTex,\r\n      width / 2 - width / (1.45 * 2),\r\n      (height * 2.5) / 4 - height / 50,\r\n      width / 1.45,\r\n      height / 25\r\n    );\r\n    batch.setColor(255 / 255, 114 / 255, 22 / 255, 1);\r\n    fillRect(\r\n      batch,\r\n      whiteTex,\r\n      width / 2 - width / 3,\r\n      (height * 2.5) / 4 - height / 60,\r\n      width / 1.5,\r\n      height / 30\r\n    );\r\n    batch.setColor(1, 1, 1, 1);\r\n    let ratio = counter / numOfAssets;\r\n    fillRect(\r\n      batch,\r\n      whiteTex,\r\n      width / 2 - width / (1.55 * 2),\r\n      (height * 2.5) / 4 - height / 80,\r\n      (width / 1.55) * ratio,\r\n      height / 40\r\n    );\r\n    batch.end();\r\n  };\r\n\r\n  const doAndCount = (promise) =>\r\n    promise.then((result) => {\r\n      draw();\r\n      counter += 1;\r\n      return result;\r\n    });\r\n\r\n  const [\r\n    gameAssets,\r\n    animAssets,\r\n    backGround,\r\n    newAssets,\r\n    foodInPot,\r\n    startScreen,\r\n    backGround2,\r\n    leaderBoard,\r\n    numberFont,\r\n    textFont,\r\n  ] = await Promise.all([\r\n    doAndCount(loadAtlas(gl, \"./assets/food_catch.atlas\")),\r\n    doAndCount(loadAtlas(gl, \"./assets/hotpot.atlas\")),\r\n    doAndCount(loadTexture(gl, \"./assets/bg.jpg\")),\r\n    doAndCount(loadAtlas(gl, \"./assets/hotpot-additional.atlas\")),\r\n    doAndCount(loadAtlas(gl, \"./assets/foodinhotpot.atlas\")),\r\n    doAndCount(loadAtlas(gl, \"./assets/start_menu.atlas\")),\r\n    doAndCount(loadTexture(gl, \"./assets/bbg-start.jpg\")),\r\n    doAndCount(loadAtlas(gl, \"./assets/leaderBoard.atlas\")),\r\n    doAndCount(loadFontFile(gl, \"./fonts/iciel-64.fnt\")),\r\n    doAndCount(loadFontFile(gl, \"./fonts/mijas.fnt\")),\r\n  ]);\r\n\r\n  let assets = {\r\n    gameAssets,\r\n    animAssets,\r\n    backGround,\r\n    newAssets,\r\n    foodInPot,\r\n    startScreen,\r\n    backGround2,\r\n    leaderBoard,\r\n  };\r\n  Game.assets = assets;\r\n\r\n  Game.font = { numberFont, textFont };\r\n  Game.setCurrentScreen(await createStartScreenSystem(Game));\r\n\r\n  gl.clearColor(255 / 255, 114 / 255, 22 / 255, 1);\r\n  const update = (delta) => {\r\n    gl.clear(gl.COLOR_BUFFER_BIT);\r\n    if (Game.currentScreen) {\r\n      Game.currentScreen.update(delta);\r\n    }\r\n  };\r\n\r\n  createGameLoop(update);\r\n};\r\n\r\nexport default init;\r\n","import \"./gameModal.css\";\r\nimport React, { useRef, useEffect } from \"react\";\r\nimport initGame from \"./game\";\r\nimport Modal from \"./Modal\";\r\nexport default ({ onClose }) => {\r\n  const canvasRef = useRef();\r\n  const infosRef = useRef();\r\n  useEffect(() => {\r\n    if (canvasRef.current) {\r\n      initGame(canvasRef.current, infosRef.current);\r\n    }\r\n  }, [canvasRef, infosRef]);\r\n  return (\r\n    <Modal>\r\n      <div className=\"canvas-wrapper\">\r\n        <canvas ref={canvasRef}></canvas>\r\n        <div ref={infosRef} id=\"infos\"></div>\r\n        {/* <button className=\"close-button\" onClick={() => onClose && onClose()}>\r\n          X\r\n        </button> */}\r\n      </div>\r\n    </Modal>\r\n  );\r\n};\r\n","import \"./body.css\";\r\nimport React from \"react\";\r\nimport Container from \"./Container\";\r\nimport GameModal from \"./GameModal\";\r\nexport default () => {\r\n  return (\r\n    <React.Fragment>\r\n      <Container>\r\n        <GameModal />\r\n      </Container>\r\n    </React.Fragment>\r\n  );\r\n};\r\n","import React from \"react\";\r\n// import logo from \"./logo.svg\";\r\nimport \"./App.css\";\r\n// import Header from \"./components/Header\";\r\nimport Body from \"./components/Body\";\r\nfunction App() {\r\n  return (\r\n    // <React.Fragment>\r\n    // {/* <Header></Header> */}\r\n    <Body></Body>\r\n    // {/* </React.Fragment> */}\r\n  );\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' },\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready\r\n      .then(registration => {\r\n        registration.unregister();\r\n      })\r\n      .catch(error => {\r\n        console.error(error.message);\r\n      });\r\n  }\r\n}\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport \"./index.css\";\r\nimport App from \"./App\";\r\nimport * as serviceWorker from \"./serviceWorker\";\r\nimport analytics from \"./utils/analytics\";\r\n\r\nanalytics.page();\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById(\"root\")\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n","module.exports = __webpack_public_path__ + \"static/media/logo.c6c718b2.jpg\";"],"sourceRoot":""}